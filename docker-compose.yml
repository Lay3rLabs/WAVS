#
# docker compose up
#
# docker exec -it wavs bash
# wavs-cli deploy-service --component /wavs/components/eth_trigger_echo.wasm
# wavs-cli add-task --input "echo value" --service-id <SERVICE_ID>
#
services:
  anvil:
    image: "ghcr.io/foundry-rs/foundry:stable"
    container_name: "anvil"
    network_mode: "host"
    ports:
      - "8545:8545"
    environment:
      ANVIL_IP_ADDR: 0.0.0.0
    command: ["anvil", "--no-cors"]

  # The main instance all WAVS interaction will happen from
  wavs:
    build: .
    image: "ghcr.io/lay3rlabs/wavs:local"
    container_name: "wavs"
    stop_signal: SIGKILL
    depends_on: ["anvil"]
    network_mode: "host"
    env_file:
      - "./packages/wavs/.env"
      - "./packages/cli/.env"
      - "./packages/aggregator/.env"
    ports:
      - "8000:8000"
    environment:
      WAVS_HOME: "/wavs/packages/wavs"
      WAVS_CLI_HOME: "/wavs/packages/cli"
      WAVS_AGGREGATOR_HOME: "/wavs/packages/aggregator"
    command: ["wavs"]
    volumes:
      - "./:/wavs"
      - "./.docker/cli:/root/wavs/cli/"

  aggregator:
    image: "ghcr.io/lay3rlabs/wavs:local"
    container_name: "wavs-aggregator"
    stop_signal: SIGKILL
    depends_on: ["wavs"]
    env_file: "./packages/aggregator/.env"
    ports:
      - "8001:8001"
    command: ["aggregator"]
    volumes:
      - "./packages/aggregator:/wavs"
    network_mode: "host"

  # TODO: Eigenlayer load state
  deploy-eigenlayer:
    image: "ghcr.io/lay3rlabs/wavs:local"
    container_name: "wavs-deploy-eigenlayer"
    depends_on: ["wavs"]
    env_file: "./packages/cli/.env"
    command: ["wavs-cli", "deploy-core"]
    volumes:
      - "./packages/cli:/wavs"
      - "./.docker/cli:/root/wavs/cli/"
    network_mode: "host"
