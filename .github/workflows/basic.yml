# Based on https://github.com/actions-rs/example/blob/master/.github/workflows/quickstart.yml

on: [pull_request]

name: Basic Checks

# Ensures that only a single workflow per PR will run at a time.
# Cancels in-progress jobs if new commit is pushed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: 1.21

# TODO: perform other tests on wasi examples
jobs:
  test:
    name: Wavs Test Suite
    runs-on: linux-8-core
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.88.0
          #   target: wasm32-unknown-unknown
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo target
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-target-test-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-test-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-target-test-
            ${{ runner.os }}-cargo-target-

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Set env
        run: echo "WAVS_SUBMISSION_MNEMONIC=\"test test test test test test test test test test test junk\"" >> $GITHUB_ENV

      - name: Set env
        run: echo "WAVS_CLI_EVM_CREDENTIAL=\"test test test test test test test test test test test junk\"" >> $GITHUB_ENV

      - name: Set env
        run: echo "WAVS_AGGREGATOR_CREDENTIAL=\"test test test test test test test test test test test junk\"" >> $GITHUB_ENV

      - name: Set env
        run: echo "WAVS_COSMOS_SUBMISSION_MNEMONIC=\"reward index time stem expire cheap worth fence coil option treat ensure install entry zone mule benefit success remain rebuild inherit eyebrow cluster sheriff\"" >> $GITHUB_ENV

      - name: Set env
        run: echo "WAVS_CLI_COSMOS_MNEMONIC=\"reward index time stem expire cheap worth fence coil option treat ensure install entry zone mule benefit success remain rebuild inherit eyebrow cluster sheriff\"" >> $GITHUB_ENV

      - name: Run temp tests
        uses: actions-rs/cargo@v1
        with:
          working-directory: ./packages/engine
          toolchain: 1.88.0
          command: test
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: info

      # - name: Run tests
      #   uses: actions-rs/cargo@v1
      #   with:
      #     toolchain: 1.88.0
      #     command: test
      #     args: --workspace --locked -- --nocapture
      #   env:
      #     RUST_BACKTRACE: 1
      #     RUST_LOG: info

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.88.0
          override: true
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo target
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ runner.os }}-cargo-target-lint-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-lint-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-target-lint-
            ${{ runner.os }}-cargo-target-

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: 1.88.0
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          toolchain: 1.88.0
          command: clippy
          args: --all-targets -- -D warnings
