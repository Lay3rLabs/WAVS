on: [pull_request]

name: Basic Checks (Optimized)

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUST_VERSION: 1.88.0
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short
  WAVS_SUBMISSION_MNEMONIC: "test test test test test test test test test test test junk"
  WAVS_CLI_EVM_CREDENTIAL: "test test test test test test test test test test test junk"
  WAVS_AGGREGATOR_CREDENTIAL: "test test test test test test test test test test test junk"
  WAVS_COSMOS_SUBMISSION_MNEMONIC: "reward index time stem expire cheap worth fence coil option treat ensure install entry zone mule benefit success remain rebuild inherit eyebrow cluster sheriff"
  WAVS_CLI_COSMOS_MNEMONIC: "reward index time stem expire cheap worth fence coil option treat ensure install entry zone mule benefit success remain rebuild inherit eyebrow cluster sheriff"

jobs:
  test:
    name: Test ${{ matrix.package }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        package: [wavs-types, wavs-engine, utils, aggregator, cli, dev-tool, layer-tests, wavs]
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "v0-workspace-${{ hashFiles('**/Cargo.lock') }}"
          workspaces: './'
          cache-targets: true
          cache-directories: |
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run tests
        run: cargo test -p ${{ matrix.package }} --locked -- --nocapture
        env:
          RUST_LOG: info

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "v0-workspace-${{ hashFiles('**/Cargo.lock') }}"
          workspaces: './'
          cache-targets: true
          cache-directories: |
            ~/.cargo/registry/cache
            ~/.cargo/registry/index
            ~/.cargo/git/db

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings