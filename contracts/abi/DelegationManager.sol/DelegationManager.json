{"abi":[{"type":"constructor","inputs":[{"name":"_strategyManager","type":"address","internalType":"contract IStrategyManager"},{"name":"_slasher","type":"address","internalType":"contract ISlasher"},{"name":"_eigenPodManager","type":"address","internalType":"contract IEigenPodManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"DELEGATION_APPROVAL_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"DOMAIN_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"MAX_WITHDRAWAL_DELAY_BLOCKS","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"STAKER_DELEGATION_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"beaconChainETHStrategy","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"stateMutability":"view"},{"type":"function","name":"calculateCurrentStakerDelegationDigestHash","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"},{"name":"expiry","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"calculateDelegationApprovalDigestHash","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"},{"name":"_delegationApprover","type":"address","internalType":"address"},{"name":"approverSalt","type":"bytes32","internalType":"bytes32"},{"name":"expiry","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"calculateStakerDelegationDigestHash","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"_stakerNonce","type":"uint256","internalType":"uint256"},{"name":"operator","type":"address","internalType":"address"},{"name":"expiry","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"calculateWithdrawalRoot","inputs":[{"name":"withdrawal","type":"tuple","internalType":"struct IDelegationManager.Withdrawal","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"completeQueuedWithdrawal","inputs":[{"name":"withdrawal","type":"tuple","internalType":"struct IDelegationManager.Withdrawal","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"middlewareTimesIndex","type":"uint256","internalType":"uint256"},{"name":"receiveAsTokens","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"completeQueuedWithdrawals","inputs":[{"name":"withdrawals","type":"tuple[]","internalType":"struct IDelegationManager.Withdrawal[]","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]},{"name":"tokens","type":"address[][]","internalType":"contract IERC20[][]"},{"name":"middlewareTimesIndexes","type":"uint256[]","internalType":"uint256[]"},{"name":"receiveAsTokens","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cumulativeWithdrawalsQueued","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decreaseDelegatedShares","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delegateTo","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approverSignatureAndExpiry","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"approverSalt","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delegateToBySignature","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"},{"name":"stakerSignatureAndExpiry","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"approverSignatureAndExpiry","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"approverSalt","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delegatedTo","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"delegationApprover","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"delegationApproverSaltIsSpent","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"domainSeparator","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"eigenPodManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEigenPodManager"}],"stateMutability":"view"},{"type":"function","name":"getDelegatableShares","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address[]","internalType":"contract IStrategy[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getOperatorShares","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getWithdrawalDelay","inputs":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"increaseDelegatedShares","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"initialOwner","type":"address","internalType":"address"},{"name":"_pauserRegistry","type":"address","internalType":"contract IPauserRegistry"},{"name":"initialPausedStatus","type":"uint256","internalType":"uint256"},{"name":"_minWithdrawalDelayBlocks","type":"uint256","internalType":"uint256"},{"name":"_strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"_withdrawalDelayBlocks","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isDelegated","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"minWithdrawalDelayBlocks","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"modifyOperatorDetails","inputs":[{"name":"newOperatorDetails","type":"tuple","internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"operatorDetails","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"operatorShares","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[{"name":"newPausedStatus","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseAll","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[{"name":"index","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"pauserRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPauserRegistry"}],"stateMutability":"view"},{"type":"function","name":"pendingWithdrawals","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"queueWithdrawals","inputs":[{"name":"queuedWithdrawalParams","type":"tuple[]","internalType":"struct IDelegationManager.QueuedWithdrawalParams[]","components":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"},{"name":"withdrawer","type":"address","internalType":"address"}]}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerAsOperator","inputs":[{"name":"registeringOperatorDetails","type":"tuple","internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]},{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinWithdrawalDelayBlocks","inputs":[{"name":"newMinWithdrawalDelayBlocks","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPauserRegistry","inputs":[{"name":"newPauserRegistry","type":"address","internalType":"contract IPauserRegistry"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setStrategyWithdrawalDelayBlocks","inputs":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"withdrawalDelayBlocks","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slasher","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ISlasher"}],"stateMutability":"view"},{"type":"function","name":"stakerNonce","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"stakerOptOutWindowBlocks","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"strategyManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IStrategyManager"}],"stateMutability":"view"},{"type":"function","name":"strategyWithdrawalDelayBlocks","inputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"undelegate","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"withdrawalRoots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[{"name":"newPausedStatus","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperatorMetadataURI","inputs":[{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"MinWithdrawalDelayBlocksSet","inputs":[{"name":"previousValue","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newValue","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OperatorDetailsModified","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"newOperatorDetails","type":"tuple","indexed":false,"internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"OperatorMetadataURIUpdated","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"metadataURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"OperatorRegistered","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorDetails","type":"tuple","indexed":false,"internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"OperatorSharesDecreased","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"staker","type":"address","indexed":false,"internalType":"address"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OperatorSharesIncreased","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"staker","type":"address","indexed":false,"internalType":"address"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"newPausedStatus","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PauserRegistrySet","inputs":[{"name":"pauserRegistry","type":"address","indexed":false,"internalType":"contract IPauserRegistry"},{"name":"newPauserRegistry","type":"address","indexed":false,"internalType":"contract IPauserRegistry"}],"anonymous":false},{"type":"event","name":"StakerDelegated","inputs":[{"name":"staker","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StakerForceUndelegated","inputs":[{"name":"staker","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StakerUndelegated","inputs":[{"name":"staker","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StrategyWithdrawalDelayBlocksSet","inputs":[{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"previousValue","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newValue","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"newPausedStatus","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"WithdrawalCompleted","inputs":[{"name":"withdrawalRoot","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"WithdrawalQueued","inputs":[{"name":"withdrawalRoot","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"withdrawal","type":"tuple","indexed":false,"internalType":"struct IDelegationManager.Withdrawal","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]}],"anonymous":false}],"bytecode":{"object":"","sourceMap":"1137:36085:12:-:0;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;5656:34:13;;5700;;5744:18;;-1:-1:-1;1137:36085:12;;;;;;;;;;;;5527:30:51;5523:138;;-1:-1:-1;3009:13:12;2989:33;;1137:36085;;;;;;;;5656:34:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5744:18:13;1137:36085:12;;;;;5700:34:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:33;1137:36085;;;;;;5523:138:51;1137:36085:12;;;;;;-1:-1:-1;1137:36085:12;5622:28:51;1137:36085:12;;;;;;5622:28:51;5523:138;;;1137:36085:12;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;-1:-1:-1;1137:36085:12;;;;;;-1:-1:-1;1137:36085:12;;;;;-1:-1:-1;1137:36085:12","linkReferences":{}},"deployedBytecode":{"object":"0x60c06040526004361015610011575f80fd5b5f3560e01c80630449ca39146134ee57806304a4f979146134b45780630b9f487a146134785780630dd8dd02146132685780630f589e5914612eee57806310d67a2f14612e65578063132d496714612da4578063136439dd14612c8b5780631522bf0214612c2d5780631692836514612be95780631bbce09114612ba357806320606b7014612b6957806322bf40e4146128fd57806328a573ae1461283c57806329c77d4f14612804578063334043961461207457806339b70e38146120305780633cdeb5e014611fed5780633e28391d14611fb05780634337738214611f765780634665bcda14611f325780634fc40b6114611f15578063595c6a6714611e5f578063597b36da14611e2a5780635ac86ab714611df75780635c975abb14611dda57806360d7faed1461160f578063635bbd10146115eb57806365da1264146115ab5780636d70f7ae1461157e578063715018a614611523578063778e55f3146114d35780637f54807114611131578063886f1195146111095780638da5cb5b146110e1578063900413471461102b5780639104c31914610ffd57806399be81c814610f0c578063a178848414610ed4578063b134427114610e90578063b7f06ebe14610e61578063bb45fef214610e18578063c448feb814610dfb578063c488375a14610dc3578063c5e480db14610d20578063c94b511114610ced578063ca661c0414610cd0578063cf80873e14610c59578063da8be86414610884578063eea9064b146104fd578063f16172b01461045e578063f2fde38b146103cf578063f698da25146103ad5763fabc1cbc1461026b575f80fd5b346103a95760203660031901126103a95760655460405163755b36bd60e11b81526004803592602091839182906001600160a01b03165afa801561039e576102c5915f9161036f575b506001600160a01b03163314613b66565b60665419811981160361030457806066556040519081527f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c60203392a2005b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b610391915060203d602011610397575b61038981836136fe565b810190613b47565b5f6102b4565b503d61037f565b6040513d5f823e3d90fd5b5f80fd5b346103a9575f3660031901126103a95760206103c76141c3565b604051908152f35b346103a95760203660031901126103a9576103e86135a3565b6103f0614acc565b6001600160a01b0381161561040a5761040890614d64565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346103a95760603660031901126103a95761047833613de3565b156104865761040833614713565b60405162461bcd60e51b815260206004820152604360248201527f44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7260448201527f44657461696c733a2063616c6c6572206d75737420626520616e206f706572616064820152623a37b960e91b608482015260a490fd5b346103a95760603660031901126103a9576105166135a3565b6024356001600160401b0381116103a9576105359036906004016138c3565b335f908152609a6020526040902054604435906001600160a01b031661080e5761055e83613de3565b1561079457610574600180606654161415613a2a565b6001600160a01b038381165f8181526099602052604090206001015490939116908115158061078a575b80610780575b61063d575b505050335f52609a60205260405f20816bffffffffffffffffffffffff60a01b825416179055337fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433045f80a36105fd33613e98565b91905f5b8151811015610408576001906106376001600160a01b036106228386613b0c565b511661062e8388613b0c565b51903387614e98565b01610601565b602081018051421161071557825f52609c60205260405f20845f5260205260ff60405f2054166106aa576106a29361069a91845f52609c60205260405f20825f5260205260405f20600160ff1982541617905551908488336139a5565b905191614fb9565b8280806105a9565b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f76657253616c7420616c7265616479207370656e740000000000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f766572207369676e617475726520657870697265640000000000000000006064820152608490fd5b50833314156105a4565b508133141561059e565b60405162461bcd60e51b815260206004820152604660248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f3a206f7060448201527f657261746f72206973206e6f74207265676973746572656420696e2045696765606482015265372630bcb2b960d11b608482015260a490fd5b60405162461bcd60e51b815260206004820152604260248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f3a20737460448201527f616b657220697320616c7265616479206163746976656c792064656c65676174606482015261195960f21b608482015260a490fd5b346103a95760203660031901126103a95761089d6135a3565b6108ae600280606654161415613a2a565b6001600160a01b038082165f908152609a60205260409020541615610be2576108d681613de3565b610b77576001600160a01b0381168015610b0c575f818152609a60205260409020546001600160a01b03169033811480159081610b03575b8015610ae3575b15610a785761092384613e98565b929091610a4d575b83817ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af446765f80a35f908152609a6020526040902080546001600160a01b03191690558051806109a157505050505061099d6040516109896020826136fe565b5f81525f3681375b604051918291826135f9565b0390f35b6109ad90939193613a76565b93604092602092905f5b8651811015610a3d57600190610a2c87516109d289826136fe565b838152873660208301378851906109e98a836136fe565b84825288366020840137848060a01b03610a03858d613b0c565b5116610a0e82613aff565b52610a198487613b0c565b51610a2383613aff565b528787816141f8565b610a36828b613b0c565b52016109b7565b5050505050505061099d90610991565b83817ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a5f80a361092b565b60405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6c6c65722063616e6e6f7420756e64656c6567617465207374616b65720000006064820152608490fd5b50825f52609960205260018060a01b03600160405f200154163314610915565b5082331461090e565b60405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6e6e6f7420756e64656c6567617465207a65726f2061646472657373000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f7060448201527f657261746f72732063616e6e6f7420626520756e64656c6567617465640000006064820152608490fd5b60a460405162461bcd60e51b815260206004820152604460248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20737460448201527f616b6572206d7573742062652064656c65676174656420746f20756e64656c656064820152636761746560e01b6084820152fd5b346103a95760203660031901126103a957610c7a610c756135a3565b613e98565b60405190604082016040835283518091526020606084019401905f5b818110610cb157848061099d8887838203602085015261394e565b82516001600160a01b0316865260209586019590920191600101610c96565b346103a9575f3660031901126103a957602060405162034bc08152f35b346103a95760803660031901126103a95760206103c7610d0b6135a3565b610d136135cf565b6064359160243590613e16565b346103a95760203660031901126103a957610d396135a3565b5f60408051610d47816136c8565b828152826020820152015260018060a01b03165f526099602052606060405f2063ffffffff604051610d78816136c8565b6001808060a01b0384541693848352015490826040602083019260018060a01b0385168452019260a01c16825260405193845260018060a01b03905116602084015251166040820152f35b346103a95760203660031901126103a9576001600160a01b03610de46135a3565b165f5260a1602052602060405f2054604051908152f35b346103a9575f3660031901126103a9576020609d54604051908152f35b346103a95760403660031901126103a9576001600160a01b03610e396135a3565b165f52609c60205260405f206024355f52602052602060ff60405f2054166040519015158152f35b346103a95760203660031901126103a9576004355f52609e602052602060ff60405f2054166040519015158152f35b346103a9575f3660031901126103a9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103a95760203660031901126103a9576001600160a01b03610ef56135a3565b165f52609f602052602060405f2054604051908152f35b346103a95760203660031901126103a9576004356001600160401b0381116103a957610f3c903690600401613632565b610f4533613de3565b15610f8257610f7d7f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b670809091604051918291339583613b20565b0390a2005b60405162461bcd60e51b815260206004820152604760248201527f44656c65676174696f6e4d616e616765722e7570646174654f70657261746f7260448201527f4d657461646174615552493a2063616c6c6572206d75737420626520616e206f6064820152663832b930ba37b960c91b608482015260a490fd5b346103a9575f3660031901126103a957602060405173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08152f35b346103a95760403660031901126103a9576110446135a3565b6024356001600160401b0381116103a95761106390369060040161379b565b61106d8151613a76565b6001600160a01b03909216915f5b82518110156110cb575f848152609860205260409020600191906001600160a01b036110a78387613b0c565b5116838060a01b03165f5260205260405f20546110c48285613b0c565b520161107b565b6040516020808252819061099d9082018561394e565b346103a9575f3660031901126103a9576033546040516001600160a01b039091168152602090f35b346103a9575f3660031901126103a9576065546040516001600160a01b039091168152602090f35b346103a95760a03660031901126103a95761114a6135a3565b6111526135b9565b6044356001600160401b0381116103a9576111719036906004016138c3565b6064356001600160401b0381116103a9576111909036906004016138c3565b90608435602082018051421161145e576001600160a01b038087165f908152609a6020526040902054166113dd576111c785613de3565b156113585761120d9060018060a01b03871693845f52609b60205260016111f660405f2054935189858c613e16565b92865f52609b6020520160405f2055519087614fb9565b61121e600180606654161415613a2a565b6001600160a01b038481165f8181526099602052604090206001015490949116908115158061134e575b80611344575b6112df575b5050505f818152609a6020526040812080546001600160a01b031916841790557fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049080a36112a082613e98565b915f5b8251811015610408576001906112d96001600160a01b036112c48387613b0c565b51166112d08388613b0c565b51908886614e98565b016112a3565b602081014281511061071557825f52609c60205260405f20845f5260205260ff60405f2054166106aa5761133c9361069a91845f52609c60205260405f20825f5260205260405f20600160ff19825416179055519084898b6139a5565b848080611253565b508433141561124e565b5081331415611248565b60405162461bcd60e51b815260206004820152605160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a206f70657261746f72206973206e6f7420726567697374656064820152703932b21034b71022b4b3b2b72630bcb2b960791b608482015260a490fd5b60405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b657220697320616c726561647920616374697660648201526c195b1e4819195b1959d85d1959609a1b608482015260a490fd5b60405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b6572207369676e6174757265206578706972656064820152601960fa1b608482015260a490fd5b346103a95760403660031901126103a9576114ec6135a3565b6114f46135b9565b6001600160a01b039182165f908152609860209081526040808320949093168252928352819020549051908152f35b346103a9575f3660031901126103a95761153b614acc565b603380546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103a95760203660031901126103a95760206115a161159c6135a3565b613de3565b6040519015158152f35b346103a95760203660031901126103a9576001600160a01b036115cc6135a3565b165f52609a602052602060018060a01b0360405f205416604051908152f35b346103a95760203660031901126103a957611604614acc565b610408600435614dac565b346103a95760803660031901126103a9576004356001600160401b0381116103a957806004019060e060031982360301126103a9576024356001600160401b0381116103a957611663903690600401613573565b9190926064359283151584036103a957611684600480606654161415613a2a565b611693600260c9541415613cac565b600260c9556116aa6116a53684613805565b613dc6565b805f52609e60205260ff60405f20541615611d765760848401946116df6116d087614702565b63ffffffff609d549116613e77565b4310611cf8576001600160a01b036116f960448701613991565b163303611c875780611c0f575b5f828152609e60205260409020805460ff1916905515611945579360a484019360c401905f5b6117368686613aca565b905081101561191d57879061179761174d84614702565b8261177261176d61175e8c8c613aca565b6001600160a01b039491613981565b613991565b165f5260a1602052611790439163ffffffff60405f20549116613e77565b1115614f1d565b86866117d661176d84896117cf826117c38c6117c961176d846117c36117bc8d613991565b9d8d613aca565b90613981565b98613aca565b3597613981565b906001600160a01b031673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0810361188b5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692833b156103a95760405162387b1360e81b81526001600160a01b0390921660048301523360248301526044820152915f908390606490829084905af191821561039e5760019261187b575b505b0161172c565b5f611885916136fe565b89611873565b90939091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103a9575f9283608492604051978895869463c608c7f360e01b86523360048701526024860152604485015260018060a01b031660648401525af191821561039e5760019261190d575b50611875565b5f611917916136fe565b89611907565b5050505050505f51602061544e5f395f51905f5291506020905b604051908152a1600160c955005b93929490335f52609a60205260018060a01b0360405f205416905f9460a48801955b6119718787613aca565b9050811015611bf057889061199961198884614702565b8261177261176d61175e8d8d613aca565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0816119bf61176d61175e8c8c613aca565b1603611ae157611a1360206119e4836117c360c46119dc8d613991565b97018c613aca565b6040516303a041cf60e21b81526001600160a01b03861660048201529035602482015291829081906044820190565b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561039e575f91611aaf575b506001600160a01b038084165f908152609a602052604090205460019484939291909116908a8c83611a8a575b5050505050505b01611967565b611aa4956117c361176d92611a9e94613aca565b91614e98565b808b80808a8c611a7d565b90506020813d8211611ad9575b81611ac9602093836136fe565b810103126103a957516001611a50565b3d9150611abc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169150611b1b61176d828689613981565b611b2c61176d836117c38c8c613aca565b9060c48c0191611b40846117c3858d613aca565b3594803b156103a95760405163c4623ea160e01b81523360048201526001600160a01b03938416602482015291909216604482015260648101949094525f908490608490829084905af190811561039e576001938992611be0575b50898388611bad575b50505050611a84565b6117c3611bc761176d836117c3611bce96611bd799613aca565b938c613aca565b35903388614e98565b868b8983611ba4565b5f611bea916136fe565b8c611b9b565b505050505050505f51602061544e5f395f51905f529150602090611937565b611c1c60a4860185613aca565b841490506117065760405162461bcd60e51b815260206004820152604260248201525f51602061542e5f395f51905f5260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a490fd5b60405162461bcd60e51b815260206004820152605060248201525f51602061542e5f395f51905f5260448201527f645769746864726177616c3a206f6e6c7920776974686472617765722063616e60648201526f1031b7b6b83632ba329030b1ba34b7b760811b608482015260a490fd5b60405162461bcd60e51b815260206004820152605f60248201525f51602061542e5f395f51905f5260448201527f645769746864726177616c3a206d696e5769746864726177616c44656c61794260648201527f6c6f636b7320706572696f6420686173206e6f74207965742070617373656400608482015260a490fd5b60405162461bcd60e51b815260206004820152604360248201525f51602061542e5f395f51905f5260448201527f645769746864726177616c3a20616374696f6e206973206e6f7420696e20717560648201526265756560e81b608482015260a490fd5b346103a9575f3660031901126103a9576020606654604051908152f35b346103a95760203660031901126103a95760043560ff81168091036103a95760016020911b806066541614604051908152f35b346103a95760203660031901126103a9576004356001600160401b0381116103a9576103c76116a56020923690600401613805565b346103a9575f3660031901126103a95760655460405163237dfb4760e11b815233600482015290602090829060249082906001600160a01b03165afa801561039e57611eb2915f91611ee6575b50613c4f565b5f196066556040515f1981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b611f08915060203d602011611f0e575b611f0081836136fe565b810190613c37565b82611eac565b503d611ef6565b346103a9575f3660031901126103a95760206040516213c6808152f35b346103a9575f3660031901126103a9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103a9575f3660031901126103a95760206040517f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b8152f35b346103a95760203660031901126103a95760206115a1611fce6135a3565b6001600160a01b039081165f908152609a602052604090205416151590565b346103a95760203660031901126103a9576001600160a01b0361200e6135a3565b165f526099602052602060018060a01b03600160405f20015416604051908152f35b346103a9575f3660031901126103a9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103a95760803660031901126103a9576004356001600160401b0381116103a9576120a4903690600401613573565b9060a0526024356001600160401b0381116103a9576120c7903690600401613573565b6044929192356001600160401b0381116103a9576120e9903690600401613573565b9190936064356001600160401b0381116103a9579361210f869492953690600401613573565b949091612123600480606654161415613a2a565b612132600260c9541415613cac565b600260c9555f935b818510156127fd578460051b8060a051013560805260de1960a05136030160805112156103a957868610156127e95761217590890189613aca565b969098612183878487613981565b5061218f878a88613981565b35988915158a036103a9576121ad6116a53660805160a05101613805565b998a5f52609e60205260ff60405f20541615611d76576121d46080805160a0510101614702565b6121e8439163ffffffff609d549116613e77565b11611cf85760805160a0516001600160a01b03916122099101604001613991565b163303611c875780612769575b5f8b8152609e60205260409020805460ff1916905515612456575f5b60805160a08051612247920190810190613aca565b9050811015612420578b906122856122666080805160a0510101614702565b8261177261176d61175e60a06080518151010160805160a05101613aca565b61229460805160a05101613991565b8b6122d961176d846122bb61176d826117c360a06080518151010160805160a05101613aca565b936117cf826117c360c060805160a051010160805160a05101613aca565b906001600160a01b031673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0810361238e5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692833b156103a95760405162387b1360e81b81526001600160a01b0390921660048301523360248301526044820152915f908390606490829084905af191821561039e5760019261237e575b505b01612232565b5f612388916136fe565b8d612376565b90939091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103a9575f9283608492604051978895869463c608c7f360e01b86523360048701526024860152604485015260018060a01b031660648401525af191821561039e57600192612410575b50612378565b5f61241a916136fe565b8d61240a565b50949950949297600192975060205f51602061544e5f395f51905f52919792975b604051908152a101939496919590929661213a565b335f908152609a60205260408120546001600160a01b0316999897969594939291905b60805160a0805161248e920190810190613aca565b9050811015612745578c906124ad6122666080805160a0510101614702565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0816124e161176d61175e60a06080518151010160805160a05101613aca565b16036126105761254991506124fb60805160a05101613991565b602061251a836117c360c060805160a051010160805160a05101613aca565b6040516303a041cf60e21b81526001600160a01b03841660048201529035602482015293849081906044820190565b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1801561039e575f906125de575b6001600160a01b038281165f908152609a60205260409020546001955016806125b3575b5050505b01612479565b6125d692611a9e61176d866117c360a06080518151010160805160a05101613aca565b8e80806125a9565b506020833d8211612608575b816125f7602093836136fe565b810103126103a95760019251612585565b3d91506125ea565b61264761176d828d60018060a01b037f00000000000000000000000000000000000000000000000000000000000000001695613981565b61266661176d836117c360a06080518151010160805160a05101613aca565b9060c060805160a051010191612686846117c38560805160a05101613aca565b3594803b156103a95760405163c4623ea160e01b81523360048201526001600160a01b03938416602482015291909216604482015260648101949094525f908490608490829084905af192831561039e57600193612735575b508c806126ee575b50506125ad565b61272e91612725846117c361271861176d836117c360a06080518151010160805160a05101613aca565b9360805160a05101613aca565b35913390614e98565b8e8c6126e7565b5f61273f916136fe565b8f6126df565b5095949a509591975095505f51602061544e5f395f51905f52602060019399612441565b60805160a0805161277e920190810190613aca565b8b1490506122165760405162461bcd60e51b815260206004820152604260248201525f51602061542e5f395f51905f5260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a490fd5b634e487b7160e01b5f52603260045260245ffd5b600160c955005b346103a95760203660031901126103a9576001600160a01b036128256135a3565b165f52609b602052602060405f2054604051908152f35b346103a95761284a3661365f565b90337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480156128cb575b61288790613bc5565b6001600160a01b038084165f908152609a6020526040902054166128a757005b6001600160a01b038084165f908152609a6020526040902054610408949116614e98565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461287e565b346103a95760c03660031901126103a9576129166135a3565b61291e6135b9565b604435906084356001600160401b0381116103a957612941903690600401613573565b60a4929192356001600160401b0381116103a957612963903690600401613573565b9390925f549660ff8860081c161597888099612b5c575b8015612b45575b15612ae95760ff1981166001175f5588612ad8575b506065546001600160a01b03161580612ac6575b15612a4b576129ef6129ff9288612a0f996066556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a261496b565b6129f7614cf2565b609755614d64565b612a0a606435614dac565b614b24565b612a1557005b61ff00195f54165f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a490fd5b506001600160a01b03821615156129aa565b61ffff1916610101175f5588612996565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156129815750600160ff821614612981565b50600160ff82161061297a565b346103a9575f3660031901126103a95760206040517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8668152f35b346103a95760603660031901126103a95760206103c7612bc16135a3565b612bc96135b9565b6001600160a01b0382165f908152609b8552604090205460443592613e16565b346103a95760203660031901126103a9576001600160a01b03612c0a6135a3565b165f526099602052602063ffffffff600160405f20015460a01c16604051908152f35b346103a95760403660031901126103a9576004356001600160401b0381116103a957612c5d903690600401613573565b602435916001600160401b0383116103a957612c80610408933690600401613573565b929091612a0a614acc565b346103a95760203660031901126103a9576004356024602060018060a01b03606554166040519283809263237dfb4760e11b82523360048301525afa801561039e57612cdd915f91612d855750613c4f565b60665481811603612d1a57806066556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b612d9e915060203d602011611f0e57611f0081836136fe565b83611eac565b346103a957612db23661365f565b90337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148015612e33575b612def90613bc5565b6001600160a01b038084165f908152609a602052604090205416612e0f57005b6001600160a01b038084165f908152609a6020526040902054610408949116614a45565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612de6565b346103a95760203660031901126103a9576004612e806135a3565b60655460405163755b36bd60e11b81529260209184919082906001600160a01b03165afa91821561039e5761040892612eca915f91612ecf57506001600160a01b03163314613b66565b61496b565b612ee8915060203d6020116103975761038981836136fe565b846102b4565b346103a9573660031901608081126103a9576060136103a9576064356001600160401b0381116103a957612f26903690600401613632565b335f908152609a60205260409020546001600160a01b03166131ea57612f4b33614713565b604051612f5781613699565b6060815260208101905f8252612f74600180606654161415613a2a565b335f908152609960205260409020600101546001600160a01b031690811515806131e0575b806131d9575b6130dc575b5050335f818152609a6020526040812080546001600160a01b0319168317905590915081907fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049080a3612ff633613e98565b925f5b82518110156130355760019061302f6001600160a01b0361301a8387613b0c565b51166130268389613b0c565b51903333614e98565b01612ff9565b50604051836004356001600160a01b038116908190036103a95782526024356001600160a01b038116908190036103a95760208301526044359063ffffffff82168092036103a95782610f7d9260407f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080909501527f8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e260603392a2604051918291339583613b20565b8251421161071557815f52609c60205260405f205f805260205260ff60405f2054166106aa576131d192825f52609c60205260405f205f805260205260405f20600160ff198254161790555160405160208101917f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad83528460408301523360608301523360808301525f60a083015260c082015260c0815261317f60e0826136fe565b5190206131b86131c66131906141c3565b92604051928391602083019586909160429261190160f01b8352600283015260228201520190565b03601f1981018352826136fe565b519020905191614fb9565b828080612fa4565b505f612f9f565b5081331415612f99565b60405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e726567697374657241734f70657260448201527f61746f723a2063616c6c657220697320616c7265616479206163746976656c796064820152690819195b1959d85d195960b21b608482015260a490fd5b346103a95760203660031901126103a9576004356001600160401b0381116103a957613298903690600401613573565b906132aa600280606654161415613a2a565b6132b382613a76565b90335f52609a60205260018060a01b0360405f2054165f5b8481106132e0576040518061099d86826135f9565b6132f46132ee828786613aa8565b80613aca565b905061330e613304838887613aa8565b6020810190613aca565b9190500361340d57336001600160a01b03613335604061332f858a89613aa8565b01613991565b16036133a25760019061339184876133898461338161337761330461336e6132ee8588613368604061332f84848f613aa8565b9a613aa8565b9490968d613aa8565b9490923691613747565b9236916137b9565b9186336141f8565b61339b8287613b0c565b52016132cb565b60405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a2077697468647261776572206d757374206265207374616b6572000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a20696e707574206c656e677468206d69736d6174636800000000000000006064820152608490fd5b346103a95760a03660031901126103a95760206103c76134966135a3565b61349e6135b9565b906134a76135cf565b60843592606435926139a5565b346103a9575f3660031901126103a95760206040517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad8152f35b346103a95760203660031901126103a9576004356001600160401b0381116103a95761351e903690600401613573565b609d54915f5b82811061353657602084604051908152f35b6001600160a01b0361354c61176d838686613981565b165f5260a160205260405f205484811161356a575b50600101613524565b93506001613561565b9181601f840112156103a9578235916001600160401b0383116103a9576020808501948460051b0101116103a957565b600435906001600160a01b03821682036103a957565b602435906001600160a01b03821682036103a957565b604435906001600160a01b03821682036103a957565b35906001600160a01b03821682036103a957565b60206040818301928281528451809452019201905f5b81811061361c5750505090565b825184526020938401939092019160010161360f565b9181601f840112156103a9578235916001600160401b0383116103a957602083818601950101116103a957565b60609060031901126103a9576004356001600160a01b03811681036103a957906024356001600160a01b03811681036103a9579060443590565b604081019081106001600160401b038211176136b457604052565b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b038211176136b457604052565b60e081019081106001600160401b038211176136b457604052565b90601f801991011681019081106001600160401b038211176136b457604052565b359063ffffffff821682036103a957565b6001600160401b0381116136b45760051b60200190565b92919061375381613730565b9361376160405195866136fe565b602085838152019160051b81019283116103a957905b82821061378357505050565b60208091613790846135e5565b815201910190613777565b9080601f830112156103a9578160206137b693359101613747565b90565b9291906137c581613730565b936137d360405195866136fe565b602085838152019160051b81019283116103a957905b8282106137f557505050565b81358152602091820191016137e9565b919060e0838203126103a9576040519061381e826136e3565b8193613829816135e5565b8352613837602082016135e5565b6020840152613848604082016135e5565b6040840152606081013560608401526138636080820161371f565b608084015260a08101356001600160401b0381116103a9578261388791830161379b565b60a084015260c0810135906001600160401b0382116103a9570181601f820112156103a95760c0918160206138be933591016137b9565b910152565b91906040838203126103a957604051906138dc82613699565b819380356001600160401b0381116103a95781019082601f830112156103a9578135926001600160401b0384116136b45760405190613925601f8601601f1916602001836136fe565b848252602085850101116103a9575f602085819682809701838601378301015284520135910152565b90602080835192838152019201905f5b81811061396b5750505090565b825184526020938401939092019160010161395e565b91908110156127e95760051b0190565b356001600160a01b03811681036103a95790565b604080517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad602082019081526001600160a01b0395861692820192909252918416606083015292909116608082015260a081019290925260c080830193909352918152613a1360e0826136fe565b5190206131b8613a246131906141c3565b51902090565b15613a3157565b60405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e64657820697320706175736564000000000000006044820152606490fd5b90613a8082613730565b613a8d60405191826136fe565b8281528092613a9e601f1991613730565b0190602036910137565b91908110156127e95760051b81013590605e19813603018212156103a9570190565b903590601e19813603018212156103a957018035906001600160401b0382116103a957602001918160051b360383136103a957565b8051156127e95760200190565b80518210156127e95760209160051b010190565b90918060409360208452816020850152848401375f828201840152601f01601f1916010190565b908160209103126103a957516001600160a01b03811681036103a95790565b15613b6d57565b60405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b6064820152608490fd5b15613bcc57565b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d60448201527f616e616765724f72456967656e506f644d616e616765720000000000000000006064820152608490fd5b908160209103126103a9575180151581036103a95790565b15613c5657565b60405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b6064820152608490fd5b15613cb357565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b80516001600160a01b039081168352602080830151821681850152604080840151909216918401919091526060808301519084015260808083015163ffffffff169084015260a08083015160e091850182905280519185018290526101008501939201905f5b818110613da75750505060c001519160c0818303910152602080835192838152019201905f5b818110613d915750505090565b8251845260209384019390920191600101613d84565b82516001600160a01b0316855260209485019490920191600101613d5e565b604051613a24816131b86020820194602086526040830190613cf8565b6001600160a01b03168015159081613df9575090565b5f818152609a60205260409020546001600160a01b031614919050565b92906040519260208401947f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b865260018060a01b0316604085015260018060a01b03166060840152608083015260a082015260a08152613a1360c0826136fe565b91908201809211613e8457565b634e487b7160e01b5f52601160045260245ffd5b6040516360f4062b60e01b81526001600160a01b03918216600482018190529091602090839060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa91821561039e575f9261418f575b506040516394f649dd60e01b815260048101919091525f816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561039e575f905f9261407e575b505f83131561407857805180613fc557505050906040805192613f6f82856136fe565b60018452613fc0601f19830192833660208801378593613f91825192836136fe565b6001825236602083013773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0613fba8297613aff565b52613aff565b529190565b60018101809111613e8457613fd990613a76565b90613fe48251613a76565b945f5b825181101561402e576001906001600160a01b036140058286613b0c565b51166140118287613b0c565b5261401c8187613b0c565b51614027828a613b0c565b5201613fe7565b50939192505081515f198101908111613e845761406073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac09184613b0c565b5281515f198101908111613e8457613fc09085613b0c565b92909150565b9150503d805f833e61409081836136fe565b8101906040818303126103a95780516001600160401b0381116103a95781019082601f830112156103a95781516140c681613730565b926140d460405194856136fe565b81845260208085019260051b820101908582116103a957602001915b81831061416f575050506020810151906001600160401b0382116103a957019180601f840112156103a957825161412681613730565b9361413460405195866136fe565b81855260208086019260051b8201019283116103a957602001905b82821061415f575050505f613f4c565b815181526020918201910161414f565b82516001600160a01b03811681036103a9578152602092830192016140f0565b9091506020813d6020116141bb575b816141ab602093836136fe565b810103126103a95751905f613ef5565b3d915061419e565b467f0000000000000000000000000000000000000000000000000000000000000000036141f05760975490565b6137b6614cf2565b93949392916001600160a01b03841691821561467e578351156145fd575f5b8451811015614533576001600160a01b038216614504575b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06001600160a01b036142568388613b0c565b5116036142f3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690614292818a613b0c565b5191803b156103a95760405163beffbb8960e01b81526001600160a01b038916600482015260248101939093525f908390604490829084905af191821561039e576001926142e3575b505b01614217565b5f6142ed916136fe565b5f6142db565b6001600160a01b03831684148015614477575b156143b4576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691906143428288613b0c565b511661434e828b613b0c565b51833b156103a957604051638c80d4e560e01b81526001600160a01b038a811660048301529290921660248301526044820152915f908390606490829084905af191821561039e576001926143a4575b506142dd565b5f6143ae916136fe565b5f61439e565b60e460405162461bcd60e51b815260206004820152608460248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a2077697468647261776572206d7560648201527f73742062652073616d652061646472657373206173207374616b65722069662060848201527f746869726450617274795472616e7366657273466f7262696464656e2061726560a482015263081cd95d60e21b60c4820152fd5b506001600160a01b0361448a8287613b0c565b51604051639b4da03d60e01b8152911660048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561039e575f916144e6575b5015614306565b6144fe915060203d8111611f0e57611f0081836136fe565b5f6144df565b61452e6001600160a01b036145198388613b0c565b5116614525838b613b0c565b51908885614a45565b61422f565b505f838152609f60205260409020805496979396939550835f198114613e8457600101905560405195614565876136e3565b86526001600160a01b03908116602087015216604085015260608401524363ffffffff16608084015260a083015260c08201527f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f96145f76145c583613dc6565b92835f52609e60205260405f20600160ff19825416179055604051918291858352604060208401526040830190613cf8565b0390a190565b60405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374726174656769657320636160648201526c6e6e6f7420626520656d70747960981b608482015260a490fd5b60405162461bcd60e51b815260206004820152605060248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374616b65722063616e6e6f7460648201526f206265207a65726f206164647265737360801b608482015260a490fd5b3563ffffffff811681036103a95790565b6044359063ffffffff8216908183036103a9576213c68082116148c55760018060a01b031690815f52609960205263ffffffff600160405f20015460a01c161161483e575f908152609960205260409020600435906001600160a01b03821682036103a95780546001600160a01b0319166001600160a01b03928316178155600101919060243590811681036103a95782546001600160c01b0319166001600160a01b039182161760a09290921b63ffffffff60a01b169190911790915560405160608101917ffebe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac919061480660046135e5565b1681526001600160a01b0361481b60246135e5565b16602082015263ffffffff614830604461371f565b1660408201528033930390a2565b60405162461bcd60e51b815260206004820152605360248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527218d85b9b9bdd08189948191958dc99585cd959606a1b608482015260a490fd5b60405162461bcd60e51b815260206004820152606c60248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527f63616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f5760848201526b494e444f575f424c4f434b5360a01b60a482015260c490fd5b6001600160a01b031680156149c857606554604080516001600160a01b0383168152602081018490527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb69190a16001600160a01b03191617606555565b60405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a490fd5b6001600160a01b039081165f818152609860209081526040808320948716835293905291909120805491948083039493928511613e8457939055604080516001600160a01b0392831681529290911660208301528101919091527f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd9080606081015b0390a2565b6033546001600160a01b03163303614ae057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919091838303614c74575f5b838110614b3e575050505050565b6001600160a01b03614b5461176d838786613981565b1690815f5260a160205260405f2054614b6e828887613981565b359062034bc08211614bc757837f0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d926060926001965f5260a16020528160405f205560405192835260208301526040820152a101614b30565b60405162461bcd60e51b815260206004820152607360248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a205f7769746864726177616c60648201527f44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544860848201527244524157414c5f44454c41595f424c4f434b5360681b60a482015260c490fd5b60405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a20696e707574206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a490fd5b600a6020604051614d046040826136fe565b828152016922b4b3b2b72630bcb2b960b11b81522060405160208101917f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8668352604082015246606082015230608082015260808152613a2460a0826136fe565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b62034bc08111614ded577fafa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b696040609d548151908152836020820152a1609d55565b60405162461bcd60e51b815260206004820152607160248201527f44656c65676174696f6e4d616e616765722e5f7365744d696e5769746864726160448201527f77616c44656c6179426c6f636b733a205f6d696e5769746864726177616c446560648201527f6c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844526084820152704157414c5f44454c41595f424c4f434b5360781b60a482015260c490fd5b90614ac77f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c939260018060a01b031694855f52609860205260405f2060018060a01b0385165f5260205260405f20614ef1828254613e77565b9055604080516001600160a01b0394851681529490931660208501529183019190915281906060820190565b15614f2457565b60405162461bcd60e51b815260206004820152606e60248201525f51602061542e5f395f51905f5260448201527f645769746864726177616c3a207769746864726177616c44656c6179426c6f6360648201527f6b7320706572696f6420686173206e6f74207965742070617373656420666f7260848201526d207468697320737472617465677960901b60a482015260c490fd5b90813b1561510957916020929183926064604051809681958294630b135d3f60e11b84526004840152604060248401528051918291826044860152018484015e5f828201840152601f01601f191681010301916001600160a01b03165afa90811561039e575f916150c6575b506001600160e01b0319166374eca2c160e11b0161503f57565b60405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a490fd5b90506020813d602011615101575b816150e1602093836136fe565b810103126103a957516001600160e01b0319811681036103a9575f615025565b3d91506150d4565b61511e92615116916151ad565b92909261521b565b6001600160a01b0390811691160361513257565b60405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a490fd5b8151604181036151d95750906151d591602082015190606060408401519301515f1a9061538b565b9091565b6040036152125760406020830151920151918260ff1c91601b8301809311613e84576151d5936001600160ff1b03169260ff169061538b565b50505f90600290565b6005811015615377578061522c5750565b600181036152795760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036152c65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003810361531e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b60041461532757565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b5f52602160045260245ffd5b907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116154225760ff1690601b82141580615417575b61540c576020935f93608093604051938452868401526040830152606082015282805260015afa1561039e575f516001600160a01b0381161561540457905f90565b505f90600190565b505050505f90600490565b50601c8214156153c2565b505050505f9060039056fe44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565c97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1da2646970667358221220dac7d3d1713c90a8aa605be1fc1c4ad55b6b810af104a175b13f21038928cf7964736f6c634300081c0033","sourceMap":"1137:36085:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;2285:14:37;1137:36085:12;;;-1:-1:-1;;;2285:25:37;;1137:36085:12;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;2285:25:37;;;;;;2263:94;2285:25;1137:36085:12;2285:25:37;;;1137:36085:12;-1:-1:-1;;;;;;1137:36085:12;2271:10:37;:39;2263:94;:::i;:::-;5128:7;1137:36085:12;5127:8:37;5140:16;;5126:31;;5125:47;1137:36085:12;;;5128:7:37;1137:36085:12;;;;;;5292:37:37;1137:36085:12;2271:10:37;5292:37;;1137:36085:12;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;2285:25:37;;;;1137:36085:12;2285:25:37;1137:36085:12;2285:25:37;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;1303:62:49;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;2409:22:49;1137:36085:12;;2503:8:49;;;:::i;:::-;1137:36085:12;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;4774:22;4785:10;4774:22;:::i;:::-;1137:36085;;;4910:18;4785:10;4910:18;:::i;1137:36085::-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;5473:10;-1:-1:-1;1137:36085:12;;;31436:11;1137:36085;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;5573:20;;;:::i;:::-;1137:36085;;;2759:52:37;5683:1;1137:36085:12;5712:7:37;1137:36085:12;5712:14:37;5711:24;2767:14;2759:52;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;;;;;16253:16;1137:36085;;;;;;16253:45;1137:36085;;;;;;16715:33;;;;:70;;1137:36085;16715:96;;;1137:36085;16711:1359;;1137:36085;5473:10;;;;1137:36085;;18173:11;1137:36085;;;;;;;;;;;;;;;5473:10;18218:33;1137:36085;18218:33;;18321:28;5473:10;18321:28;:::i;:::-;18365:13;;1137:36085;18365:13;1137:36085;;18380:21;;;;;1137:36085;;18623:9;-1:-1:-1;;;;;18583:13:12;1137:36085;18583:13;;:::i;:::-;1137:36085;;18623:9;;;;:::i;:::-;1137:36085;5473:10;;18623:9;;:::i;:::-;1137:36085;18365:13;;16711:1359;1137:36085;16894:33;;1137:36085;;16931:15;-1:-1:-1;1137:36085:12;;;;;17167:29;1137:36085;;;;;;;;;;;;;;;;;;18009:36;1137:36085;17533:223;1137:36085;;;;17167:29;1137:36085;;;;;;;;;;;;;;;;;;;;;;;5473:10;;;;17533:223;:::i;:::-;18009:36;;;;:::i;:::-;16711:1359;;;;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;16715:96;5473:10;;;16789:22;;16715:96;;:70;5473:10;;;16752:33;;16715:70;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;2759:52:37;1137:36085:12;;5712:7:37;1137:36085:12;5712:14:37;5711:24;2767:14;2759:52;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;-1:-1:-1;1137:36085:12;;;31436:11;1137:36085;;;;;;;31436:33;1137:36085;;7714:18;;;:::i;:::-;1137:36085;;-1:-1:-1;;;;;1137:36085:12;;7816:20;;1137:36085;;;;;;7930:11;1137:36085;;;;;;-1:-1:-1;;;;;1137:36085:12;;7980:10;:20;;:46;;;;;;1137:36085;7980:125;;;;1137:36085;;;;8428:28;;;:::i;:::-;8550:96;;;;;1137:36085;8694:35;;;1137:36085;8694:35;;1137:36085;;;;7930:11;1137:36085;;;;;;;-1:-1:-1;;;;;;1137:36085:12;;;;;8875:22;;;1137:36085;;;;;;;;;;;;:::i;:::-;;;;;;;;8871:772;1137:36085;;;;;;;:::i;:::-;;;;8871:772;8996:32;;;;;;:::i;:::-;9047:13;1137:36085;;;;;;9085:3;1137:36085;;9062:21;;;;;1540:1;1137:36085;9362:256;1137:36085;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;9265:13;;;;:::i;:::-;1137:36085;;9245:33;;;:::i;:::-;1137:36085;9313:9;;;;:::i;:::-;1137:36085;9296:26;;;:::i;:::-;1137:36085;9362:256;;;;:::i;:::-;9341:277;;;;:::i;:::-;1137:36085;;9047:13;;9062:21;;;;;;;;1137:36085;9062:21;8871:772;;8550:96;8595:40;;;1137:36085;8595:40;;8550:96;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;7980:125;1137:36085;;;;8060:16;1137:36085;;;;;;;1540:1;1137:36085;;;8060:45;1137:36085;;7980:10;8046:59;7980:125;;:46;:10;;;8004:22;7980:46;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;2111:7:13;1137:36085:12;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31822:16;1137:36085;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;:::i;:::-;;;;5472:66:13;1137:36085:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;4457:39:13;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;:::i;:::-;;;;3859:81:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;;4613:50:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;1817:33:13;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;:::i;:::-;;;;4910:62:13;1137:36085:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;5072:22;5083:10;5072:22;:::i;:::-;1137:36085;;;5185:51;;1137:36085;;;5083:10;;;;5185:51;;;:::i;:::-;;;;1137:36085;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;2108:42;1137:36085;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;32469:32;1137:36085;;32469:32;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;;;32554:3;1137:36085;;32531:21;;;;;1137:36085;;;;32585:14;1137:36085;;;;;;;;-1:-1:-1;;;;;32610:13:12;1137:36085;32610:13;;:::i;:::-;1137:36085;;;;;;;;-1:-1:-1;1137:36085:12;;;;-1:-1:-1;1137:36085:12;;32573:51;;;;:::i;:::-;1137:36085;;32516:13;;32531:21;1137:36085;;;;;;;;;;;;32531:21;1137:36085;:::i;:::-;;;;;;-1:-1:-1;;1137:36085:12;;;;1513:6:49;1137:36085:12;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;1825:37:37;1137:36085:12;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;;6230:31;;1137:36085;;6265:15;-1:-1:-1;1137:36085:12;;-1:-1:-1;;;;;1137:36085:12;;;-1:-1:-1;1137:36085:12;;;31436:11;1137:36085;;;;;;;;;6522:20;;;:::i;:::-;1137:36085;;;7145:34;1137:36085;;;;;;;;;;;;6747:11;1137:36085;;;6815:106;1137:36085;;;;;;6815:106;;;;:::i;:::-;1137:36085;;;;6747:11;1137:36085;;;;;;;7145:34;;;;:::i;:::-;2759:52:37;5683:1;1137:36085:12;5712:7:37;1137:36085:12;5712:14:37;5711:24;2767:14;2759:52;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;;;;;16253:16;1137:36085;;;;;;16253:45;1137:36085;;;;;;16715:33;;;;:70;;1137:36085;16715:96;;;1137:36085;16711:1359;;1137:36085;-1:-1:-1;;;1137:36085:12;;;;18173:11;1137:36085;;;;;;;-1:-1:-1;;;;;;1137:36085:12;;;;;18218:33;;1137:36085;18218:33;18321:28;;;:::i;:::-;18365:13;1137:36085;18365:13;1137:36085;;18380:21;;;;;1137:36085;;18623:9;-1:-1:-1;;;;;18583:13:12;1137:36085;18583:13;;:::i;:::-;1137:36085;;18623:9;;;;:::i;:::-;1137:36085;18623:9;;;;:::i;:::-;1137:36085;18365:13;;16711:1359;1137:36085;16894:33;;6265:15;1137:36085;;16894:52;1137:36085;;;;;17167:29;1137:36085;;;;;;;;;;;;;;;;;;18009:36;1137:36085;17533:223;1137:36085;;;;17167:29;1137:36085;;;;;;;;;;;;;;;;;;;;;;;17533:223;;;;;:::i;18009:36::-;16711:1359;;;;;16715:96;16789:10;;;:22;;16715:96;;:70;16752:10;;;:33;;16715:70;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;;;;;2619:71:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;1303:62:49;;:::i;:::-;2765:6;1137:36085:12;;-1:-1:-1;;;;;;1137:36085:12;;;;;;;-1:-1:-1;;;;;1137:36085:12;2813:40:49;1137:36085:12;;2813:40:49;1137:36085:12;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;:::i;:::-;;;;3166:46:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;1303:62:49;;:::i;:::-;13517:27:12;1137:36085;;13517:27;:::i;1137:36085::-;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2759:52:37;1137:36085:12;;5712:7:37;1137:36085:12;5712:14:37;5711:24;2767:14;2759:52;:::i;:::-;2561:63:52;1684:1:12;2569:7:52;1137:36085:12;2569:19:52;;2561:63;:::i;:::-;1684:1:12;2569:7:52;1137:36085:12;19298:35;1137:36085;;;;:::i;:::-;19298:35;:::i;:::-;1137:36085;;;19365:18;1137:36085;;;;;;;;;;;19512:21;;;;:48;:21;;;:::i;:::-;1137:36085;19536:24;1137:36085;;;19512:48;:::i;:::-;19564:12;-1:-1:-1;1137:36085:12;;-1:-1:-1;;;;;19743:21:12;1137:36085;19743:21;;;:::i;:::-;1137:36085;19729:10;:35;1137:36085;;19881:216;;;1137:36085;;;;;19365:18;1137:36085;;;;;;;-1:-1:-1;;1137:36085:12;;;20213:3688;;;20392:13;20411:21;;;;20956:17;;;1137:36085;20392:13;20411:21;;;;:::i;:::-;20407:32;;;;;;;20489:21;;20460:276;20489:21;;;:::i;:::-;20543;:24;;:21;;;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;20543:24;:::i;:::-;;:::i;:::-;1137:36085;;;20513:29;1137:36085;;20489:79;19564:12;1137:36085;;;;;;;;20489:79;:::i;:::-;:95;;20460:276;:::i;:::-;20809:17;;21005:9;;20809:17;;20956:20;20809:17;20956;20809;20902:24;;20809:17;20902:21;20809:17;;;:::i;:::-;20902:21;;;:::i;:::-;:24;;:::i;:::-;20956:17;;:::i;:20::-;1137:36085;21005:9;;:::i;:::-;1137:36085;-1:-1:-1;;;;;1137:36085:12;2108:42;28754:34;;2108:42;;-1:-1:-1;;28804:15:12;-1:-1:-1;;;;;1137:36085:12;;28804:99;;;;;1137:36085;;-1:-1:-1;;;28804:99:12;;-1:-1:-1;;;;;1137:36085:12;;;;28804:99;;1137:36085;19729:10;1137:36085;;;;;;;;;;;;;;;;;;;28804:99;;;;;;;1137:36085;28804:99;;;28750:270;;;1137:36085;20392:13;;28804:99;1137:36085;28804:99;;;:::i;:::-;;;;28750:270;1137:36085;;;;-1:-1:-1;28934:15:12;-1:-1:-1;;;;;1137:36085:12;28934:75;;;;;1137:36085;;;19512:21;1137:36085;;;;;;;;;;;28934:75;;19729:10;1137:36085;28934:75;;1137:36085;;;;;;;;;;;;;;;;;;;28934:75;;;;;;;1137:36085;28934:75;;;28750:270;;;;28934:75;1137:36085;28934:75;;;:::i;:::-;;;;20407:32;;;;;;;-1:-1:-1;;;;;;;;;;;20407:32:12;;1137:36085;20407:32;20213:3688;1137:36085;;;;;23916:35;1137:36085;2569:7:52;1137:36085:12;;20213:3688;19729:10;;;;;1137:36085;;21334:11;1137:36085;;;;;;;;;;;;21376:13;1137:36085;21395:21;;;;21371:2520;21376:13;21395:21;;;;:::i;:::-;21391:32;;;;;;;21473:21;;21444:276;21473:21;;;:::i;:::-;21527;:24;;:21;;;;:::i;21444:276::-;2108:42;22001:21;:24;;:21;;;;:::i;:24::-;1137:36085;22001:50;2108:42;;22455:75;1137:36085;22508:20;22092:17;22508;;22092;;;:::i;:::-;22508;;;;:::i;:20::-;1137:36085;;-1:-1:-1;;;22455:75:12;;-1:-1:-1;;;;;1137:36085:12;;;22455:75;;1137:36085;;;;;;;;;;;;;;;;;22455:75;;1137:36085;;22455:15;-1:-1:-1;;;;;1137:36085:12;22455:75;;;;;;;1137:36085;22455:75;;;21997:1809;-1:-1:-1;;;;;;1137:36085:12;;;;;;;21334:11;1137:36085;;;;;;;;;;;;;;;;22678:30;;1137:36085;22674:451;;21997:1809;;;;;;;;1137:36085;21376:13;;22674:451;23047:28;22985:21;;:24;:21;:24;:21;;:::i;:24::-;23047:28;;:::i;:::-;22674:451;;;;;;;;22455:75;;;1137:36085;22455:75;;;;;;;;;1137:36085;22455:75;;;:::i;:::-;;;1137:36085;;;;;;22455:75;;;;;-1:-1:-1;22455:75:12;;21997:1809;23171:15;-1:-1:-1;;;;;1137:36085:12;;-1:-1:-1;23209:9:12;;1137:36085;23209:9;;;:::i;:::-;23220:24;;:21;;;;;:::i;:24::-;23246:17;;;;;:20;:17;;;;;:::i;:20::-;1137:36085;23171:96;;;;;;1137:36085;;-1:-1:-1;;;23171:96:12;;19729:10;1137:36085;23171:96;;1137:36085;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;19512:21;;1137:36085;;-1:-1:-1;;23171:96:12;;;;;;;1137:36085;23171:96;;;;;21997:1809;23347:29;;;;23343:445;;21997:1809;;;;;;;23343:445;23718:17;23656:24;;:21;;23718:20;23656:21;23718:20;23656:21;;:::i;:24::-;23718:17;;;:::i;:20::-;1137:36085;19729:10;;23718:20;;:::i;:::-;23343:445;;;;;;23171:96;1137:36085;23171:96;;;:::i;:::-;;;;21391:32;;;;;;;;-1:-1:-1;;;;;;;;;;;21391:32:12;;1137:36085;21391:32;20213:3688;;19881:216;19958:21;;;;;;:::i;:::-;1137:36085;;;-1:-1:-1;19881:216:12;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:36085:12;;;;;;;;;-1:-1:-1;;;19512:21:12;1137:36085;;;19958:21;;1137:36085;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:36085:12;;;;;;;;;-1:-1:-1;;;19512:21:12;1137:36085;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:36085:12;;;;;;;;;;19512:21;1137:36085;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:36085:12;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;5479:7:37;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;;;;;;;;5683:1:37;1137:36085:12;;;;5712:7:37;1137:36085:12;5712:14:37;5711:24;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1137:36085:12;;;;2125:14:37;1137:36085:12;;;-1:-1:-1;;;2125:35:37;;2149:10;1137:36085:12;2125:35:37;;1137:36085:12;;;;;;2125:35:37;;1137:36085:12;;-1:-1:-1;;;;;1137:36085:12;2125:35:37;;;;;;2117:88;2125:35;1137:36085:12;2125:35:37;;;1137:36085:12;2117:88:37;;:::i;:::-;4359:17;;4349:27;1137:36085:12;;;4359:17:37;;1137:36085:12;;4391:37:37;1137:36085:12;2149:10:37;4391:37;;1137:36085:12;2125:35:37;;;;1137:36085:12;2125:35:37;1137:36085:12;2125:35:37;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;1137:36085:12;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;1964:15;1137:36085;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;1917:49:13;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;939:91:13;1137:36085:12;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;-1:-1:-1;1137:36085:12;;;31436:11;1137:36085;;;;;;;31436:33;;;31354:123;1137:36085;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;:::i;:::-;;;;31995:16;1137:36085;;;;;;;;31995:45;1137:36085;;;31995:45;1137:36085;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;1709:49:13;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;:::i;:::-;2768:13:37;;;2759:52;1137:36085:12;;5712:7:37;1137:36085:12;5712:14:37;5711:24;2767:14;2759:52;:::i;:::-;2561:63:52;1684:1:12;2569:7:52;1137:36085:12;2569:19:52;;2561:63;:::i;:::-;1684:1:12;2569:7:52;1137:36085:12;;11968:173;12012:3;11988:22;;;;;;1137:36085;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12084:25;;;;;;;;:::i;:::-;;12111:18;;;;;:::i;:::-;1137:36085;;;;;;;;;19298:35;1137:36085;;;;;;;;:::i;19298:35::-;1137:36085;;;;19365:18;1137:36085;;;;;;;;;;;19512:21;1137:36085;;;;;;19512:21;;:::i;:::-;:48;19564:12;1137:36085;;19536:24;1137:36085;;;19512:48;:::i;:::-;:64;1137:36085;;;;;;-1:-1:-1;;;;;1137:36085:12;19743:21;;1137:36085;;19743:21;;:::i;:::-;1137:36085;19729:10;:35;1137:36085;;19881:216;;;12012:3;1137:36085;;;;19365:18;1137:36085;;;;;;;-1:-1:-1;;1137:36085:12;;;20213:3688;;;1137:36085;20392:13;1137:36085;;20411:21;1137:36085;;20411:21;;1137:36085;20411:21;;;;;:::i;:::-;20407:32;;;;;;;1137:36085;;20460:276;20489:21;1137:36085;;;;;;19512:21;20489;:::i;:::-;1137:36085;20543:24;;:21;20411;1137:36085;;;;;20411:21;1137:36085;;;;;20543:21;:::i;20460:276::-;20809:17;1137:36085;;;;;20809:17;:::i;:::-;1137:36085;21005:9;;1137:36085;20902:24;;1137:36085;20902:21;20411;1137:36085;;;;;20411:21;1137:36085;;;;;20902:21;:::i;:24::-;1137:36085;20956:20;1137:36085;20956:17;;1137:36085;;;;;20956:17;1137:36085;;;;;20956:17;:::i;21005:9::-;1137:36085;-1:-1:-1;;;;;1137:36085:12;2108:42;28754:34;;2108:42;;-1:-1:-1;;28804:15:12;-1:-1:-1;;;;;1137:36085:12;;28804:99;;;;;1137:36085;;-1:-1:-1;;;28804:99:12;;-1:-1:-1;;;;;1137:36085:12;;;;28804:99;;1137:36085;19729:10;1137:36085;;;;;;;;;;;;;;;;;;;28804:99;;;;;;;1137:36085;28804:99;;;28750:270;;;1137:36085;20392:13;;28804:99;1137:36085;28804:99;;;:::i;:::-;;;;28750:270;1137:36085;;;;-1:-1:-1;28934:15:12;-1:-1:-1;;;;;1137:36085:12;28934:75;;;;;1137:36085;;;28934:75;1137:36085;;;;;;;;;;;28934:75;;19729:10;1137:36085;28934:75;;1137:36085;;;;;;;;;;;;;;;;;;;28934:75;;;;;;;1137:36085;28934:75;;;28750:270;;;;28934:75;1137:36085;28934:75;;;:::i;:::-;;;;20407:32;;;;;;;;1137:36085;20407:32;;;1137:36085;-1:-1:-1;;;;;;;;;;;20407:32:12;;;;20213:3688;1137:36085;;;;;23916:35;1137:36085;11973:13;;;;;;;;;;20213:3688;19729:10;1137:36085;;;;21334:11;1137:36085;;;;;;-1:-1:-1;;;;;1137:36085:12;;19729:10;;;;;;;;;21376:13;1137:36085;;21395:21;1137:36085;;21395:21;;1137:36085;21395:21;;;;;:::i;:::-;21391:32;;;;;;;1137:36085;;21444:276;21473:21;1137:36085;;;;;;19512:21;21473;:::i;21444:276::-;2108:42;1137:36085;22001:24;;:21;21395;1137:36085;;;;;21395:21;1137:36085;;;;;22001:21;:::i;:24::-;1137:36085;22001:50;2108:42;;22455:75;1137:36085;;22092:17;1137:36085;;;;;22092:17;:::i;:::-;1137:36085;22508:20;1137:36085;22508:17;;1137:36085;;;;;22508:17;1137:36085;;;;;22508:17;:::i;:20::-;1137:36085;;-1:-1:-1;;;22455:75:12;;-1:-1:-1;;;;;1137:36085:12;;;22455:75;;1137:36085;;;;;;;;;;;;;;;;;22455:75;;1137:36085;;22455:15;-1:-1:-1;;;;;1137:36085:12;22455:75;;;;;;1137:36085;22455:75;;;21997:1809;-1:-1:-1;;;;;1137:36085:12;;;;;;;21334:11;1137:36085;;;;;;;;-1:-1:-1;1137:36085:12;;22674:451;;21997:1809;;;;;1137:36085;21376:13;;22674:451;23047:28;1137:36085;22985:24;;1137:36085;22985:21;21395;1137:36085;;;;;21395:21;1137:36085;;;;;22985:21;:::i;23047:28::-;22674:451;;;;;22455:75;;1137:36085;22455:75;;;;;;;;;1137:36085;22455:75;;;:::i;:::-;;;1137:36085;;;;;;;22455:75;;;;;-1:-1:-1;22455:75:12;;21997:1809;23209:9;;1137:36085;;;;;;;23171:15;1137:36085;23209:9;;:::i;:::-;23220:24;;1137:36085;23220:21;21395;1137:36085;;;;;21395:21;1137:36085;;;;;23220:21;:::i;:24::-;1137:36085;23246:17;1137:36085;;;;;23246:17;1137:36085;23246:20;1137:36085;23246:17;1137:36085;;;;;;23246:17;:::i;:20::-;1137:36085;23171:96;;;;;;1137:36085;;-1:-1:-1;;;23171:96:12;;19729:10;1137:36085;23171:96;;1137:36085;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;23171:96;;1137:36085;;-1:-1:-1;;23171:96:12;;;;;;;1137:36085;23171:96;;;21997:1809;23347:29;;;23343:445;;21997:1809;;;;;23343:445;23718:20;1137:36085;23718:20;1137:36085;23718:17;23656:24;;1137:36085;23656:21;21395;1137:36085;;;;;21395:21;1137:36085;;;;;23656:21;:::i;:24::-;1137:36085;;;;;;23718:17;:::i;:20::-;1137:36085;19729:10;;23718:20;;:::i;:::-;23343:445;;;;23171:96;1137:36085;23171:96;;;:::i;:::-;;;;21391:32;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:36085:12;;21391:32;;20213:3688;;19881:216;1137:36085;;19958:21;1137:36085;;19958:21;;1137:36085;19958:21;;;;;:::i;:::-;1137:36085;;;-1:-1:-1;19881:216:12;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:36085:12;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;11988:22;1137:36085;2569:7:52;1137:36085:12;;;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;:::i;:::-;;;;3370:46:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2373:10;2395:15;-1:-1:-1;;;;;1137:36085:12;2373:38;:80;;;;1137:36085;2352:182;;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;-1:-1:-1;1137:36085:12;;;31436:11;1137:36085;;;;;;;12416:256;;1137:36085;12416:256;-1:-1:-1;;;;;1137:36085:12;;;;;;;12474:11;1137:36085;;;;;;12653:6;;1137:36085;;12653:6;:::i;2373:80::-;-1:-1:-1;2373:10:12;2437:15;-1:-1:-1;;;;;1137:36085:12;2415:38;2373:80;;1137:36085;;;;;;-1:-1:-1;;1137:36085:12;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3133:14:51;;;;3179:34;;;1137:36085:12;3178:108:51;;;;1137:36085:12;;;;-1:-1:-1;;1137:36085:12;;;;;;;3394:65:51;;1137:36085:12;-1:-1:-1;3077:14:37;1137:36085:12;-1:-1:-1;;;;;1137:36085:12;3069:37:37;;:79;;1137:36085:12;;;;3361:15:37;3643:12:12;1137:36085;;3778:22;1137:36085;3255:26:37;1137:36085:12;;;;;;3296:36:37;1137:36085:12;3303:10:37;3296:36;;3361:15;:::i;:::-;3587:27:12;;:::i;:::-;3567:47;1137:36085;3643:12;:::i;:::-;3695:25;1137:36085;;3695:25;:::i;:::-;3778:22;:::i;:::-;3479:99:51;;1137:36085:12;3479:99:51;1137:36085:12;;;;;;;3553:14:51;1137:36085:12;;;;;;3553:14:51;1137:36085:12;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;3069:79:37;-1:-1:-1;;;;;;1137:36085:12;;3110:38:37;;3069:79;;3394:65:51;-1:-1:-1;;1137:36085:12;;;;;3394:65:51;;;1137:36085:12;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;3178:108:51;3258:4;;1476:19:53;:23;3219:66:51;;3178:108;3219:66;1137:36085:12;;;;;3268:17:51;3178:108;;3179:34;1137:36085:12;;;;;3197:16:51;3179:34;;1137:36085:12;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;699:80:13;1137:36085:12;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;35561:81;1137:36085;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;;;;35488:11;1137:36085;;;;;;;;;35561:81;:::i;1137:36085::-;;;;;;-1:-1:-1;;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;:::i;:::-;;;;32193:16;1137:36085;;;;32193:51;1137:36085;;;32193:51;1137:36085;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1137:36085:12;;;;;13811:21;1137:36085;;;;;;:::i;:::-;1303:62:49;;;;;:::i;1137:36085:12:-;;;;;;-1:-1:-1;;1137:36085:12;;;;;;2125:35:37;1137:36085:12;;;;;;2125:14:37;1137:36085:12;;;;;;;;;;;2125:35:37;;2149:10;1137:36085:12;2125:35:37;;1137:36085:12;2125:35:37;;;;;;2117:88;2125:35;1137:36085:12;2125:35:37;;;2117:88;;:::i;:::-;4034:7;1137:36085:12;4034:25:37;;;4033:38;1137:36085:12;;;4034:7:37;1137:36085:12;;;;;;4182:35:37;1137:36085:12;2149:10:37;4182:35;;1137:36085:12;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;2125:35:37;1137:36085:12;;;;;;;;;;;;;;;;2125:35:37;;;;1137:36085:12;2125:35:37;1137:36085:12;2125:35:37;;;;;;;:::i;:::-;;;;1137:36085:12;;;;;;;:::i;:::-;;2373:10;2395:15;-1:-1:-1;;;;;1137:36085:12;2373:38;:80;;;;1137:36085;2352:182;;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;-1:-1:-1;1137:36085:12;;;31436:11;1137:36085;;;;;;;12947:387;;1137:36085;12947:387;-1:-1:-1;;;;;1137:36085:12;;;;;;;13005:11;1137:36085;;;;;;13302:6;;1137:36085;;13302:6;:::i;2373:80::-;-1:-1:-1;2373:10:12;2437:15;-1:-1:-1;;;;;1137:36085:12;2415:38;2373:80;;1137:36085;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;:::i;:::-;2285:14:37;1137:36085:12;;;-1:-1:-1;;;2285:25:37;;1137:36085:12;;;;;;;;-1:-1:-1;;;;;1137:36085:12;2285:25:37;;;;;;;5927:17;2285:25;2263:94;2285:25;1137:36085:12;2285:25:37;;;-1:-1:-1;;;;;;1137:36085:12;2271:10:37;:39;2263:94;:::i;:::-;5927:17;:::i;2285:25::-;;;;1137:36085:12;2285:25:37;1137:36085:12;2285:25:37;;;;;;;:::i;:::-;;;;1137:36085:12;;;;;-1:-1:-1;;1137:36085:12;;;;;;;-1:-1:-1;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;4106:10;-1:-1:-1;1137:36085:12;;;31436:11;1137:36085;;;;;;-1:-1:-1;;;;;1137:36085:12;;;4238:26;4106:10;4238:26;:::i;:::-;1137:36085;;;;;:::i;:::-;;;;;;;;;;;2759:52:37;5683:1;1137:36085:12;5712:7:37;1137:36085:12;5712:14:37;5711:24;2767:14;2759:52;:::i;:::-;4106:10:12;1137:36085;;;;16253:16;1137:36085;;;;;;16253:45;1137:36085;-1:-1:-1;;;;;1137:36085:12;;16715:33;;;;:70;;1137:36085;16715:96;;;1137:36085;16711:1359;;1137:36085;-1:-1:-1;;4106:10:12;1137:36085;;;;18173:11;1137:36085;;;;;;;-1:-1:-1;;;;;;1137:36085:12;;;;;4106:10;;-1:-1:-1;4106:10:12;;18218:33;;1137:36085;18218:33;18321:28;4106:10;18321:28;:::i;:::-;18365:13;1137:36085;18365:13;1137:36085;;18380:21;;;;;16253:45;;18623:9;-1:-1:-1;;;;;18583:13:12;1137:36085;18583:13;;:::i;:::-;1137:36085;;18623:9;;;;:::i;:::-;1137:36085;4106:10;;;18623:9;:::i;:::-;1137:36085;18365:13;;18380:21;-1:-1:-1;1137:36085:12;;18380:21;1137:36085;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;4568:51;1137:36085;;4568:51;1137:36085;;;4495:58;1137:36085;4106:10;4495:58;;1137:36085;;4106:10;;;;4568:51;;;:::i;16711:1359::-;1137:36085;;16931:15;-1:-1:-1;1137:36085:12;;;;;17167:29;1137:36085;;;;;;;;;;;;;;;;;;18009:36;1137:36085;;;;17167:29;1137:36085;;;;;;;;;;;;;16253:45;1137:36085;;;;;;;;;;;;36612:101;;1137:36085;1186:133:13;1137:36085:12;;;;;;;4106:10;1137:36085;;;;4106:10;1137:36085;;;;;;;;;;;;;;36612:101;;;1137:36085;36612:101;;:::i;:::-;1137:36085;36589:134;;36809:67;;36838:17;;:::i;:::-;1137:36085;;;36809:67;;;1137:36085;36809:67;;;;1137:36085;;;;;;;;;;;;;;;;;;;;36809:67;;36612:101;;36809:67;;;;;;:::i;:::-;1137:36085;36799:78;;18009:36;;;;:::i;:::-;16711:1359;;;;;16715:96;;1137:36085;16715:96;;:70;4106:10;;;16752:33;;16715:70;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;2768:13:37;2759:52;1137:36085:12;;5712:7:37;1137:36085:12;5712:14:37;5711:24;2767:14;2759:52;:::i;:::-;9969:44:12;;;:::i;:::-;10054:10;;1137:36085;;10042:11;1137:36085;;;;;;;;;;;;;10096:33;;;;;;1137:36085;;;;;;;:::i;10131:3::-;10175:36;:25;;;;;:::i;:::-;:36;;:::i;:::-;10222:25;;:32;:25;;;;;:::i;:::-;1137:36085;10222:32;;;;:::i;:::-;10175:86;;;;1137:36085;;10054:10;-1:-1:-1;;;;;10390:36:12;1137:36085;10390:25;;;;;:::i;:::-;:36;;:::i;:::-;1137:36085;10390:50;1137:36085;;1540:1;;10875:309;11009:25;;1137:36085;11009:25;1137:36085;11137:32;:25;11075:36;:25;11009;;:36;1137:36085;11009:25;;;;;:::i;:36::-;11075:25;;:::i;:36::-;11137:25;;;;;:::i;:32::-;1137:36085;;;;;;:::i;:::-;;;;;:::i;:::-;10054:10;;;10875:309;:::i;:::-;10854:330;;;;:::i;:::-;1137:36085;;10081:13;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1137:36085:12;;;;;;;1186:133:13;1137:36085:12;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;:::i;:::-;34656:24;1137:36085;34695:13;1137:36085;34710:21;;;;;;1137:36085;;;;;;;;34733:3;-1:-1:-1;;;;;34812:13:12;;;;;;:::i;:::-;1137:36085;;;34782:29;1137:36085;;;;;;34844:37;;;34840:113;;34733:3;;1137:36085;;34695:13;;34840:113;;-1:-1:-1;1137:36085:12;34840:113;;1137:36085;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1137:36085:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;:::o;:::-;;;;-1:-1:-1;1137:36085:12;;;;;-1:-1:-1;1137:36085:12;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;:::o;:::-;;;36612:101;;1137:36085;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;36612:101;1137:36085;;-1:-1:-1;;1137:36085:12;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;1137:36085:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;1137:36085:12;;;;;;;:::o;36289:630::-;1137:36085;;;1186:133:13;36612:101:12;;;1137:36085;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36612:101;;;;;1137:36085;36612:101;:::i;:::-;1137:36085;36589:134;;36809:67;;36838:17;;:::i;36809:67::-;1137:36085;36799:78;;36289:630;:::o;1540:1::-;;;;:::o;:::-;1137:36085;;-1:-1:-1;;;1540:1:12;;;;;;;;;;;1137:36085;1540:1;1137:36085;;;1540:1;;;;1137:36085;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;36612:101;1137:36085;36612:101;;1137:36085;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;1815:1:52;;;;:::o;:::-;1137:36085:12;;-1:-1:-1;;;1815:1:52;;;;;;;;;;;1137:36085:12;1815:1:52;1137:36085:12;;;1815:1:52;;;;1137:36085:12;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;35046:150;1137:36085;;35166:22;;1137:36085;35166:22;;;1137:36085;35166:22;1137:36085;;;;;;;:::i;31522:148::-;-1:-1:-1;;;;;1137:36085:12;31604:22;;;;;:59;;31597:66;31522:148;:::o;31604:59::-;31624:1;1137:36085;;;31630:11;1137:36085;;;;;;-1:-1:-1;;;;;1137:36085:12;31630:33;;31522:148;-1:-1:-1;31522:148:12:o;35694:550::-;;;1137:36085;;35975:78;;;;1137:36085;939:91:13;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35975:78;;;;;;:::i;1137:36085::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;32709:1775;1137:36085;;-1:-1:-1;;;32910:38:12;;-1:-1:-1;;;;;1137:36085:12;;;32910:38;;;1137:36085;;;;;;;;;32910:38;;1137:36085;;32910:15;1137:36085;32910:38;;;;;;;-1:-1:-1;32910:38:12;;;32709:1775;-1:-1:-1;1137:36085:12;;-1:-1:-1;;;33055:35:12;;32910:38;33055:35;;1137:36085;;;;-1:-1:-1;1137:36085:12;32910:38;1137:36085;33055:15;-1:-1:-1;;;;;1137:36085:12;33055:35;;;;;;;-1:-1:-1;;;33055:35:12;;;32709:1775;33190:14;-1:-1:-1;33190:14:12;;;33186:98;;1137:36085;;33371:33;;;1137:36085;;;;;;;;;;;;:::i;:::-;33522:1;1137:36085;;33629:30;36612:101;;1137:36085;;;;;;;;;33493:31;1137:36085;;;;;;;:::i;:::-;33522:1;1137:36085;;;;;;;2108:42;33577:38;33538:25;33577:38;;:::i;:::-;1137:36085;33629:30;:::i;:::-;1137:36085;34450:27;32709:1775;:::o;33367:1073::-;33826:1;1137:36085;;;;;;;33779:49;;;:::i;:::-;1137:36085;33851:32;1137:36085;;33851:32;:::i;:::-;33974:13;-1:-1:-1;33974:13:12;1137:36085;;33989:32;;;;;33826:1;;-1:-1:-1;;;;;34058:24:12;1137:36085;34058:24;;:::i;:::-;1137:36085;;34042:40;;;;:::i;:::-;1137:36085;34112:24;;;;:::i;:::-;1137:36085;34100:36;;;;:::i;:::-;1137:36085;;33974:13;;33989:32;;;;;;;1137:36085;;4359:17:37;;1137:36085:12;;;;;;;34307:58;2108:42;34307:58;;;:::i;:::-;1137:36085;;;-1:-1:-1;;1137:36085:12;;;;;;;34379:50;;;;:::i;33186:98::-;33220:53;;;-1:-1:-1;33220:53:12:o;33055:35::-;;;;;;-1:-1:-1;33055:35:12;;;;;;:::i;:::-;;;1137:36085;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;33055:35;;;;;;1137:36085;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;32910:38;;;;1137:36085;32910:38;;1137:36085;32910:38;;;;;;1137:36085;32910:38;;;:::i;:::-;;;1137:36085;;;;;32910:38;;;;;;;-1:-1:-1;32910:38:12;;31082:227;31153:13;31170:17;31153:34;31170:17;;31210;1137:36085;31203:24;:::o;31149:154::-;31265:27;;:::i;25243:3032::-;;;;;;-1:-1:-1;;;;;1137:36085:12;;;25498:20;;1137:36085;;;;25630:22;1137:36085;;25516:1;25888:13;1137:36085;;25903:21;;;;;-1:-1:-1;;;;;1137:36085:12;;25987:314;;25888:13;2108:42;-1:-1:-1;;;;;26392:13:12;;;;:::i;:::-;1137:36085;;26392:39;2108:42;;26900:15;-1:-1:-1;;;;;1137:36085:12;;26937:9;;;;:::i;:::-;1137:36085;26900:47;;;;;;1137:36085;;-1:-1:-1;;;26900:47:12;;-1:-1:-1;;;;;1137:36085:12;;26900:47;;;1137:36085;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;26900:47:12;;;;;;;1137:36085;26900:47;;;26388:1091;;;1137:36085;25888:13;;26900:47;25516:1;26900:47;;;:::i;:::-;;;;26388:1091;-1:-1:-1;;;;;1137:36085:12;;27015:20;;:84;;;;26388:1091;1137:36085;;;-1:-1:-1;;;;;27402:15:12;1137:36085;;;;27439:13;1137:36085;27439:13;;:::i;:::-;1137:36085;;27454:9;;;;:::i;:::-;1137:36085;27402:62;;;;;1137:36085;;-1:-1:-1;;;27402:62:12;;-1:-1:-1;;;;;1137:36085:12;;;27402:62;;;1137:36085;;;;;;;;;;;;;;-1:-1:-1;;1137:36085:12;;;;;;-1:-1:-1;;27402:62:12;;;;;;;1137:36085;27402:62;;;26388:1091;;;;27402:62;25516:1;27402:62;;;:::i;:::-;;;;1137:36085;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;27015:84;-1:-1:-1;;;;;;27085:13:12;;;;:::i;:::-;1137:36085;;;-1:-1:-1;;;27040:59:12;;1137:36085;;27040:59;;;1137:36085;;;27040:59;1137:36085;27040:15;-1:-1:-1;;;;;1137:36085:12;27040:59;;;;;;;25516:1;27040:59;;;27015:84;27039:60;;27015:84;;27040:59;;;;1137:36085;27040:59;;;;;;;;;:::i;:::-;;;;25987:314;26258:9;-1:-1:-1;;;;;26214:13:12;;;;:::i;:::-;1137:36085;;26258:9;;;;:::i;:::-;1137:36085;26258:9;;;;:::i;:::-;25987:314;;25903:21;-1:-1:-1;25516:1:12;1137:36085;;;27636:27;1137:36085;;;;;;;25903:21;;;;;;-1:-1:-1;1137:36085:12;-1:-1:-1;;1137:36085:12;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:36085:12;;;;27760:257;;1137:36085;;;27760:257;;1137:36085;27760:257;;;1137:36085;27929:12;1137:36085;;27760:257;;;1137:36085;;27760:257;;1137:36085;27760:257;;;1137:36085;28193:44;1137:36085;28053:35;1137:36085;28053:35;:::i;:::-;1137:36085;;25516:1;1137:36085;28136:18;1137:36085;;;25516:1;1137:36085;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28193:44;;;25243:3032;:::o;1137:36085::-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;:::o;14179:717::-;14311:43;1137:36085;;;;;;;;;;;1964:15;14311:79;;1137:36085;;;;;;;;;;-1:-1:-1;1137:36085:12;14602:16;1137:36085;;;14602:51;14311:43;-1:-1:-1;1137:36085:12;14602:51;1137:36085;;;;-1:-1:-1;1137:36085:12;;-1:-1:-1;1137:36085:12;;;14602:16;1137:36085;;14311:43;1137:36085;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;-1:-1:-1;;;;;;1137:36085:12;-1:-1:-1;;;;;1137:36085:12;;;;;;14602:51;1137:36085;;;;;;;;;;;;;;-1:-1:-1;;;;;;1137:36085:12;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;14311:43;1137:36085;;;;;14834:55;;1137:36085;;;;:::i;:::-;;;;-1:-1:-1;;;;;1137:36085:12;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;14858:10;;14834:55;;;;14179:717::o;1137:36085::-;14311:43;1137:36085;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;14311:43;1137:36085;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;14311:43;1137:36085;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;14311:43;1137:36085;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;6012:360:37;-1:-1:-1;;;;;1137:36085:12;6115:40:37;;1137:36085:12;;6287:14:37;1137:36085:12;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;6269:52:37;;1137:36085:12;6269:52:37;-1:-1:-1;;;;;;1137:36085:12;;6287:14:37;1137:36085:12;6012:360:37:o;1137:36085:12:-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;24467:308;-1:-1:-1;;;;;1137:36085:12;;;-1:-1:-1;1137:36085:12;;;24650:14;1137:36085;;;;;;;;;;;;;;;;;;;;;;;;;;;;24467:308;;1137:36085;;;;;;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;24709:59;;1137:36085;;;;24709:59;;;;24467:308::o;1599:130:49:-;1513:6;1137:36085:12;-1:-1:-1;;;;;1137:36085:12;929:10:55;1662:23:49;1137:36085:12;;1599:130:49:o;1137:36085:12:-;;;;;;;;;;;;;;;;;;;;;;;;;29733:1227;;;;29915:51;;;1137:36085;;30141:1;30144:13;;;;;;29733:1227;;;;;:::o;30159:3::-;-1:-1:-1;;;;;30199:14:12;;;;;;:::i;:::-;1137:36085;;;30141:1;1137:36085;30271:29;1137:36085;;;30141:1;1137:36085;;30367:25;;;;;:::i;:::-;1137:36085;30431:63;2111:7:13;30431:63:12;;1137:36085;;;30802:141;1137:36085;;;;;30141:1;1137:36085;30271:29;1137:36085;;;;30141:1;1137:36085;;;;;;;;;;;;;;;30802:141;1137:36085;30129:13;;1137:36085;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;37027:193;1137:36085;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1137:36085:12;;37151:30;1137:36085;;;37123:89;;1137:36085;699:80:13;1137:36085:12;;;;;;37183:13;1137:36085;;;;37206:4;1137:36085;;;;;37123:89;;;;;;:::i;2673:187:49:-;2765:6;1137:36085:12;;-1:-1:-1;;;;;1137:36085:12;;;-1:-1:-1;;;;;;1137:36085:12;;;;;;;;;;2813:40:49;-1:-1:-1;;2813:40:49;2673:187::o;29032:472:12:-;2111:7:13;29145:56:12;;1137:36085;;29355:80;1137:36085;29383:24;1137:36085;;;;;;;;;;;29355:80;29383:24;1137:36085;29032:472::o;1137:36085::-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;24089:247;;24270:59;;24089:247;;1137:36085;;;;;;;;-1:-1:-1;1137:36085:12;24211:14;1137:36085;;;-1:-1:-1;1137:36085:12;;;;;;;;-1:-1:-1;1137:36085:12;;;;-1:-1:-1;1137:36085:12;24211:44;1137:36085;;;24211:44;:::i;:::-;1137:36085;;;;;-1:-1:-1;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:36085:12;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;974:926:34;;1476:19:53;;:23;:19;;1137:36085:12;;;;;;;;;;;;;;;;;;1481:56:34;;;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1137:36085:12;;;;;;;;-1:-1:-1;;1137:36085:12;;;1481:56:34;;;-1:-1:-1;;;;;1137:36085:12;1481:56:34;;;;;;;-1:-1:-1;1481:56:34;;;1410:484;-1:-1:-1;;;;;;;1137:36085:12;-1:-1:-1;;;1481:78:34;574:10;;974:926::o;574:10::-;1137:36085:12;;-1:-1:-1;;;574:10:34;;1137:36085:12;1481:56:34;574:10;;;;1137:36085:12;574:10:34;;1137:36085:12;574:10:34;1137:36085:12;;;574:10:34;;1137:36085:12;574:10:34;;;-1:-1:-1;;;574:10:34;;;;;;;1481:56;;;1137:36085:12;1481:56:34;;1137:36085:12;1481:56:34;;;;;;1137:36085:12;1481:56:34;;;:::i;:::-;;;1137:36085:12;;;;;-1:-1:-1;;;;;;1137:36085:12;;;;;;1481:56:34;;;;;;-1:-1:-1;1481:56:34;;1410:484;4590:5:82;4541:27;;;;:::i;:::-;4590:5;;;;:::i;:::-;-1:-1:-1;;;;;1137:36085:12;;;;;1732:46:34;1137:36085:12;;974:926:34:o;1137:36085:12:-;;;-1:-1:-1;;;1137:36085:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;;;;2243:1373:82;1137:36085:12;;2574:2:82;2554:22;;2574:2;;2837:180;;3037:25;2837:180;;;;;;;;;;;;;;-1:-1:-1;2837:180:82;3037:25;;:::i;:::-;3030:32;;:::o;2550:1060::-;3103:2;3083:22;3103:2;;;3346:123;;;;;;;1137:36085:12;;;;;5167:2:82;1137:36085:12;;;;;;;5187:25:82;;-1:-1:-1;;;;;5038:80:82;;1137:36085:12;;;5187:25:82;:::i;3079:531::-;3543:56;;3559:1;3543:56;3563:35;3543:56;:::o;548:631::-;1137:36085:12;;;;;;616:29:82;;;661:7;:::o;612:561::-;1137:36085:12;712:38:82;;1137:36085:12;;;;-1:-1:-1;;;766:34:82;;1137:36085:12;766:34:82;;;1137:36085:12;;;;;;;;;;;766:34:82;;;708:465;830:35;821:44;;830:35;;1137:36085:12;;-1:-1:-1;;;881:41:82;;1137:36085:12;881:41:82;;;1137:36085:12;;;;;;;;;;;881:41:82;;;817:356;952:30;943:39;;952:30;;1137:36085:12;;-1:-1:-1;;;998:44:82;;1137:36085:12;998:44:82;;;1137:36085:12;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;998:44:82;;;939:234;1072:30;1063:39;1059:114;;548:631::o;1059:114::-;1137:36085:12;;-1:-1:-1;;;1118:44:82;;1137:36085:12;1072:30:82;1118:44;;1137:36085:12;;;;;;;;;;;-1:-1:-1;;;1137:36085:12;;;;1118:44:82;;;1137:36085:12;;;;625:20:82;1137:36085:12;;;;;625:20:82;1137:36085:12;5810:1603:82;;6860:66;6847:79;;6843:161;;1137:36085:12;;7017:7:82;7022:2;7017:7;;;:18;;;5810:1603;7013:100;;1137:36085:12;;-1:-1:-1;1137:36085:12;;;;;;;;;;;;;;;;;;;;7224:24:82;;;;;;;;;-1:-1:-1;7224:24:82;-1:-1:-1;;;;;1137:36085:12;;7262:20:82;7258:101;;7369:37;-1:-1:-1;5810:1603:82;:::o;7258:101::-;7298:50;-1:-1:-1;7298:50:82;7224:24;7298:50;:::o;7013:100::-;7051:51;;;;7067:1;7051:51;7071:30;7051:51;:::o;7017:18::-;7028:7;7033:2;7028:7;;;7017:18;;6843:161;6942:51;;;;6958:1;6942:51;6962:30;6942:51;:::o","linkReferences":{},"immutableReferences":{"4640":[{"start":16838,"length":32}],"6778":[{"start":6290,"length":32},{"start":6883,"length":32},{"start":8261,"length":32},{"start":9109,"length":32},{"start":9761,"length":32},{"start":10318,"length":32},{"start":11702,"length":32},{"start":16146,"length":32},{"start":17173,"length":32},{"start":17575,"length":32}],"6782":[{"start":3749,"length":32}],"6786":[{"start":6143,"length":32},{"start":6680,"length":32},{"start":8007,"length":32},{"start":8962,"length":32},{"start":9550,"length":32},{"start":10447,"length":32},{"start":11831,"length":32},{"start":16069,"length":32},{"start":16991,"length":32}]}},"methodIdentifiers":{"DELEGATION_APPROVAL_TYPEHASH()":"04a4f979","DOMAIN_TYPEHASH()":"20606b70","MAX_STAKER_OPT_OUT_WINDOW_BLOCKS()":"4fc40b61","MAX_WITHDRAWAL_DELAY_BLOCKS()":"ca661c04","STAKER_DELEGATION_TYPEHASH()":"43377382","beaconChainETHStrategy()":"9104c319","calculateCurrentStakerDelegationDigestHash(address,address,uint256)":"1bbce091","calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)":"0b9f487a","calculateStakerDelegationDigestHash(address,uint256,address,uint256)":"c94b5111","calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))":"597b36da","completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)":"60d7faed","completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])":"33404396","cumulativeWithdrawalsQueued(address)":"a1788484","decreaseDelegatedShares(address,address,uint256)":"132d4967","delegateTo(address,(bytes,uint256),bytes32)":"eea9064b","delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)":"7f548071","delegatedTo(address)":"65da1264","delegationApprover(address)":"3cdeb5e0","delegationApproverSaltIsSpent(address,bytes32)":"bb45fef2","domainSeparator()":"f698da25","eigenPodManager()":"4665bcda","getDelegatableShares(address)":"cf80873e","getOperatorShares(address,address[])":"90041347","getWithdrawalDelay(address[])":"0449ca39","increaseDelegatedShares(address,address,uint256)":"28a573ae","initialize(address,address,uint256,uint256,address[],uint256[])":"22bf40e4","isDelegated(address)":"3e28391d","isOperator(address)":"6d70f7ae","minWithdrawalDelayBlocks()":"c448feb8","modifyOperatorDetails((address,address,uint32))":"f16172b0","operatorDetails(address)":"c5e480db","operatorShares(address,address)":"778e55f3","owner()":"8da5cb5b","pause(uint256)":"136439dd","pauseAll()":"595c6a67","paused()":"5c975abb","paused(uint8)":"5ac86ab7","pauserRegistry()":"886f1195","pendingWithdrawals(bytes32)":"b7f06ebe","queueWithdrawals((address[],uint256[],address)[])":"0dd8dd02","registerAsOperator((address,address,uint32),string)":"0f589e59","renounceOwnership()":"715018a6","setMinWithdrawalDelayBlocks(uint256)":"635bbd10","setPauserRegistry(address)":"10d67a2f","setStrategyWithdrawalDelayBlocks(address[],uint256[])":"1522bf02","slasher()":"b1344271","stakerNonce(address)":"29c77d4f","stakerOptOutWindowBlocks(address)":"16928365","strategyManager()":"39b70e38","strategyWithdrawalDelayBlocks(address)":"c488375a","transferOwnership(address)":"f2fde38b","undelegate(address)":"da8be864","unpause(uint256)":"fabc1cbc","updateOperatorMetadataURI(string)":"99be81c8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorDetailsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"operatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_DELAY_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER_DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakerNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"stakerSignatureAndExpiry\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDelegatableShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minWithdrawalDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"_strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManager.QueuedWithdrawalParams[]\",\"name\":\"queuedWithdrawalParams\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"registeringOperatorDetails\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinWithdrawalDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"setMinWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"setStrategyWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"stakerOptOutWindowBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"params\":{\"withdrawal\":\"Is the withdrawal itself.\",\"withdrawalRoot\":\"Is the hash of the `withdrawal`.\"}}},\"kind\":\"dev\",\"methods\":{\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"params\":{\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"params\":{\"_stakerNonce\":\"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\",\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"receiveAsTokens\":\"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\",\"withdrawal\":\"The Withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"middlewareTimesIndexes\":\"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\",\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"The Withdrawals to complete.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy mananger and slasher.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to decrease.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to decrease the delegated shares.\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"details\":\"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\",\"approverSignatureAndExpiry\":\"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\",\"operator\":\"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\",\"staker\":\"The account delegating stake to an `operator` account\",\"stakerSignatureAndExpiry\":\"Signed data from the staker authorizing delegating stake to an operator\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"getDelegatableShares(address)\":{\"details\":\"Returns two empty arrays in the case that the Staker has no actively-delegateable shares.\"},\"getWithdrawalDelay(address[])\":{\"params\":{\"strategies\":\"The strategies to check withdrawal delays for\"}},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to increase.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"initialize(address,address,uint256,uint256,address[],uint256[])\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here\"},\"modifyOperatorDetails((address,address,uint32))\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.\",\"params\":{\"newOperatorDetails\":\"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator((address,address,uint32),string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\",\"registeringOperatorDetails\":\"is the `OperatorDetails` for the operator.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"params\":{\"newMinWithdrawalDelayBlocks\":\"new value of `minWithdrawalDelayBlocks`.\"}},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"params\":{\"strategies\":\"The strategies to set the minimum withdrawal delay blocks for\",\"withdrawalDelayBlocks\":\"The minimum withdrawal delay blocks to set for each strategy\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"undelegate(address)\":{\"details\":\"Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \\\"delegationApprover\\\"Reverts if the `staker` is already undelegated.\",\"params\":{\"staker\":\"The account to be undelegated.\"},\"returns\":{\"withdrawalRoots\":\"The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0).\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateOperatorMetadataURI(string)\":{\"details\":\"Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"MinWithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"OperatorDetailsModified(address,(address,address,uint32))\":{\"notice\":\"Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"StrategyWithdrawalDelayBlocksSet(address,uint256,uint256)\":{\"notice\":\"Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"},\"WithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Emitted when a new withdrawal is queued.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"STAKER_DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `StakerDelegation` struct used by the contract\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"notice\":\"Calculates the digestHash for a `staker` to sign to delegate to an `operator`\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\"},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"notice\":\"Calculates the digest hash to be signed and used in the `delegateToBySignature` function\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"notice\":\"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Decreases a staker's delegated share balance in a strategy.\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates a staker's stake to an operator with valid signatures from both parties.\"},\"delegatedTo(address)\":{\"notice\":\"Mapping: staker => operator whom the staker is currently delegated to.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"The EigenPodManager contract for EigenLayer\"},\"getDelegatableShares(address)\":{\"notice\":\"Returns the number of actively-delegatable shares a staker has across all strategies.\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Given array of strategies, returns array of shares for the operator\"},\"getWithdrawalDelay(address[])\":{\"notice\":\"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed. See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"notice\":\"Updates an operator's stored `OperatorDetails`.\"},\"operatorDetails(address)\":{\"notice\":\"Returns the OperatorDetails struct associated with an `operator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"pendingWithdrawals(bytes32)\":{\"notice\":\"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\"},\"registerAsOperator((address,address,uint32),string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"notice\":\"Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable.\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"notice\":\"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"slasher()\":{\"notice\":\"The Slasher contract for EigenLayer\"},\"stakerNonce(address)\":{\"notice\":\"Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked.\"},\"stakerOptOutWindowBlocks(address)\":{\"notice\":\"Returns the stakerOptOutWindowBlocks for an operator\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"strategyWithdrawalDelayBlocks(address)\":{\"notice\":\"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"undelegate(address)\":{\"notice\":\"Undelegates the staker from the operator who they are delegated to. Puts the staker into the \\\"undelegation limbo\\\" mode of the EigenPodManager and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary.\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateOperatorMetadataURI(string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":\"DelegationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer/contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/\",\":@eigenlayer/middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer/test/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/test/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":{\"keccak256\":\"0x2fd35012eb5dcd041bdecebcf86bb4e4ce1702b6566966d3cd87714405adf507\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d9650444aada25b84d1277e5f64f08cd4215291819d35e283eed07162f43d1f8\",\"dweb:/ipfs/QmcJJGHdsjcgffymsee5h6kfD3p5Lh6pSiEgcwQ6gQxzvj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol\":{\"keccak256\":\"0x15e864b36b2ff2e4734d70a6508c94baa5a4da85aaba2ec204992ef243513e74\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e2a5b5fea6ecd832cf061da610a1e2f3ac1c1423b6b23b3fcc738b1074c441f3\",\"dweb:/ipfs/QmPYPWv73T1oPvR2ruKkzBuNYMEN4mVrt1Q7bCxnCCM6na\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1\",\"dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373\",\"dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0x53a08f01d778b91604dc1d27d4805fa99b9a2993f26e6079a1d8701699dc9f21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8fd5dd22dcb1fb4f803843b920501679f252ccf100a06acbad7a22452cdc1173\",\"dweb:/ipfs/QmeyoJoTN3Gi7Q4Fk4y89UTDDnyPFmSbdu8N7Vyijwjx2s\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IStrategyManager","name":"_strategyManager","type":"address"},{"internalType":"contract ISlasher","name":"_slasher","type":"address"},{"internalType":"contract IEigenPodManager","name":"_eigenPodManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"previousValue","type":"uint256","indexed":false},{"internalType":"uint256","name":"newValue","type":"uint256","indexed":false}],"type":"event","name":"MinWithdrawalDelayBlocksSet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"struct IDelegationManager.OperatorDetails","name":"newOperatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"indexed":false}],"type":"event","name":"OperatorDetailsModified","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"string","name":"metadataURI","type":"string","indexed":false}],"type":"event","name":"OperatorMetadataURIUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"struct IDelegationManager.OperatorDetails","name":"operatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"indexed":false}],"type":"event","name":"OperatorRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"staker","type":"address","indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"OperatorSharesDecreased","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"staker","type":"address","indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"OperatorSharesIncreased","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"newPausedStatus","type":"uint256","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"contract IPauserRegistry","name":"pauserRegistry","type":"address","indexed":false},{"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address","indexed":false}],"type":"event","name":"PauserRegistrySet","anonymous":false},{"inputs":[{"internalType":"address","name":"staker","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true}],"type":"event","name":"StakerDelegated","anonymous":false},{"inputs":[{"internalType":"address","name":"staker","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true}],"type":"event","name":"StakerForceUndelegated","anonymous":false},{"inputs":[{"internalType":"address","name":"staker","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true}],"type":"event","name":"StakerUndelegated","anonymous":false},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"previousValue","type":"uint256","indexed":false},{"internalType":"uint256","name":"newValue","type":"uint256","indexed":false}],"type":"event","name":"StrategyWithdrawalDelayBlocksSet","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"newPausedStatus","type":"uint256","indexed":false}],"type":"event","name":"Unpaused","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"withdrawalRoot","type":"bytes32","indexed":false}],"type":"event","name":"WithdrawalCompleted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"withdrawalRoot","type":"bytes32","indexed":false},{"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"indexed":false}],"type":"event","name":"WithdrawalQueued","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DELEGATION_APPROVAL_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_WITHDRAWAL_DELAY_BLOCKS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"STAKER_DELEGATION_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"beaconChainETHStrategy","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateCurrentStakerDelegationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"_delegationApprover","type":"address"},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateDelegationApprovalDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"_stakerNonce","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateStakerDelegationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}]}],"stateMutability":"pure","type":"function","name":"calculateWithdrawalRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}]},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"middlewareTimesIndex","type":"uint256"},{"internalType":"bool","name":"receiveAsTokens","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"completeQueuedWithdrawal"},{"inputs":[{"internalType":"struct IDelegationManager.Withdrawal[]","name":"withdrawals","type":"tuple[]","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}]},{"internalType":"contract IERC20[][]","name":"tokens","type":"address[][]"},{"internalType":"uint256[]","name":"middlewareTimesIndexes","type":"uint256[]"},{"internalType":"bool[]","name":"receiveAsTokens","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"completeQueuedWithdrawals"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"cumulativeWithdrawalsQueued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"decreaseDelegatedShares"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"approverSignatureAndExpiry","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"delegateTo"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"stakerSignatureAndExpiry","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"approverSignatureAndExpiry","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"delegateToBySignature"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"delegatedTo","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"delegationApprover","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"delegationApproverSaltIsSpent","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"eigenPodManager","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"view","type":"function","name":"getDelegatableShares","outputs":[{"internalType":"contract IStrategy[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"view","type":"function","name":"getOperatorShares","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"view","type":"function","name":"getWithdrawalDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"increaseDelegatedShares"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"contract IPauserRegistry","name":"_pauserRegistry","type":"address"},{"internalType":"uint256","name":"initialPausedStatus","type":"uint256"},{"internalType":"uint256","name":"_minWithdrawalDelayBlocks","type":"uint256"},{"internalType":"contract IStrategy[]","name":"_strategies","type":"address[]"},{"internalType":"uint256[]","name":"_withdrawalDelayBlocks","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"view","type":"function","name":"isDelegated","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"minWithdrawalDelayBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct IDelegationManager.OperatorDetails","name":"newOperatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"modifyOperatorDetails"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"operatorDetails","outputs":[{"internalType":"struct IDelegationManager.OperatorDetails","name":"","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}]}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"contract IStrategy","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"operatorShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseAll"},{"inputs":[{"internalType":"uint8","name":"index","type":"uint8"}],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"pauserRegistry","outputs":[{"internalType":"contract IPauserRegistry","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"pendingWithdrawals","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct IDelegationManager.QueuedWithdrawalParams[]","name":"queuedWithdrawalParams","type":"tuple[]","components":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"},{"internalType":"address","name":"withdrawer","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"queueWithdrawals","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"struct IDelegationManager.OperatorDetails","name":"registeringOperatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}]},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"registerAsOperator"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"uint256","name":"newMinWithdrawalDelayBlocks","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMinWithdrawalDelayBlocks"},{"inputs":[{"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPauserRegistry"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"withdrawalDelayBlocks","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"setStrategyWithdrawalDelayBlocks"},{"inputs":[],"stateMutability":"view","type":"function","name":"slasher","outputs":[{"internalType":"contract ISlasher","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"stakerNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"stakerOptOutWindowBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"strategyManager","outputs":[{"internalType":"contract IStrategyManager","name":"","type":"address"}]},{"inputs":[{"internalType":"contract IStrategy","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"strategyWithdrawalDelayBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"undelegate","outputs":[{"internalType":"bytes32[]","name":"withdrawalRoots","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorMetadataURI"}],"devdoc":{"kind":"dev","methods":{"calculateCurrentStakerDelegationDigestHash(address,address,uint256)":{"params":{"expiry":"The desired expiry time of the staker's signature","operator":"The operator who is being delegated to","staker":"The signing staker"}},"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)":{"params":{"_delegationApprover":"the operator's `delegationApprover` who will be signing the delegationHash (in general)","approverSalt":"A unique and single use value associated with the approver signature.","expiry":"Time after which the approver's signature becomes invalid","operator":"The account receiving delegated stake","staker":"The account delegating their stake"}},"calculateStakerDelegationDigestHash(address,uint256,address,uint256)":{"params":{"_stakerNonce":"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`","expiry":"The desired expiry time of the staker's signature","operator":"The operator who is being delegated to","staker":"The signing staker"}},"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)":{"details":"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.","params":{"middlewareTimesIndex":"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array","receiveAsTokens":"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.","tokens":"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)","withdrawal":"The Withdrawal to complete."}},"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])":{"details":"See `completeQueuedWithdrawal` for relevant dev tags","params":{"middlewareTimesIndexes":"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.","receiveAsTokens":"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.","tokens":"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.","withdrawals":"The Withdrawals to complete."}},"constructor":{"details":"Initializes the immutable addresses of the strategy mananger and slasher."},"decreaseDelegatedShares(address,address,uint256)":{"details":"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.","params":{"shares":"The number of shares to decrease.","staker":"The address to increase the delegated shares for their operator.","strategy":"The strategy in which to decrease the delegated shares."}},"delegateTo(address,(bytes,uint256),bytes32)":{"details":"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs","params":{"approverSalt":"A unique single use value tied to an individual signature.","approverSignatureAndExpiry":"Verifies the operator approves of this delegation","operator":"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."}},"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)":{"details":"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs","params":{"approverSalt":"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.","approverSignatureAndExpiry":"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:","operator":"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.","staker":"The account delegating stake to an `operator` account","stakerSignatureAndExpiry":"Signed data from the staker authorizing delegating stake to an operator"}},"domainSeparator()":{"details":"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."},"getDelegatableShares(address)":{"details":"Returns two empty arrays in the case that the Staker has no actively-delegateable shares."},"getWithdrawalDelay(address[])":{"params":{"strategies":"The strategies to check withdrawal delays for"}},"increaseDelegatedShares(address,address,uint256)":{"details":"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.","params":{"shares":"The number of shares to increase.","staker":"The address to increase the delegated shares for their operator.","strategy":"The strategy in which to increase the delegated shares."}},"initialize(address,address,uint256,uint256,address[],uint256[])":{"details":"Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here"},"modifyOperatorDetails((address,address,uint32))":{"details":"The caller must have previously registered as an operator in EigenLayer.","params":{"newOperatorDetails":"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`."}},"owner()":{"details":"Returns the address of the current owner."},"pause(uint256)":{"details":"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.","params":{"newPausedStatus":"represents the new value for `_paused` to take, which means it may flip several bits at once."}},"registerAsOperator((address,address,uint32),string)":{"details":"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event","params":{"metadataURI":"is a URI for the operator's metadata, i.e. a link providing more details on the operator.","registeringOperatorDetails":"is the `OperatorDetails` for the operator."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setMinWithdrawalDelayBlocks(uint256)":{"params":{"newMinWithdrawalDelayBlocks":"new value of `minWithdrawalDelayBlocks`."}},"setStrategyWithdrawalDelayBlocks(address[],uint256[])":{"params":{"strategies":"The strategies to set the minimum withdrawal delay blocks for","withdrawalDelayBlocks":"The minimum withdrawal delay blocks to set for each strategy"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"undelegate(address)":{"details":"Reverts if the `staker` is also an operator, since operators are not allowed to undelegate from themselves.Reverts if the caller is not the staker, nor the operator who the staker is delegated to, nor the operator's specified \"delegationApprover\"Reverts if the `staker` is already undelegated.","params":{"staker":"The account to be undelegated."},"returns":{"withdrawalRoots":"The root of the newly queued withdrawal, if a withdrawal was queued. Otherwise just bytes32(0)."}},"unpause(uint256)":{"details":"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.","params":{"newPausedStatus":"represents the new value for `_paused` to take, which means it may flip several bits at once."}},"updateOperatorMetadataURI(string)":{"details":"Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event","params":{"metadataURI":"The URI for metadata associated with an operator"}}},"version":1},"userdoc":{"kind":"user","methods":{"DELEGATION_APPROVAL_TYPEHASH()":{"notice":"The EIP-712 typehash for the `DelegationApproval` struct used by the contract"},"DOMAIN_TYPEHASH()":{"notice":"The EIP-712 typehash for the contract's domain"},"STAKER_DELEGATION_TYPEHASH()":{"notice":"The EIP-712 typehash for the `StakerDelegation` struct used by the contract"},"beaconChainETHStrategy()":{"notice":"Canonical, virtual beacon chain ETH strategy"},"calculateCurrentStakerDelegationDigestHash(address,address,uint256)":{"notice":"Calculates the digestHash for a `staker` to sign to delegate to an `operator`"},"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)":{"notice":"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions."},"calculateStakerDelegationDigestHash(address,uint256,address,uint256)":{"notice":"Calculates the digest hash to be signed and used in the `delegateToBySignature` function"},"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))":{"notice":"Returns the keccak256 hash of `withdrawal`."},"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)":{"notice":"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`"},"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])":{"notice":"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`"},"cumulativeWithdrawalsQueued(address)":{"notice":"Mapping: staker => cumulative number of queued withdrawals they have ever initiated."},"decreaseDelegatedShares(address,address,uint256)":{"notice":"Decreases a staker's delegated share balance in a strategy."},"delegateTo(address,(bytes,uint256),bytes32)":{"notice":"Caller delegates their stake to an operator."},"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)":{"notice":"Caller delegates a staker's stake to an operator with valid signatures from both parties."},"delegatedTo(address)":{"notice":"Mapping: staker => operator whom the staker is currently delegated to."},"delegationApprover(address)":{"notice":"Returns the delegationApprover account for an operator"},"delegationApproverSaltIsSpent(address,bytes32)":{"notice":"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover."},"domainSeparator()":{"notice":"Getter function for the current EIP-712 domain separator for this contract."},"eigenPodManager()":{"notice":"The EigenPodManager contract for EigenLayer"},"getDelegatableShares(address)":{"notice":"Returns the number of actively-delegatable shares a staker has across all strategies."},"getOperatorShares(address,address[])":{"notice":"Given array of strategies, returns array of shares for the operator"},"getWithdrawalDelay(address[])":{"notice":"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay."},"increaseDelegatedShares(address,address,uint256)":{"notice":"Increases a staker's delegated share balance in a strategy."},"isDelegated(address)":{"notice":"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."},"isOperator(address)":{"notice":"Returns true is an operator has previously registered for delegation."},"minWithdrawalDelayBlocks()":{"notice":"Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed. See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays."},"modifyOperatorDetails((address,address,uint32))":{"notice":"Updates an operator's stored `OperatorDetails`."},"operatorDetails(address)":{"notice":"Returns the OperatorDetails struct associated with an `operator`."},"operatorShares(address,address)":{"notice":"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator."},"pause(uint256)":{"notice":"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."},"pauseAll()":{"notice":"Alias for `pause(type(uint256).max)`."},"paused()":{"notice":"Returns the current paused status as a uint256."},"paused(uint8)":{"notice":"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"},"pauserRegistry()":{"notice":"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."},"pendingWithdrawals(bytes32)":{"notice":"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending"},"queueWithdrawals((address[],uint256[],address)[])":{"notice":"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."},"registerAsOperator((address,address,uint32),string)":{"notice":"Registers the caller as an operator in EigenLayer."},"setMinWithdrawalDelayBlocks(uint256)":{"notice":"Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable."},"setPauserRegistry(address)":{"notice":"Allows the unpauser to set a new pauser registry"},"setStrategyWithdrawalDelayBlocks(address[],uint256[])":{"notice":"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"},"slasher()":{"notice":"The Slasher contract for EigenLayer"},"stakerNonce(address)":{"notice":"Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked."},"stakerOptOutWindowBlocks(address)":{"notice":"Returns the stakerOptOutWindowBlocks for an operator"},"strategyManager()":{"notice":"The StrategyManager contract for EigenLayer"},"strategyWithdrawalDelayBlocks(address)":{"notice":"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."},"undelegate(address)":{"notice":"Undelegates the staker from the operator who they are delegated to. Puts the staker into the \"undelegation limbo\" mode of the EigenPodManager and queues a withdrawal of all of the staker's shares in the StrategyManager (to the staker), if necessary."},"unpause(uint256)":{"notice":"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."},"updateOperatorMetadataURI(string)":{"notice":"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."}},"version":1}},"settings":{"remappings":["@eigenlayer/contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/","@eigenlayer/middleware/=lib/eigenlayer-middleware/","@eigenlayer/test/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/test/","@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol":"DelegationManager"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol":{"keccak256":"0x2fd35012eb5dcd041bdecebcf86bb4e4ce1702b6566966d3cd87714405adf507","urls":["bzz-raw://d9650444aada25b84d1277e5f64f08cd4215291819d35e283eed07162f43d1f8","dweb:/ipfs/QmcJJGHdsjcgffymsee5h6kfD3p5Lh6pSiEgcwQ6gQxzvj"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol":{"keccak256":"0x15e864b36b2ff2e4734d70a6508c94baa5a4da85aaba2ec204992ef243513e74","urls":["bzz-raw://e2a5b5fea6ecd832cf061da610a1e2f3ac1c1423b6b23b3fcc738b1074c441f3","dweb:/ipfs/QmPYPWv73T1oPvR2ruKkzBuNYMEN4mVrt1Q7bCxnCCM6na"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924","urls":["bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3","dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34","urls":["bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b","dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93","urls":["bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc","dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"keccak256":"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b","urls":["bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f","dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474","urls":["bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574","dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4","urls":["bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b","dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol":{"keccak256":"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b","urls":["bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10","dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9","urls":["bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e","dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0xfb25e5f240254ed71f62b5ec622a14846c10861d77cca55c8f838a28b455ea87","urls":["bzz-raw://93744359e00d692cbdfbbfd1adf4bdaf6b784ef9d3c804e161acdbbec1c5d0b1","dweb:/ipfs/QmVX7X9bhaeZzMr4WLx1PmVCv4GTmtjWC68FxokTPAPCuo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659","urls":["bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460","dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol":{"keccak256":"0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3","urls":["bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373","dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"keccak256":"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41","urls":["bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3","dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"keccak256":"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211","urls":["bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1","dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol":{"keccak256":"0x53a08f01d778b91604dc1d27d4805fa99b9a2993f26e6079a1d8701699dc9f21","urls":["bzz-raw://8fd5dd22dcb1fb4f803843b920501679f252ccf100a06acbad7a22452cdc1173","dweb:/ipfs/QmeyoJoTN3Gi7Q4Fk4y89UTDDnyPFmSbdu8N7Vyijwjx2s"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888","urls":["bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a","dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e","urls":["bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497","dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167","urls":["bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11","dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3","urls":["bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4","dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"keccak256":"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544","urls":["bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e","dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10","urls":["bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487","dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3","urls":["bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638","dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481","urls":["bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f","dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"],"license":"MIT"}},"version":1},"id":12}