{"abi":[{"type":"function","name":"OPERATOR_AVS_REGISTRATION_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"calculateOperatorAVSRegistrationDigestHash","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"avs","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"expiry","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"cancelSalt","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterOperatorFromAVS","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"domainSeparator","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"operatorSaltIsSpent","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"operatorSaltIsSpentMapping","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerOperatorToAVS","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSignature","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"expiry","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateAVSMetadataURI","inputs":[{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AVSMetadataURIUpdated","inputs":[{"name":"avs","type":"address","indexed":true,"internalType":"address"},{"name":"metadataURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"OperatorAVSRegistrationStatusUpdated","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"avs","type":"address","indexed":true,"internalType":"address"},{"name":"status","type":"uint8","indexed":false,"internalType":"enum IAVSDirectory.OperatorAVSRegistrationStatus"}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061043d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a364f4da11610066578063a364f4da14610149578063a98fb3551461015a578063d79aceab14610168578063ec76f4421461016f578063f698da251461016857600080fd5b806317ae05e714610098578063374823b5146100d85780639926ee7d1461010f578063a1060c8814610123575b600080fd5b6100c36100a6366004610199565b600060208181529281526040808220909352908152205460ff1681565b60405190151581526020015b60405180910390f35b6100c36100e6366004610199565b6001600160a01b0391909116600090815260208181526040808320938352929052205460ff1690565b61012161011d366004610233565b5050565b005b61013b610131366004610318565b6000949350505050565b6040519081526020016100cf565b61012161015736600461035a565b50565b61012161011d36600461037c565b600061013b565b6101216101573660046103ee565b80356001600160a01b038116811461019457600080fd5b919050565b600080604083850312156101ac57600080fd5b6101b58361017d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156101fc576101fc6101c3565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561022b5761022b6101c3565b604052919050565b6000806040838503121561024657600080fd5b61024f8361017d565b915060208084013567ffffffffffffffff8082111561026d57600080fd5b908501906060828803121561028157600080fd5b6102896101d9565b82358281111561029857600080fd5b8301601f810189136102a957600080fd5b8035838111156102bb576102bb6101c3565b6102cd601f8201601f19168701610202565b935080845289868284010111156102e357600080fd5b808683018786013760008682860101525050818152838301358482015260408301356040820152809450505050509250929050565b6000806000806080858703121561032e57600080fd5b6103378561017d565b93506103456020860161017d565b93969395505050506040820135916060013590565b60006020828403121561036c57600080fd5b6103758261017d565b9392505050565b6000806020838503121561038f57600080fd5b823567ffffffffffffffff808211156103a757600080fd5b818501915085601f8301126103bb57600080fd5b8135818111156103ca57600080fd5b8660208285010111156103dc57600080fd5b60209290920196919550909350505050565b60006020828403121561040057600080fd5b503591905056fea26469706673582212203cdeb06eb8a3f0db7d81a5bcebe480cee6590dfd088232910a9be737dea86d0764736f6c634300080c0033","sourceMap":"176:994:157:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063a364f4da11610066578063a364f4da14610149578063a98fb3551461015a578063d79aceab14610168578063ec76f4421461016f578063f698da251461016857600080fd5b806317ae05e714610098578063374823b5146100d85780639926ee7d1461010f578063a1060c8814610123575b600080fd5b6100c36100a6366004610199565b600060208181529281526040808220909352908152205460ff1681565b60405190151581526020015b60405180910390f35b6100c36100e6366004610199565b6001600160a01b0391909116600090815260208181526040808320938352929052205460ff1690565b61012161011d366004610233565b5050565b005b61013b610131366004610318565b6000949350505050565b6040519081526020016100cf565b61012161015736600461035a565b50565b61012161011d36600461037c565b600061013b565b6101216101573660046103ee565b80356001600160a01b038116811461019457600080fd5b919050565b600080604083850312156101ac57600080fd5b6101b58361017d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156101fc576101fc6101c3565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561022b5761022b6101c3565b604052919050565b6000806040838503121561024657600080fd5b61024f8361017d565b915060208084013567ffffffffffffffff8082111561026d57600080fd5b908501906060828803121561028157600080fd5b6102896101d9565b82358281111561029857600080fd5b8301601f810189136102a957600080fd5b8035838111156102bb576102bb6101c3565b6102cd601f8201601f19168701610202565b935080845289868284010111156102e357600080fd5b808683018786013760008682860101525050818152838301358482015260408301356040820152809450505050509250929050565b6000806000806080858703121561032e57600080fd5b6103378561017d565b93506103456020860161017d565b93969395505050506040820135916060013590565b60006020828403121561036c57600080fd5b6103758261017d565b9392505050565b6000806020838503121561038f57600080fd5b823567ffffffffffffffff808211156103a757600080fd5b818501915085601f8301126103bb57600080fd5b8135818111156103ca57600080fd5b8660208285010111156103dc57600080fd5b60209290920196919550909350505050565b60006020828403121561040057600080fd5b503591905056fea26469706673582212203cdeb06eb8a3f0db7d81a5bcebe480cee6590dfd088232910a9be737dea86d0764736f6c634300080c0033","sourceMap":"176:994:157:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;225:78;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:14:195;;609:22;591:41;;579:2;564:18;225:78:157;;;;;;;;617:156;;;;;;:::i;:::-;-1:-1:-1;;;;;724:36:157;;;;701:4;724:36;;;;;;;;;;;:42;;;;;;;;;;;617:156;314:151;;;;;;:::i;:::-;;;;;;779:185;;;;;;:::i;:::-;953:7;779:185;;;;;;;;;;3103:25:195;;;3091:2;3076:18;779:185:157;2957:177:195;471:64:157;;;;;;:::i;:::-;;;541:70;;;;;;:::i;970:80::-;1039:7;970:80;;1056:45;;;;;;:::i;14:173:195:-;82:20;;-1:-1:-1;;;;;131:31:195;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:195:o;643:127::-;704:10;699:3;695:20;692:1;685:31;735:4;732:1;725:15;759:4;756:1;749:15;775:252;846:2;840:9;888:4;876:17;;923:18;908:34;;944:22;;;905:62;902:88;;;970:18;;:::i;:::-;1006:2;999:22;775:252;:::o;1032:275::-;1103:2;1097:9;1168:2;1149:13;;-1:-1:-1;;1145:27:195;1133:40;;1203:18;1188:34;;1224:22;;;1185:62;1182:88;;;1250:18;;:::i;:::-;1286:2;1279:22;1032:275;;-1:-1:-1;1032:275:195:o;1312:1238::-;1424:6;1432;1485:2;1473:9;1464:7;1460:23;1456:32;1453:52;;;1501:1;1498;1491:12;1453:52;1524:29;1543:9;1524:29;:::i;:::-;1514:39;;1572:2;1625;1614:9;1610:18;1597:32;1648:18;1689:2;1681:6;1678:14;1675:34;;;1705:1;1702;1695:12;1675:34;1728:22;;;;1784:4;1766:16;;;1762:27;1759:47;;;1802:1;1799;1792:12;1759:47;1828:21;;:::i;:::-;1887:2;1874:16;1915:2;1905:8;1902:16;1899:36;;;1931:1;1928;1921:12;1899:36;1954:17;;2002:4;1994:13;;1990:27;-1:-1:-1;1980:55:195;;2031:1;2028;2021:12;1980:55;2067:2;2054:16;2089:2;2085;2082:10;2079:36;;;2095:18;;:::i;:::-;2137:53;2180:2;2161:13;;-1:-1:-1;;2157:27:195;2153:36;;2137:53;:::i;:::-;2124:66;;2213:2;2206:5;2199:17;2253:7;2248:2;2243;2239;2235:11;2231:20;2228:33;2225:53;;;2274:1;2271;2264:12;2225:53;2329:2;2324;2320;2316:11;2311:2;2304:5;2300:14;2287:45;2373:1;2368:2;2363;2356:5;2352:14;2348:23;2341:34;;;2398:5;2391;2384:20;2457:2;2453;2449:11;2436:25;2431:2;2424:5;2420:14;2413:49;2515:2;2511;2507:11;2494:25;2489:2;2482:5;2478:14;2471:49;2539:5;2529:15;;;;;;1312:1238;;;;;:::o;2555:397::-;2641:6;2649;2657;2665;2718:3;2706:9;2697:7;2693:23;2689:33;2686:53;;;2735:1;2732;2725:12;2686:53;2758:29;2777:9;2758:29;:::i;:::-;2748:39;;2806:38;2840:2;2829:9;2825:18;2806:38;:::i;:::-;2555:397;;2796:48;;-1:-1:-1;;;;2891:2:195;2876:18;;2863:32;;2942:2;2927:18;2914:32;;2555:397::o;3139:186::-;3198:6;3251:2;3239:9;3230:7;3226:23;3222:32;3219:52;;;3267:1;3264;3257:12;3219:52;3290:29;3309:9;3290:29;:::i;:::-;3280:39;3139:186;-1:-1:-1;;;3139:186:195:o;3330:592::-;3401:6;3409;3462:2;3450:9;3441:7;3437:23;3433:32;3430:52;;;3478:1;3475;3468:12;3430:52;3518:9;3505:23;3547:18;3588:2;3580:6;3577:14;3574:34;;;3604:1;3601;3594:12;3574:34;3642:6;3631:9;3627:22;3617:32;;3687:7;3680:4;3676:2;3672:13;3668:27;3658:55;;3709:1;3706;3699:12;3658:55;3749:2;3736:16;3775:2;3767:6;3764:14;3761:34;;;3791:1;3788;3781:12;3761:34;3836:7;3831:2;3822:6;3818:2;3814:15;3810:24;3807:37;3804:57;;;3857:1;3854;3847:12;3804:57;3888:2;3880:11;;;;;3910:6;;-1:-1:-1;3330:592:195;;-1:-1:-1;;;;3330:592:195:o;3927:180::-;3986:6;4039:2;4027:9;4018:7;4014:23;4010:32;4007:52;;;4055:1;4052;4045:12;4007:52;-1:-1:-1;4078:23:195;;3927:180;-1:-1:-1;3927:180:195:o","linkReferences":{}},"methodIdentifiers":{"OPERATOR_AVS_REGISTRATION_TYPEHASH()":"d79aceab","calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)":"a1060c88","cancelSalt(bytes32)":"ec76f442","deregisterOperatorFromAVS(address)":"a364f4da","domainSeparator()":"f698da25","operatorSaltIsSpent(address,bytes32)":"374823b5","operatorSaltIsSpentMapping(address,bytes32)":"17ae05e7","registerOperatorToAVS(address,(bytes,bytes32,uint256))":"9926ee7d","updateAVSMetadataURI(string)":"a98fb355"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IAVSDirectory.OperatorAVSRegistrationStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"OperatorAVSRegistrationStatusUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_AVS_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateOperatorAVSRegistrationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"cancelSalt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"deregisterOperatorFromAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"operatorSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"operatorSaltIsSpentMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"}],\"name\":\"registerOperatorToAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\":{\"params\":{\"avs\":\"The address of the service manager contract for the AVS that the operator is registering to\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account registering as an operator\",\"salt\":\"A unique and single use value associated with the approver signature.\"}},\"cancelSalt(bytes32)\":{\"params\":{\"salt\":\"A unique and single use value associated with the approver signature.\"}},\"deregisterOperatorFromAVS(address)\":{\"params\":{\"operator\":\"The address of the operator to deregister.\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"operatorSaltIsSpent(address,bytes32)\":{\"details\":\"Salts is used in the `registerOperatorToAVS` function.\"},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorSignature\":\"The signature, salt, and expiry of the operator's signature.\"}},\"updateAVSMetadataURI(string)\":{\"details\":\"Note that the `metadataURI` is *never stored * and is only emitted in the `AVSMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param avs indicates that they are updating their MetadataURI string\"},\"OperatorAVSRegistrationStatusUpdated(address,address,uint8)\":{\"notice\":\"Emitted when an operator's registration status for an AVS is updated\"}},\"kind\":\"user\",\"methods\":{\"OPERATOR_AVS_REGISTRATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the Registration struct used by the contract\"},\"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by an operator to register with an AVS\"},\"cancelSalt(bytes32)\":{\"notice\":\"Called by an operator to cancel a salt that has been used to register with an AVS.\"},\"deregisterOperatorFromAVS(address)\":{\"notice\":\"Called by an avs to deregister an operator with the avs.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"operatorSaltIsSpent(address,bytes32)\":{\"notice\":\"Returns whether or not the salt has already been used by the operator.\"},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"notice\":\"Called by the AVS's service manager contract to register an operator with the avs.\"},\"updateAVSMetadataURI(string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/AVSDirectoryMock.sol\":\"AVSDirectoryMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x19e6056ed89c88687576965f58dfa642276174a5037d6dc0c58a44cabcae6665\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee010c1f73b3cf85fe7c67d21f83845cc5a86d56017fc2c00862799b45fe998b\",\"dweb:/ipfs/Qmch2rmrHQgtKSwe78JWtPw3xK2km1aY52UxNyCV7xc1cv\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"test/mocks/AVSDirectoryMock.sol\":{\"keccak256\":\"0x24af48d7b376f50723f43c53ae4719bda28e8229922fed273685b6071b3162d7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6aa0fc3d24567e2e21be589e4c9429f48cced68e04e8ac8c7e4e0443c4ba32f4\",\"dweb:/ipfs/QmPMgXCaRXnre497wuoZD7znhyhtVfW6c1TiQoyrwDS5Ah\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.12+commit.f00d7308"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"avs","type":"address","indexed":true},{"internalType":"string","name":"metadataURI","type":"string","indexed":false}],"type":"event","name":"AVSMetadataURIUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"avs","type":"address","indexed":true},{"internalType":"enum IAVSDirectory.OperatorAVSRegistrationStatus","name":"status","type":"uint8","indexed":false}],"type":"event","name":"OperatorAVSRegistrationStatusUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"OPERATOR_AVS_REGISTRATION_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"avs","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateOperatorAVSRegistrationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"cancelSalt"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperatorFromAVS"},{"inputs":[],"stateMutability":"view","type":"function","name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"view","type":"function","name":"operatorSaltIsSpent","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"operatorSaltIsSpentMapping","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"operatorSignature","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"registerOperatorToAVS"},{"inputs":[{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateAVSMetadataURI"}],"devdoc":{"kind":"dev","methods":{"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)":{"params":{"avs":"The address of the service manager contract for the AVS that the operator is registering to","expiry":"Time after which the approver's signature becomes invalid","operator":"The account registering as an operator","salt":"A unique and single use value associated with the approver signature."}},"cancelSalt(bytes32)":{"params":{"salt":"A unique and single use value associated with the approver signature."}},"deregisterOperatorFromAVS(address)":{"params":{"operator":"The address of the operator to deregister."}},"domainSeparator()":{"details":"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."},"operatorSaltIsSpent(address,bytes32)":{"details":"Salts is used in the `registerOperatorToAVS` function."},"registerOperatorToAVS(address,(bytes,bytes32,uint256))":{"params":{"operator":"The address of the operator to register.","operatorSignature":"The signature, salt, and expiry of the operator's signature."}},"updateAVSMetadataURI(string)":{"details":"Note that the `metadataURI` is *never stored * and is only emitted in the `AVSMetadataURIUpdated` event","params":{"metadataURI":"The URI for metadata associated with an AVS"}}},"version":1},"userdoc":{"kind":"user","methods":{"OPERATOR_AVS_REGISTRATION_TYPEHASH()":{"notice":"The EIP-712 typehash for the Registration struct used by the contract"},"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)":{"notice":"Calculates the digest hash to be signed by an operator to register with an AVS"},"cancelSalt(bytes32)":{"notice":"Called by an operator to cancel a salt that has been used to register with an AVS."},"deregisterOperatorFromAVS(address)":{"notice":"Called by an avs to deregister an operator with the avs."},"domainSeparator()":{"notice":"Getter function for the current EIP-712 domain separator for this contract."},"operatorSaltIsSpent(address,bytes32)":{"notice":"Returns whether or not the salt has already been used by the operator."},"registerOperatorToAVS(address,(bytes,bytes32,uint256))":{"notice":"Called by the AVS's service manager contract to register an operator with the avs."},"updateAVSMetadataURI(string)":{"notice":"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."}},"version":1}},"settings":{"remappings":["@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/mocks/AVSDirectoryMock.sol":"AVSDirectoryMock"},"evmVersion":"london","libraries":{}},"sources":{"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"keccak256":"0x19e6056ed89c88687576965f58dfa642276174a5037d6dc0c58a44cabcae6665","urls":["bzz-raw://ee010c1f73b3cf85fe7c67d21f83845cc5a86d56017fc2c00862799b45fe998b","dweb:/ipfs/Qmch2rmrHQgtKSwe78JWtPw3xK2km1aY52UxNyCV7xc1cv"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4","urls":["bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b","dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH"],"license":"BUSL-1.1"},"test/mocks/AVSDirectoryMock.sol":{"keccak256":"0x24af48d7b376f50723f43c53ae4719bda28e8229922fed273685b6071b3162d7","urls":["bzz-raw://6aa0fc3d24567e2e21be589e4c9429f48cced68e04e8ac8c7e4e0443c4ba32f4","dweb:/ipfs/QmPMgXCaRXnre497wuoZD7znhyhtVfW6c1TiQoyrwDS5Ah"],"license":"BUSL-1.1"}},"version":1},"id":157}