{"abi":[{"type":"constructor","inputs":[{"name":"_delegationManager","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterOperator","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getLastCheckpointOperatorWeight","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointThresholdWeight","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointThresholdWeightAtBlock","inputs":[{"name":"_blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointTotalWeight","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointTotalWeightAtBlock","inputs":[{"name":"_blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastestOperatorSigningKey","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOperatorSigningKeyAtBlock","inputs":[{"name":"_operator","type":"address","internalType":"address"},{"name":"_blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOperatorWeight","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getOperatorWeightAtBlock","inputs":[{"name":"_operator","type":"address","internalType":"address"},{"name":"_blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"_serviceManager","type":"address","internalType":"address"},{"name":"_thresholdWeight","type":"uint256","internalType":"uint256"},{"name":"_quorum","type":"tuple","internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isValidSignature","inputs":[{"name":"_dataHash","type":"bytes32","internalType":"bytes32"},{"name":"_signatureData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"minimumWeight","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"operatorRegistered","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"quorum","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"registerOperatorWithSignature","inputs":[{"name":"_operatorSignature","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"_signingKey","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateMinimumWeight","inputs":[{"name":"_newMinimumWeight","type":"uint256","internalType":"uint256"},{"name":"_operators","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperatorSigningKey","inputs":[{"name":"_newSigningKey","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperators","inputs":[{"name":"_operators","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperatorsForQuorum","inputs":[{"name":"operatorsPerQuorum","type":"address[][]","internalType":"address[][]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateQuorumConfig","inputs":[{"name":"_quorum","type":"tuple","internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]},{"name":"_operators","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateStakeThreshold","inputs":[{"name":"_thresholdWeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"MinimumWeightUpdated","inputs":[{"name":"_old","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_new","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OperatorDeregistered","inputs":[{"name":"_operator","type":"address","indexed":true,"internalType":"address"},{"name":"_avs","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OperatorRegistered","inputs":[{"name":"_operator","type":"address","indexed":true,"internalType":"address"},{"name":"_avs","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OperatorWeightUpdated","inputs":[{"name":"_operator","type":"address","indexed":true,"internalType":"address"},{"name":"oldWeight","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"QuorumUpdated","inputs":[{"name":"_old","type":"tuple","indexed":false,"internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]},{"name":"_new","type":"tuple","indexed":false,"internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]}],"anonymous":false},{"type":"event","name":"SigningKeyUpdate","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"updateBlock","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"newSigningKey","type":"address","indexed":true,"internalType":"address"},{"name":"oldSigningKey","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ThresholdWeightUpdated","inputs":[{"name":"_thresholdWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TotalWeightUpdated","inputs":[{"name":"oldTotalWeight","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTotalWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UpdateMinimumWeight","inputs":[{"name":"oldMinimumWeight","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newMinimumWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InsufficientSignedStake","inputs":[]},{"type":"error","name":"InsufficientWeight","inputs":[]},{"type":"error","name":"InvalidLength","inputs":[]},{"type":"error","name":"InvalidQuorum","inputs":[]},{"type":"error","name":"InvalidReferenceBlock","inputs":[]},{"type":"error","name":"InvalidSignature","inputs":[]},{"type":"error","name":"InvalidSignedWeight","inputs":[]},{"type":"error","name":"InvalidThreshold","inputs":[]},{"type":"error","name":"LengthMismatch","inputs":[]},{"type":"error","name":"MustUpdateAllOperators","inputs":[]},{"type":"error","name":"NotSorted","inputs":[]},{"type":"error","name":"OperatorAlreadyRegistered","inputs":[]},{"type":"error","name":"OperatorNotRegistered","inputs":[]}],"bytecode":{"object":"0x60a034606657601f61249838819003918201601f19168301916001600160401b03831184841017606a57808492602094604052833981010312606657516001600160a01b0381168103606657608052604051612419908161007f8239608051816114ab0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f803560e01c8062cf2ab51461107a5780630dba3394146110515780631626ba7e14610caa5780631703a01814610c5a5780631e4cd85e14610b5e578063314f3a4914610b445780633b242e4a14610b0d5780633d5611f61461092457806340bf2fb7146109065780635140a548146107fa5780635e1042e8146107b45780635ef533291461078f578063696255be14610714578063715018a6146106b7578063743c31f41461066f578063857dc1901461055a5780638da5cb5b14610531578063955f2d90146104e457806398ec1ac9146104b8578063ab11899514610323578063b933fa74146102bb578063cdcd358114610270578063dec5d1f6146101fe578063ec7fbb31146101bf5763f2fde38b1461012c575f80fd5b346101bc5760203660031901126101bc5761014561111d565b61014d6117fc565b6001600160a01b038116156101685761016590611a0c565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b50346101bc5760203660031901126101bc5760209060ff906040906001600160a01b036101ea61111d565b168152606e84522054166040519015158152f35b50346101bc5760403660031901126101bc576004356001600160401b03811161026c5761022f90369060040161126e565b602435906001600160401b03821161026857610263610255610165933690600401611133565b9161025e6117fc565b611b39565b611624565b8280fd5b5080fd5b50346101bc5760203660031901126101bc576020906001600160a01b0361029561111d565b168152606a8252604090206001600160a01b03906102b2906117ca565b16604051908152f35b50346101bc57806003193601126101bc57606c5490816102ed57602091505b6040516001600160e01b03919091168152f35b5f19820191821161030f5750610306602091606c611673565b5054811c6102da565b634e487b7160e01b81526011600452602490fd5b50346101bc5760603660031901126101bc5761033d61111d565b6044356001600160401b0381116102685761035c90369060040161126e565b82549060ff8260081c1615928380946104ab575b8015610494575b156104385760ff19831660011785556103c79284610427575b506103a160ff865460081c16611ad9565b60018060a01b03166001600160601b0360a01b606854161760685561025e602435611854565b6103e060ff835460081c166103db81611ad9565b611ad9565b6103e933611a0c565b6103f05780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff19166101011785555f610390565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156103775750600160ff841614610377565b50600160ff841610610370565b50346101bc5760203660031901126101bc5760206104dc6104d761111d565b6113eb565b604051908152f35b50346101bc5760403660031901126101bc576104fe61111d565b6024359063ffffffff8216809203610268576001600160a01b03168252606d602090815260409092206104dc919061172d565b50346101bc57806003193601126101bc576033546040516001600160a01b039091168152602090f35b50346101bc57806003193601126101bc57338152606e60205260ff6040822054161561066057606554801561064c575f1901606555338152606e6020526040812060ff1981541690556105b46105af33611c9e565b611e9b565b505060685481906001600160a01b0316803b15610649578180916024604051809481936351b27a6d60e11b83523360048401525af1801561063e57610629575b506068546001600160a01b0316337f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed5808380a380f35b81610633916110e5565b6101bc57805f6105f4565b6040513d84823e3d90fd5b50fd5b634e487b7160e01b82526011600452602482fd5b6325ec6c1f60e01b8152600490fd5b50346101bc5760203660031901126101bc5761068961111d565b338252606e60205260ff604083205416156106a8576101659033611a54565b6325ec6c1f60e01b8252600482fd5b50346101bc57806003193601126101bc576106d06117fc565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101bc5760403660031901126101bc576024356004356001600160401b038211610268577f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f604061076e610165943690600401611133565b926107776117fc565b606754908060675582519182526020820152a1611624565b50346101bc5760203660031901126101bc576107a96117fc565b610165600435611854565b50346101bc5760403660031901126101bc576020906001600160a01b036107d961111d565b168152606a8252604090206001600160a01b03906102b2906024359061172d565b50346101bc5760403660031901126101bc576004356001600160401b03811161026c573660238201121561026c5780600401359061083782611106565b9061084560405192836110e5565b828252602082019260051b8101602401833682116109025760248301905b8282106108cf57505050506024356001600160401b0381116108cb5761088d9036906004016111cf565b5051156108b757518051606554036108a85761016590611624565b63169efb5b60e11b8252600482fd5b634e487b7160e01b82526032600452602482fd5b8380fd5b81356001600160401b0381116108fe576020916108f3839260243691890101611133565b815201910190610863565b8780fd5b8580fd5b50346101bc57806003193601126101bc576020606754604051908152f35b5034610ad2576040366003190112610ad2576004356001600160401b038111610ad25760606003198236030112610ad257604051606081018181106001600160401b03821117610af95760405281600401356001600160401b038111610ad25761099490600436918501016111cf565b8152602480830135602083019081526044909301356040830190815290356001600160a01b0381168103610ad257335f52606e60205260ff60405f205416610aea57606554905f198214610ad6576001610a179201606555335f52606e60205260405f20600160ff19825416179055610a0f6105af33611c9e565b505033611a54565b6068546001600160a01b0316803b15610ad257610a635f809460405196879586948593639926ee7d60e01b855233600486015260406024860152516060604486015260a48501906117d8565b9151606484015251608483015203925af18015610ac757610ab4575b506068546001600160a01b0316337fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c18380a380f35b610ac091505f906110e5565b5f80610a7f565b6040513d5f823e3d90fd5b5f80fd5b634e487b7160e01b5f52601160045260245ffd5b6342ee68b560e01b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b34610ad2576020366003190112610ad2576001600160a01b03610b2e61111d565b165f52606d60205260206104dc60405f206117ca565b34610ad2575f366003190112610ad25760206104dc6117bd565b34610ad2576020366003190112610ad25763ffffffff610b7c6111a1565b1643811015610c1657606c54905f905b828210610bbd578280610ba557506040515f8152602090f35b5f198101908111610ad657610306602091606c611673565b9091610bd081841860011c8285166113de565b908263ffffffff610be284606c611673565b5054161115610bf45750915b90610b8c565b92506001810180911115610bee57634e487b7160e01b5f52601160045260245ffd5b606460405162461bcd60e51b815260206004820152602060248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152fd5b34610ad2575f366003190112610ad2576060604051610c78816110af565b52610ca6604051610c88816110af565b610c9061133f565b8152604051918291602083526020830190611215565b0390f35b34610ad2576040366003190112610ad2576004356024356001600160401b038111610ad257610cdd9036906004016111cf565b90815182019160608160208501940312610ad25760208101516001600160401b038111610ad25781019083603f83011215610ad2576020820151610d2081611106565b92610d2e60405194856110e5565b8184526020808086019360051b8301010190868211610ad257604001915b8183106110315750505060408101516001600160401b038111610ad25781019380603f86011215610ad257602085015194610d8686611106565b95610d9460405197886110e5565b8087526020808089019260051b8401010191838311610ad25760408101915b838310610fc75788888860608901519163ffffffff8316809303610ad2578151905f945f9581518403610fb8578315610fa95792905f92438710958615955b848610610ef557505050505050610ee657610e0c82611688565b8311610ed75715610c1657606c54905f905b828210610e7e57505080610e5e57505f5b6001600160e01b031611610e4f57604051630b135d3f60e11b8152602090f35b63e121632f60e01b5f5260045ffd5b5f198101908111610ad657610e7490606c611673565b505460201c610e2f565b9091610e9181841860011c8285166113de565b908263ffffffff610ea384606c611673565b5054161115610eb55750915b90610e1e565b92506001810180911115610eaf57634e487b7160e01b5f52601160045260245ffd5b634b05a0f760e11b5f5260045ffd5b63e64f180f60e01b5f5260045ffd5b949893949293926001600160a01b03610f0e8b846113b6565b511696610ee657865f52606a6020528660018060a01b03610f328b60405f2061172d565b16916001600160a01b03161015610f9a57610f599083610f528c886113b6565b519161212c565b15610f8b576001610f8187945f985f52606d602052610f7b8b60405f2061172d565b906113de565b9901949392610df2565b638baa579f60e01b5f5260045ffd5b63ba50f91160e01b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b631fec674760e31b5f5260045ffd5b82516001600160401b038111610ad25760209083010185603f82011215610ad257602081015191610ff7836111b4565b61100460405191826110e5565b8381526040838501018810610ad2575f602085819660408397018386015e83010152815201920191610db3565b82516001600160a01b0381168103610ad257815260209283019201610d4c565b34610ad2576020366003190112610ad25760206104dc63ffffffff6110746111a1565b16611688565b34610ad2576020366003190112610ad2576004356001600160401b038111610ad2576102636110ad913690600401611133565b005b602081019081106001600160401b03821117610af957604052565b604081019081106001600160401b03821117610af957604052565b90601f801991011681019081106001600160401b03821117610af957604052565b6001600160401b038111610af95760051b60200190565b600435906001600160a01b0382168203610ad257565b9080601f83011215610ad25781359061114b82611106565b9261115960405194856110e5565b82845260208085019360051b820101918211610ad257602001915b8183106111815750505090565b82356001600160a01b0381168103610ad257815260209283019201611174565b6004359063ffffffff82168203610ad257565b6001600160401b038111610af957601f01601f191660200190565b81601f82011215610ad2578035906111e6826111b4565b926111f460405194856110e5565b82845260208383010111610ad257815f926020809301838601378301015290565b602060408184019251938281528451809452019201905f5b81811061123a5750505090565b825180516001600160a01b031685526020908101516001600160601b0316818601526040909401939092019160010161122d565b9190602083820312610ad257604051611286816110af565b80938035906001600160401b038211610ad2570182601f82011215610ad2578035906112b182611106565b936112bf60405195866110e5565b82855260208086019360061b83010191818311610ad257602001925b8284106112e9575050505052565b604084830312610ad25760405190611300826110ca565b84356001600160a01b0381168103610ad25782526020850135906001600160601b0382168203610ad257826020928360409501528152019301926112db565b6066549061134c82611106565b9161135a60405193846110e5565b80835260665f9081525f805160206123c4833981519152602085015b8383106113835750505050565b600160208192604051611395816110ca565b8554848060a01b038116825260a01c83820152815201920192019190611376565b80518210156113ca5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b91908201809211610ad657565b6113f361133f565b805190925f61141a61140484611106565b9361141260405195866110e5565b808552611106565b6020840190601f19013682375f5b865181101561145a576001906001600160a01b03611446828a6113b6565b51511661145382886113b6565b5201611428565b5060408051639004134760e01b81526001600160a01b0390961660048701526024860152925160448501819052919390929091829160648301915f5b8181106115e757505f939283900391508290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610ac7575f91611557575b505f915b8451831015611539576114fa83836113b6565b51906001600160601b03602061151086896113b6565b5101511691828102928184041490151715610ad657600191611531916113de565b9201916114e7565b915050612710919250046067548110155f146115525790565b505f90565b90503d805f833e61156881836110e5565b810190602081830312610ad2578051906001600160401b038211610ad257019080601f83011215610ad257815161159e81611106565b926115ac60405194856110e5565b81845260208085019260051b820101928311610ad257602001905b8282106115d7575050505f6114e3565b81518152602091820191016115c7565b82516001600160a01b0316845285945060209384019390920191600101611496565b9190915f8382019384129112908015821691151617610ad657565b905f805b83518210156116625760019061165a906116546001600160a01b0361164d86896113b6565b5116611c9e565b90611609565b910190611628565b905061166f919250611e9b565b5050565b80548210156113ca575f5260205f2001905f90565b43811015610c1657606b54905f905b8282106116d4575050806116b457505f5b6001600160e01b031690565b5f198101908111610ad6576116ca90606b611673565b505460201c6116a8565b90916116e781841860011c8285166113de565b908263ffffffff6116f984606b611673565b505416111561170b5750915b90611697565b9250600181018091111561170557634e487b7160e01b5f52601160045260245ffd5b9043811015610c16578154905f905b8282106117655750508061175157505f919050565b5f198101908111610ad6576116ca91611673565b909161177881841860011c8285166113de565b908263ffffffff6117898488611673565b505416111561179b5750915b9061173c565b9250600181018091111561179557634e487b7160e01b5f52601160045260245ffd5b606b54806116b457505f90565b80548061175157505f919050565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6033546001600160a01b0316330361181057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606c5490611862606c6117ca565b90821515806119e6575b156118da5761187a81612244565b915f198401938411610ad6576118d06020936118b87f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b96606c611673565b509063ffffffff82549181199060201b169116179055565b50604051908152a1565b63ffffffff4311611992576118ee81612244565b91604051936118fc856110ca565b4363ffffffff1685526001600160e01b039093166020850190815292600160401b811015610af9578060016119369201606c55606c611673565b94909461197f5751925163ffffffff90931663ffffffff19602094851b16179093557f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b926118d0565b634e487b7160e01b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fd5b505f198301838111610ad657611a0263ffffffff91606c611673565b505416431461186c565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b6001600160a01b039081165f818152606a6020526040902090929190611a79906117ca565b6001600160a01b0390921692911690828214611ad457805f52606a602052611aa48360405f20611fc9565b50506040519182527fd061168252f441733658f09e4d8f5b2d998ed4ef24a2bbfd6ceca52ea131500260204393a4565b505050565b15611ae057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b611b42816120b2565b15611c775760405191611b54836110af565b611b5c61133f565b83526066545f60665580611c3d575b505f5b82518051821015611bea5781611b83916113b6565b519060665491600160401b831015610af957600183016066556066548310156113ca5760665f5280516020919091015160a01b6001600160a01b0319166001600160a01b0391909116175f805160206123c483398151915290920191909155600101611b6e565b505091611c2a90611c387f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e93604051938493604085526040850190611215565b908382036020850152611215565b0390a1565b60665f525f805160206123c4833981519152015f805160206123c48339815191525b818110611c6c5750611b6b565b5f8155600101611c5f565b63d173577960e01b5f5260045ffd5b81810392915f138015828513169184121617610ad657565b6001600160a01b0381165f818152606d602052604081209092908390611cc3906117ca565b8094845f52606e60205260ff60405f205416155f14611e3d57611ce7929350611c86565b928315611e3757825f52606d60205260405f2090815492611d07836117ca565b84151580611e12575b15611d6b57611d1e5f612244565b945f198101908111610ad6577f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594956118b8611d5b92604097611673565b505b82519182526020820152a290565b63ffffffff431161199257611d7f5f612244565b9360405195611d8d876110ca565b4363ffffffff1687526001600160e01b039095166020870190815294600160401b811015610af957611dc491600182018155611673565b95909561197f5751935160201b63ffffffff191663ffffffff94909416939093179093557f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe59492604092611d5b565b505f198501858111610ad657611e2d63ffffffff9186611673565b5054164314611d10565b50505090565b505050611e49906113eb565b91611e548184611c86565b928315611e37577f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe59491604091845f52606d602052611e9481845f20611fc9565b5050611d5d565b90611eae611ea76117bd565b9283611609565b90606b54611ebc606b6117ca565b9080151580611fa3575b15611f1f57611ed484612244565b5f198201918211610ad6576118b8611eed92606b611673565b507f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b60408051858152846020820152a1565b63ffffffff431161199257611f3384612244565b60405191611f40836110ca565b4363ffffffff1683526001600160e01b039091166020830190815290600160401b811015610af957806001611f7a9201606b55606b611673565b91909161197f579151915160201b63ffffffff191663ffffffff92909216919091179055611eed565b505f198101818111610ad657611fbf63ffffffff91606b611673565b5054164314611ec6565b9190918054611fd7826117ca565b918115158061208d575b1561200c57611fef85612244565b905f198301928311610ad657612008926118b891611673565b9190565b63ffffffff43116119925761202085612244565b906040519261202e846110ca565b4363ffffffff1684526001600160e01b039092166020840190815291600160401b811015610af95761206591600182018155611673565b91909161197f579151915160201b63ffffffff191663ffffffff929092169190911790559190565b505f198201828111610ad6576120a863ffffffff9183611673565b5054164314611fe1565b51905f80805b8451821015612115576001600160a01b036120d383876113b6565b515116906001600160a01b0316811115610f9a5761210c600191936001600160601b036020612102868a6113b6565b51015116906113de565b910190916120b8565b50919250612710149050612127575f90565b600190565b91909161213982846122b3565b60058110156122305715908161221a575b50612212575f9261218461219285946040519283916020830195630b135d3f60e11b875260248401526040604484015260648301906117d8565b03601f1981018352826110e5565b51915afa3d1561220b573d6121a6816111b4565b906121b460405192836110e5565b81523d5f602083013e5b816121ff575b816121cd575090565b9050602081805181010312610ad257602001516001600160e01b0319811690819003610ad257630b135d3f60e11b1490565b805160201491506121c4565b60606121be565b505050600190565b6001600160a01b0383811691161490505f61214a565b634e487b7160e01b5f52602160045260245ffd5b6001600160e01b03811161225e576001600160e01b031690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b8151604181036122df5750906122db91602082015190606060408401519301515f1a90612321565b9091565b6040036123185760406020830151920151918260ff1c91601b8301809311610ad6576122db936001600160ff1b03169260ff1690612321565b50505f90600290565b907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116123b85760ff1690601b821415806123ad575b6123a2576020935f93608093604051938452868401526040830152606082015282805260015afa15610ac7575f516001600160a01b0381161561239a57905f90565b505f90600190565b505050505f90600490565b50601c821415612358565b505050505f9060039056fe46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354a2646970667358221220bc483acd219e9c420e06a0ff4c9bd7a0d330db8dd90cb8b28c7ada7f03fb98e364736f6c634300081a0033","sourceMap":"1122:25313:32:-:0;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;2152:39:33;;1122:25313:32;;;;;;;;2152:39:33;1122:25313:32;;;;;;;-1:-1:-1;1122:25313:32;;;;;;-1:-1:-1;1122:25313:32;;;;;-1:-1:-1;1122:25313:32","linkReferences":{}},"deployedBytecode":{"object":"","sourceMap":"1122:25313:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;:::i;:::-;1303:62:12;;:::i;:::-;-1:-1:-1;;;;;1122:25313:32;;2409:22:12;1122:25313:32;;2503:8:12;;;:::i;:::-;1122:25313:32;;;;;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;:::i;:::-;;;;9949:19;1122:25313;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1122:25313:32;;;;4261:7;1122:25313;4296:10;1122:25313;;;;;;:::i;:::-;1303:62:12;;;:::i;:::-;4261:7:32;:::i;:::-;4296:10;:::i;1122:25313::-;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;-1:-1:-1;;;;;1122:25313:32;;:::i;:::-;;;;6861:26;1122:25313;;;;;-1:-1:-1;;;;;1122:25313:32;6861:46;;;:::i;:::-;1122:25313;;;;;;;;;;;;;;;;;;;;8466:23;1122:25313;;1069:8:16;;;1122:25313:32;1069:48:16;;;1122:25313:32;;-1:-1:-1;;;;;1122:25313:32;;;;;;;1069:48:16;-1:-1:-1;;1122:25313:32;;;;;;;1084:26:16;;1122:25313:32;1084:26:16;8466:23:32;1084:26:16;:::i;:::-;1122:25313:32;;;;1069:48:16;;1122:25313:32;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;:::i;:::-;;;;;;;;;3133:14:14;;;;3179:34;;;1122:25313:32;3178:108:14;;;;1122:25313:32;;;;-1:-1:-1;;1122:25313:32;;;;;;11708:7;;1122:25313;3394:65:14;;1122:25313:32;;4902:69:14;1122:25313:32;;;;;;4902:69:14;:::i;:::-;1122:25313:32;;;;;;-1:-1:-1;;;;;1122:25313:32;;11592:37;1122:25313;;;11592:37;1122:25313;11661:16;1122:25313;;11661:16;:::i;11708:7::-;4902:69:14;1122:25313:32;;;;;;4902:69:14;;;:::i;:::-;;:::i;:::-;1195:12:12;929:10:17;1195:12:12;:::i;:::-;3479:99:14;;1122:25313:32;;3479:99:14;1122:25313:32;;;;;;;3553:14:14;1122:25313:32;;;;;;3553:14:14;1122:25313:32;;3394:65:14;-1:-1:-1;;1122:25313:32;;;;;3394:65:14;;;1122:25313:32;;;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:32;;;;;;;3178:108:14;3258:4;;1476:19:15;:23;3219:66:14;;3178:108;3219:66;1122:25313:32;;;;;3268:17:14;3178:108;;3179:34;1122:25313:32;;;;;3197:16:14;3179:34;;1122:25313:32;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;8946:22;1122:25313;;;;;;;;8946:58;;1122:25313;8946:58;:::i;1122:25313::-;;;;;;;;;;;;;1513:6:12;1122:25313:32;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;2833:10;1122:25313;;14973:19;1122:25313;;;;;;;;14972:31;14968:92;;15069:17;1122:25313;;;;;;;;15069:17;1122:25313;2833:10;1122:25313;;14973:19;1122:25313;;;;;;;;;;;;15200:25;15158:32;2833:10;15158:32;:::i;:::-;15200:25;:::i;:::-;-1:-1:-1;;15251:15:32;1122:25313;;;-1:-1:-1;;;;;1122:25313:32;15235:69;;;;;1122:25313;;;15235:69;1122:25313;;;;;;;;;15235:69;;2833:10;1122:25313;15235:69;;1122:25313;15235:69;;;;;;;;1122:25313;-1:-1:-1;15251:15:32;1122:25313;-1:-1:-1;;;;;1122:25313:32;2833:10;15319:57;;;;1122:25313;;15235:69;;;;;:::i;:::-;1122:25313;;15235:69;;;;;1122:25313;;;;;;;;;15235:69;1122:25313;;;-1:-1:-1;;;1122:25313:32;;;;;;;;14968:92;-1:-1:-1;;;15026:23:32;;1122:25313;;15026:23;1122:25313;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;:::i;:::-;3156:10;1122:25313;;3136:19;1122:25313;;;;;;;;3135:32;3131:93;;3271:14;3156:10;;3271:14;:::i;3131:93::-;-1:-1:-1;;;3190:23:32;;1122:25313;3190:23;;1122:25313;;;;;;;;;;;;;1303:62:12;;:::i;:::-;2765:6;1122:25313:32;;-1:-1:-1;;;;;;1122:25313:32;;;;;;;-1:-1:-1;;;;;1122:25313:32;2813:40:12;1122:25313:32;;2813:40:12;1122:25313:32;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;13932:57;1122:25313;;4752:10;1122:25313;;;;;;:::i;:::-;1303:62:12;;;:::i;:::-;13859:14:32;1122:25313;;;13859:14;1122:25313;;;;;;;;;;13932:57;4752:10;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:32;;;;1303:62:12;;:::i;:::-;5403:16:32;1122:25313;;5403:16;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;-1:-1:-1;;;;;1122:25313:32;;:::i;:::-;;;;7450:26;1122:25313;;;;;-1:-1:-1;;;;;1122:25313:32;7450:108;;1122:25313;;;7450:108;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;:::i;:::-;;;;;;12195:21;1122:25313;;12605:15;1122:25313;12584:36;12580:98;;12704:10;;;:::i;12580:98::-;-1:-1:-1;;;12643:24:32;;1122:25313;12643:24;;1122:25313;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10158:14;1122:25313;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;2658:10;1122:25313;;15820:19;1122:25313;;;;;;;;15816:95;;15920:17;1122:25313;;-1:-1:-1;;1122:25313:32;;;;;16123:11;1122:25313;;15920:17;1122:25313;2658:10;1122:25313;;15820:19;1122:25313;;;;;;;;;;;;;;16051:25;16009:32;2658:10;16009:32;:::i;16051:25::-;2658:10;;;16123:11;:::i;:::-;16161:15;1122:25313;-1:-1:-1;;;;;1122:25313:32;16145:119;;;;;1122:25313;;;;;;;;;;;;;;;;16145:119;;2658:10;1122:25313;16145:119;;1122:25313;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;16145:119;;;;;;;;;;1122:25313;-1:-1:-1;16161:15:32;1122:25313;-1:-1:-1;;;;;1122:25313:32;2658:10;16279:46;;;;1122:25313;;16145:119;;;;1122:25313;16145:119;;:::i;:::-;1122:25313;16145:119;;;;1122:25313;;;;;;;;;16145:119;1122:25313;;;;;;;;;;;;;;;15816:95;15873:27;;;1122:25313;15873:27;1122:25313;;15873:27;1122:25313;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;-1:-1:-1;;;;;1122:25313:32;;:::i;:::-;;;;7914:22;1122:25313;;;7914:42;1122:25313;;;7914:42;:::i;1122:25313::-;;;;;;-1:-1:-1;;1122:25313:32;;;;;8188:28;;:::i;1122:25313::-;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;:::i;:::-;;1441:12:16;1427:26;;1122:25313:32;;;9781:23;1122:25313;1550:15:16;1122:25313:32;1575:255:16;1582:10;;;;;;1846:50;:9;;;-1:-1:-1;1122:25313:32;;;;;;;;1846:50:16;-1:-1:-1;;1122:25313:32;;;;;;;1862:27:16;1122:25313:32;1862:27:16;9781:23:32;1862:27:16;:::i;1575:255::-;953:5:21;;942:21;953:5;;;729:6:33;;943:5:21;;;942:21;:::i;:::-;1674:22:16;;1122:25313:32;1674:22:16;;9781:23:32;1674:22:16;:::i;:::-;-1:-1:-1;1122:25313:32;;1674:49:16;;;;1743:10;1670:150;;1575:255;;;1670:150;1122:25313:32;;729:6:33;1122:25313:32;;;;;;1670:150:16;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;:::i;:::-;;;;6101:56;;;1122:25313;6101:56;1122:25313;6101:56;;1122:25313;;;;;;6101:56;;1122:25313;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20642:20;1122:25313;20696:20;1122:25313;;;;21765:35;;21761:89;;21863:19;;21859:72;;20802:9;;1122:25313;23417:12;;23398:31;;;;;20797:536;20813:17;;;;;;24922:92;;;;;;;;25030:47;;;:::i;:::-;26173:27;;26169:86;;1122:25313;;;25625:23;1122:25313;1550:15:16;1122:25313:32;1575:255:16;1582:10;;;;;;-1:-1:-1;;1846:9:16;;;:50;1122:25313:32;1846:50:16;-1:-1:-1;;;;;1122:25313:32;26338:30;26334:93;;1122:25313;;-1:-1:-1;;;1122:25313:32;;;;;26334:93;26391:25;;;1122:25313;26391:25;1122:25313;;26391:25;1846:50:16;-1:-1:-1;;1122:25313:32;;;;;;;1862:27:16;;25625:23:32;1862:27:16;:::i;:::-;1122:25313:32;;;;1846:50:16;;1575:255;953:5:21;;942:21;953:5;;;1122:25313:32;729:6:33;943:5:21;;;942:21;:::i;:::-;1674:22:16;;1122:25313:32;1674:22:16;;25625:23:32;1674:22:16;:::i;:::-;-1:-1:-1;1122:25313:32;;1674:49:16;;;;1743:10;1670:150;;1575:255;;;1670:150;1122:25313:32;;;;;;;;;1670:150:16;1122:25313:32;;;;;;;;;;;;26169:86;26223:21;;;1122:25313;26223:21;1122:25313;;26223:21;24922:92;23452:23;;;1122:25313;24980:23;1122:25313;;24980:23;20832:3;1122:25313;;;;;;;-1:-1:-1;;;;;20869:13:32;1122:25313;20869:13;;:::i;:::-;1122:25313;;23394:92;;;1122:25313;;;23568:26;1122:25313;;;;;;;;23568:111;1122:25313;;;;23568:111;:::i;:::-;1122:25313;;-1:-1:-1;;;;;1122:25313:32;22273:29;;22269:78;;22772:50;21081:14;;;;;;:::i;:::-;;22772:50;;:::i;:::-;22771:51;22767:107;;1122:25313;21292:30;21111;24224:92;1122:25313;;;;24332:22;1122:25313;;24332:59;1122:25313;;;;24332:59;:::i;:::-;21292:30;;:::i;:::-;20832:3;1122:25313;20802:9;;;;;22767:107;22845:18;;;1122:25313;22845:18;1122:25313;;22845:18;22269:78;22325:11;;;1122:25313;22325:11;1122:25313;;22325:11;21859:72;21905:15;;;1122:25313;21905:15;1122:25313;;21905:15;21761:89;21823:16;;;1122:25313;21823:16;1122:25313;;21823:16;1122:25313;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;9364:44;1122:25313;;;:::i;:::-;;9364:44;:::i;1122:25313::-;;;;;;-1:-1:-1;;1122:25313:32;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;3687:10;1122:25313;;;;;;:::i;3687:10::-;1122:25313;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;:::o;:::-;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1122:25313:32;;;;;;-1:-1:-1;;1122:25313:32;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1122:25313:32;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;6511:7;1122:25313;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6511:7;-1:-1:-1;1122:25313:32;;;-1:-1:-1;;;;;;;;;;;1122:25313:32;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;10470:803::-;1122:25313;;:::i;:::-;;;10639:14;;1122:25313;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;1122:25313:32;;;;;10786:3;1122:25313;;10759:25;;;;;1122:25313;;-1:-1:-1;;;;;10821:17:32;1122:25313;10821:17;;:::i;:::-;;1122:25313;;10805:42;;;;:::i;:::-;1122:25313;;10748:9;;10759:25;-1:-1:-1;1122:25313:32;;;-1:-1:-1;;;10893:93:32;;-1:-1:-1;;;;;1122:25313:32;;;10893:93;;;1122:25313;;;;;;;;;;;;;10759:25;;;;1122:25313;;;;;;;;-1:-1:-1;1122:25313:32;;;;;;-1:-1:-1;1122:25313:32;;10893:93;;;;;-1:-1:-1;10893:93:32;;-1:-1:-1;10893:18:32;-1:-1:-1;;;;;1122:25313:32;10893:93;;;;;;;1122:25313;10893:93;;;1122:25313;11001:9;1122:25313;10996:123;11039:3;1122:25313;;11012:25;;;;;11068:9;;;;:::i;:::-;1122:25313;11080:17;-1:-1:-1;;;;;1122:25313:32;11080:17;;;;:::i;:::-;;:28;1122:25313;;;;;;;;;;;;;;;;;;11058:50;;;;:::i;:::-;11039:3;1122:25313;11001:9;;;11012:25;;;;729:6:33;11012:25:32;;;729:6:33;11174:14:32;1122:25313;11164:24;;;11160:107;11174:14;;;11204:13;:::o;11160:107::-;11248:8;1122:25313;11248:8;:::o;10893:93::-;;;;;1122:25313;10893:93;;;;;;:::i;:::-;;;1122:25313;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;10893:93;;;;;;1122:25313;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:32;;;;;-1:-1:-1;1122:25313:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12971:251::-;;-1:-1:-1;;13106:3:32;1122:25313;;13083:21;;;;;1122:25313;;13125:45;;13134:36;-1:-1:-1;;;;;13156:13:32;;;;:::i;:::-;1122:25313;;13134:36;:::i;:::-;13125:45;;:::i;:::-;13106:3;1122:25313;13072:9;;;13083:21;;;13190:25;13083:21;;;13190:25;:::i;:::-;12971:251;;:::o;1122:25313::-;;;;;;;;-1:-1:-1;1122:25313:32;;-1:-1:-1;1122:25313:32;;;-1:-1:-1;1122:25313:32;:::o;1314:589:16:-;1441:12;1427:26;;1122:25313:32;;;9364:19;1122:25313;1550:15:16;1516:17;1575:255;1582:10;;;;;;-1:-1:-1;;1846:9:16;;;:50;1516:17;1846:50;-1:-1:-1;;;;;1122:25313:32;;1314:589:16:o;1846:50::-;-1:-1:-1;;1122:25313:32;;;;;;;1862:27:16;;9364:19:32;1862:27:16;:::i;:::-;1122:25313:32;;;;1846:50:16;;1575:255;953:5:21;;942:21;953:5;;;729:6:33;;943:5:21;;;942:21;:::i;:::-;1674:22:16;;1122:25313:32;1674:22:16;;9364:19:32;1674:22:16;:::i;:::-;-1:-1:-1;1122:25313:32;;1674:49:16;;;;1743:10;1670:150;;1575:255;;;1670:150;1122:25313:32;;729:6:33;1122:25313:32;;;;;;1670:150:16;1122:25313:32;;;;1516:17:16;1122:25313:32;;;;;1516:17:16;1122:25313:32;1314:589:16;;1441:12;1427:26;;1122:25313:32;;;;;1550:15:16;1516:17;1575:255;1582:10;;;;;;-1:-1:-1;;1846:9:16;;;-1:-1:-1;1516:17:16;;1122:25313:32;-1:-1:-1;1314:589:16:o;1846:50::-;-1:-1:-1;;1122:25313:32;;;;;;;1862:27:16;;;:::i;1575:255::-;953:5:21;;942:21;953:5;;;729:6:33;;943:5:21;;;942:21;:::i;:::-;1674:22:16;;1122:25313:32;1674:22:16;;;;:::i;:::-;-1:-1:-1;1122:25313:32;;1674:49:16;;;;1743:10;1670:150;;1575:255;;;1670:150;1122:25313:32;;729:6:33;1122:25313:32;;;;;;1670:150:16;1122:25313:32;;;;1516:17:16;1122:25313:32;;;;;1516:17:16;1122:25313:32;934:190:16;8188:19:32;1122:25313;1069:8:16;;;-1:-1:-1;1028:17:16;;934:190::o;:::-;1122:25313:32;;1069:8:16;;;-1:-1:-1;1028:17:16;;1122:25313:32;-1:-1:-1;934:190:16:o;1122:25313:32:-;;;;;;;;;;;;;;;;;-1:-1:-1;1122:25313:32;;;;;;;;-1:-1:-1;;1122:25313:32;;;;:::o;1599:130:12:-;1513:6;1122:25313:32;-1:-1:-1;;;;;1122:25313:32;929:10:17;1662:23:12;1122:25313:32;;1599:130:12:o;1122:25313:32:-;;;;;;;;;;;;;;;;;;;;;;;;;13392:184;13468:23;1122:25313;2240:12:16;;13468:23:32;2240:12:16;:::i;:::-;2266:7;;;;:66;;;13392:184:32;2262:370:16;;;2384:36;;;:::i;:::-;1122:25313:32;;;;;;;;;;2348:72:16;1122:25313:32;2348:26:16;;13529:40:32;2348:26:16;13468:23:32;2348:26:16;:::i;:::-;:72;1122:25313:32;;;;;;;;;;;;;;;;;2348:72:16;2641:19;1122:25313:32;;;;;13529:40;13392:184::o;2262:370:16:-;1122:25313:32;2546:12:16;15272:25:22;1122:25313:32;;2569:36:16;;;:::i;:::-;1122:25313:32;;;;;;;:::i;:::-;2546:12:16;1122:25313:32;;;;-1:-1:-1;;;;;1122:25313:32;;;2491:116:16;;;1122:25313:32;;;2491:116:16;-1:-1:-1;;;1122:25313:32;;;;;;;;;;13468:23;1122:25313;13468:23;1122:25313;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;;13529:40;;2262:370:16;;1122:25313:32;;;;-1:-1:-1;1122:25313:32;-1:-1:-1;1122:25313:32;;;-1:-1:-1;1122:25313:32;;;;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:32;;;;;;;2266:66:16;-1:-1:-1;;;1122:25313:32;;;;;;;2277:26:16;1122:25313:32;2277:26:16;13468:23:32;2277:26:16;:::i;:::-;1122:25313:32;;;2320:12:16;2277:55;2266:66;;2673:187:12;2765:6;1122:25313:32;;-1:-1:-1;;;;;1122:25313:32;;;-1:-1:-1;;;;;;1122:25313:32;;;;;;;;;;2813:40:12;-1:-1:-1;;2813:40:12;2673:187::o;16562:535:32:-;-1:-1:-1;;;;;1122:25313:32;;;-1:-1:-1;1122:25313:32;;;16734:26;1122:25313;;;;;;;;;16734:46;;;:::i;:::-;-1:-1:-1;;;;;1122:25313:32;;;;;;;16805:31;;;16801:68;;1122:25313;-1:-1:-1;1122:25313:32;16734:26;1122:25313;;16878:67;1122:25313;;-1:-1:-1;1122:25313:32;16878:67;:::i;:::-;1122:25313;;;;;;;16960:130;1122:25313;17013:12;16960:130;;16562:535::o;16801:68::-;16852:7;;;:::o;1122:25313::-;;;;:::o;:::-;;;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:32;;;;;;;14360:416;14439:26;;;:::i;:::-;14438:27;14434:80;;1122:25313;;;;;;:::i;:::-;;;:::i;:::-;;;14549:7;1122:25313;-1:-1:-1;14549:7:32;1122:25313;;;;14360:416;14595:9;-1:-1:-1;14640:3:32;14610:21;;1122:25313;;14606:32;;;;;14683:24;;;;:::i;:::-;;1122:25313;14549:7;1122:25313;;-1:-1:-1;;;1122:25313:32;;;;;;;;14549:7;1122:25313;14549:7;1122:25313;;;;;;14549:7;-1:-1:-1;1122:25313:32;;;;;;;;;;;-1:-1:-1;;;;;;1122:25313:32;-1:-1:-1;;;;;1122:25313:32;;;;;-1:-1:-1;;;;;;;;;;;1122:25313:32;;;;;;;;;14595:9;;14606:32;;;;1122:25313;14606:32;1122:25313;14733:36;14606:32;1122:25313;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;14733:36;;;14360:416::o;1122:25313::-;14549:7;-1:-1:-1;1122:25313:32;-1:-1:-1;;;;;;;;;;;1122:25313:32;-1:-1:-1;;;;;;;;;;;1122:25313:32;;;;;;;;;;-1:-1:-1;1122:25313:32;;;;;;14434:80;14488:15;;;-1:-1:-1;14488:15:32;;-1:-1:-1;14488:15:32;1122:25313;;;;;;;-1:-1:-1;1122:25313:32;;;;;;;;;;;;;:::o;17277:810::-;-1:-1:-1;;;;;1122:25313:32;;;;;;17454:22;1122:25313;;;;;;;17407:17;1122:25313;;17454:42;;;:::i;:::-;1122:25313;;;;;17511:19;1122:25313;;;;;;;;17510:31;17506:484;1122:25313;;;17557:26;;;;;:::i;:::-;17601:10;;;17597:61;;1122:25313;;;17454:22;1122:25313;;;;;17671:41;1122:25313;;2240:12:16;;;;:::i;:::-;2266:7;;;:66;;;17506:484:32;2262:370:16;;;2384:36;1122:25313:32;2384:36:16;:::i;:::-;1122:25313:32;-1:-1:-1;;1122:25313:32;;;;;;;18004:54;2348:26:16;;:72;:26;1122:25313:32;2348:26:16;;:::i;:72::-;2641:19;17506:484:32;1122:25313;;;;;;;;;18004:54;17277:810;:::o;2262:370:16:-;1122:25313:32;2546:12:16;15272:25:22;1122:25313:32;;2569:36:16;1122:25313:32;2569:36:16;:::i;:::-;1122:25313:32;;;;;;;:::i;:::-;2546:12:16;1122:25313:32;;;;-1:-1:-1;;;;;1122:25313:32;;;;2491:116:16;;1122:25313:32;;;2491:116:16;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;;;;;;18004:54;;1122:25313;;2262:370:16;;2266:66;-1:-1:-1;;;1122:25313:32;;;;;;;2277:26:16;1122:25313:32;2277:26:16;;;:::i;:::-;1122:25313:32;;;2320:12:16;2277:55;2266:66;;17597:61:32;17631:12;;;;:::o;17506:484::-;17755:28;;;;;;:::i;:::-;17805:37;;;;;:::i;:::-;17860:10;;;17856:61;;18004:54;1122:25313;;;;;;17454:22;1122:25313;;17930:49;1122:25313;;;;17930:49;:::i;:::-;17506:484;;;;18366:403;;18572:30;18515:28;;:::i;:::-;18572:30;;;:::i;:::-;18657:40;18515:19;1122:25313;2240:12:16;18515:19:32;2240:12:16;:::i;:::-;2266:7;;;;:66;;;18366:403:32;2262:370:16;;;2384:36;;;:::i;:::-;-1:-1:-1;;1122:25313:32;;;;;;;2348:26:16;:72;:26;18515:19:32;2348:26:16;:::i;:72::-;2641:19;18712:50:32;1122:25313;;;;;;;;;;;18712:50;18366:403::o;2262:370:16:-;1122:25313:32;2546:12:16;15272:25:22;1122:25313:32;;2569:36:16;;;:::i;:::-;1122:25313:32;;;;;;:::i;:::-;2546:12:16;1122:25313:32;;;;-1:-1:-1;;;;;1122:25313:32;;;2491:116:16;;;1122:25313:32;;;2491:116:16;-1:-1:-1;;;1122:25313:32;;;;;;;;;;18515:19;1122:25313;18515:19;1122:25313;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;;;;;2262:370:16;;2266:66;-1:-1:-1;;;1122:25313:32;;;;;;;2277:26:16;1122:25313:32;2277:26:16;18515:19:32;2277:26:16;:::i;:::-;1122:25313:32;;;2320:12:16;2277:55;2266:66;;2081:586;;;;1122:25313:32;;2240:12:16;;;:::i;:::-;2266:7;;;;:66;;;2081:586;2262:370;;;2384:36;;;:::i;:::-;1122:25313:32;;;;;;;;;;2348:72:16;:26;;;;:::i;:72::-;2641:19;2081:586;:::o;2262:370::-;1122:25313:32;2546:12:16;15272:25:22;1122:25313:32;;2569:36:16;;;:::i;:::-;1122:25313:32;;;;;;;:::i;:::-;2546:12:16;1122:25313:32;;;;-1:-1:-1;;;;;1122:25313:32;;;2491:116:16;;;1122:25313:32;;;2491:116:16;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;1122:25313:32;;;;;;;;;;;;2641:19:16;2081:586;:::o;2266:66::-;-1:-1:-1;;;1122:25313:32;;;;;;;2277:26:16;1122:25313:32;2277:26:16;;;:::i;:::-;1122:25313:32;;;2320:12:16;2277:55;2266:66;;19208:671:32;19345:18;;1122:25313;;;19508:3;1122:25313;;19485:21;;;;;-1:-1:-1;;;;;19553:13:32;;;;:::i;:::-;;1122:25313;;;-1:-1:-1;;;;;1122:25313:32;19594:31;-1:-1:-1;19594:31:32;19590:55;;19703:43;1122:25313;19659:30;19722:13;-1:-1:-1;;;;;19722:24:32;:13;;;;:::i;:::-;;:24;1122:25313;;19703:43;;:::i;:::-;19508:3;1122:25313;19474:9;;;;19485:21;-1:-1:-1;19485:21:32;;-1:-1:-1;729:6:33;19770:22:32;;-1:-1:-1;729:6:33;;1122:25313:32;19808:12;:::o;19766:107::-;1122:25313;19851:11;:::o;1083:688:20:-;;;;1294:44;;;;:::i;:::-;1122:25313:32;;;;;;1352:46:20;:69;;;;1083:688;1348:111;;;1122:25313:32;;;1538:86:20;1122:25313:32;;;;1538:86:20;;;;;;6250:45:32;;;;1538:86:20;;;;;1122:25313:32;;;;;;;;;;;:::i;:::-;1538:86:20;1122:25313:32;;1538:86:20;;;;;;:::i;:::-;1507:127;;;;1122:25313:32;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1538:86:20;1122:25313:32;;;;1652:30:20;;;1122:25313:32;1652:111:20;;;1644:120;1083:688;:::o;1652:111::-;1122:25313:32;;1538:86:20;1122:25313:32;;;1686:28:20;;1122:25313:32;;;;1538:86:20;1686:28;1122:25313:32;-1:-1:-1;;;;;;1122:25313:32;;;;;;;;-1:-1:-1;;;1686:77:20;;1083:688::o;1652:30::-;1122:25313:32;;1538:86:20;1663:19;;-1:-1:-1;1652:30:20;;1122:25313:32;;;;1348:111:20;1437:11;;;1122:25313:32;1437:11:20;:::o;1352:69::-;-1:-1:-1;;;;;1122:25313:32;;;;;1402:19:20;;-1:-1:-1;1352:69:20;;;1122:25313:32;;;;;;;;;;;;2762:192:22;-1:-1:-1;;;;;2846:26:22;;1122:25313:32;;-1:-1:-1;;;;;1122:25313:32;;2762:192:22:o;1122:25313:32:-;;;-1:-1:-1;;;1122:25313:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:32;;;;;;;2265:1373:19;1122:25313:32;;2596:2:19;2576:22;;2596:2;;2859:180;;3059:25;2859:180;;;;;;;;;;;;;;-1:-1:-1;2859:180:19;3059:25;;:::i;:::-;3052:32;;:::o;2572:1060::-;3125:2;3105:22;3125:2;;;3368:123;;;;;;;1122:25313:32;;;;;5189:2:19;1122:25313:32;;;;;;;5209:25:19;;-1:-1:-1;;;;;5060:80:19;;1122:25313:32;;;5209:25:19;:::i;3101:531::-;3565:56;;3581:1;3565:56;3585:35;3565:56;:::o;5832:1603::-;;6882:66;6869:79;;6865:161;;1122:25313:32;;7039:7:19;7044:2;7039:7;;;:18;;;5832:1603;7035:100;;1122:25313:32;;-1:-1:-1;1122:25313:32;;;;;;;;;;;;;;;;;;;;7246:24:19;;;;;;;;;-1:-1:-1;7246:24:19;-1:-1:-1;;;;;1122:25313:32;;7284:20:19;7280:101;;7391:37;-1:-1:-1;5832:1603:19;:::o;7280:101::-;7320:50;-1:-1:-1;7320:50:19;7246:24;7320:50;:::o;7035:100::-;7073:51;;;;7089:1;7073:51;7093:30;7073:51;:::o;7039:18::-;7050:7;7055:2;7050:7;;;7039:18;;6865:161;6964:51;;;;6980:1;6964:51;6984:30;6964:51;:::o","linkReferences":{},"immutableReferences":{"8648":[{"start":5291,"length":32}]}},"methodIdentifiers":{"deregisterOperator()":"857dc190","getLastCheckpointOperatorWeight(address)":"3b242e4a","getLastCheckpointThresholdWeight()":"b933fa74","getLastCheckpointThresholdWeightAtBlock(uint32)":"1e4cd85e","getLastCheckpointTotalWeight()":"314f3a49","getLastCheckpointTotalWeightAtBlock(uint32)":"0dba3394","getLastestOperatorSigningKey(address)":"cdcd3581","getOperatorSigningKeyAtBlock(address,uint256)":"5e1042e8","getOperatorWeight(address)":"98ec1ac9","getOperatorWeightAtBlock(address,uint32)":"955f2d90","initialize(address,uint256,((address,uint96)[]))":"ab118995","isValidSignature(bytes32,bytes)":"1626ba7e","minimumWeight()":"40bf2fb7","operatorRegistered(address)":"ec7fbb31","owner()":"8da5cb5b","quorum()":"1703a018","registerOperatorWithSignature((bytes,bytes32,uint256),address)":"3d5611f6","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateMinimumWeight(uint256,address[])":"696255be","updateOperatorSigningKey(address)":"743c31f4","updateOperators(address[])":"00cf2ab5","updateOperatorsForQuorum(address[][],bytes)":"5140a548","updateQuorumConfig(((address,uint96)[]),address[])":"dec5d1f6","updateStakeThreshold(uint256)":"5ef53329"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientSignedStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuorum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReferenceBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignedWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustUpdateAllOperators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSorted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_old\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"}],\"name\":\"MinimumWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_avs\",\"type\":\"address\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_avs\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"}],\"name\":\"OperatorWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Quorum\",\"name\":\"_old\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Quorum\",\"name\":\"_new\",\"type\":\"tuple\"}],\"name\":\"QuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningKey\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldSigningKey\",\"type\":\"address\"}],\"name\":\"SigningKeyUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"}],\"name\":\"ThresholdWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTotalWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalWeight\",\"type\":\"uint256\"}],\"name\":\"TotalWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinimumWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinimumWeight\",\"type\":\"uint256\"}],\"name\":\"UpdateMinimumWeight\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getLastCheckpointOperatorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastCheckpointThresholdWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getLastCheckpointThresholdWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastCheckpointTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getLastCheckpointTotalWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getLastestOperatorSigningKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getOperatorSigningKeyAtBlock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getOperatorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getOperatorWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_serviceManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"_quorum\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatureData\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"operatorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"_operatorSignature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_signingKey\",\"type\":\"address\"}],\"name\":\"registerOperatorWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinimumWeight\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateMinimumWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSigningKey\",\"type\":\"address\"}],\"name\":\"updateOperatorSigningKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateOperators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"operatorsPerQuorum\",\"type\":\"address[][]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"updateOperatorsForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"_quorum\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateQuorumConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"}],\"name\":\"updateStakeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"THIS CONTRACT IS NOT AUDITED\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MinimumWeightUpdated(uint256,uint256)\":{\"params\":{\"_new\":\"The new minimumWeight\",\"_old\":\"The previous minimum weight\"}},\"OperatorDeregistered(address,address)\":{\"params\":{\"_avs\":\"The address of the associated AVS\",\"_operator\":\"The address of the deregistered operator\"}},\"OperatorRegistered(address,address)\":{\"params\":{\"_avs\":\"The address of the associated AVS\",\"_operator\":\"The address of the registered operator\"}},\"OperatorWeightUpdated(address,uint256,uint256)\":{\"params\":{\"_operator\":\"The address of the operator updated\",\"newWeight\":\"The operator's weight after the update\",\"oldWeight\":\"The operator's weight before the update\"}},\"QuorumUpdated(((address,uint96)[]),((address,uint96)[]))\":{\"params\":{\"_new\":\"The new quorum configuration\",\"_old\":\"The previous quorum configuration\"}},\"SigningKeyUpdate(address,uint256,address,address)\":{\"params\":{\"newSigningKey\":\"The operator's signing key after the update\",\"oldSigningKey\":\"The operator's signing key before the update\",\"operator\":\"The address of the operator whose signing key was updated\",\"updateBlock\":\"The block number at which the signing key was updated\"}},\"TotalWeightUpdated(uint256,uint256)\":{\"params\":{\"newTotalWeight\":\"The total weight after the update\",\"oldTotalWeight\":\"The total weight before the update\"}},\"UpdateMinimumWeight(uint256,uint256)\":{\"params\":{\"newMinimumWeight\":\"The updated weight\",\"oldMinimumWeight\":\"The previous weight\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to create ECDSAStakeRegistry.\",\"params\":{\"_delegationManager\":\"Address of the DelegationManager contract that this registry interacts with.\"}},\"getLastCheckpointOperatorWeight(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The latest weight of the operator.\"}},\"getLastCheckpointThresholdWeight()\":{\"returns\":{\"_0\":\"uint256 - The latest threshold weight.\"}},\"getLastCheckpointThresholdWeightAtBlock(uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the threshold weight for the quorum\"},\"returns\":{\"_0\":\"uint256 - The threshold weight the given block.\"}},\"getLastCheckpointTotalWeight()\":{\"returns\":{\"_0\":\"uint256 - The latest total weight.\"}},\"getLastCheckpointTotalWeightAtBlock(uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the total weight for the quorum\"},\"returns\":{\"_0\":\"uint256 - The total weight at the given block.\"}},\"getLastestOperatorSigningKey(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"The latest signing key of the operator.\"}},\"getOperatorSigningKeyAtBlock(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number to get the operator's signing key.\",\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"The signing key of the operator at the given block.\"}},\"getOperatorWeight(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The current weight of the operator; returns 0 if below the threshold.\"}},\"getOperatorWeightAtBlock(address,uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the operator weight for the quorum\",\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The weight of the operator at the given block.\"}},\"initialize(address,uint256,((address,uint96)[]))\":{\"params\":{\"_quorum\":\"The quorum struct containing the details of the quorum thresholds.\",\"_serviceManager\":\"The address of the service manager.\",\"_thresholdWeight\":\"The threshold weight in basis points.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_dataHash\":\"The hash of the data that was signed.\",\"_signatureData\":\"Encoded signature data consisting of an array of operators, an array of signatures, and a reference block number.\"},\"returns\":{\"_0\":\"The function selector that indicates the signature is valid according to ERC1271 standard.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"quorum()\":{\"returns\":{\"_0\":\"Quorum - The current quorum of strategies and weights\"}},\"registerOperatorWithSignature((bytes,bytes32,uint256),address)\":{\"params\":{\"_operatorSignature\":\"Contains the operator's signature, salt, and expiry\",\"_signingKey\":\"The signing key to add to the operator's history\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMinimumWeight(uint256,address[])\":{\"details\":\"Access controlled to the contract owner\",\"params\":{\"_newMinimumWeight\":\"The new weight an operator must have to join the operator set\"}},\"updateOperatorSigningKey(address)\":{\"details\":\"Only callable by the operator themselves\",\"params\":{\"_newSigningKey\":\"The new signing key to set for the operator\"}},\"updateOperators(address[])\":{\"details\":\"Queries stakes from the Eigenlayer core DelegationManager contract\",\"params\":{\"_operators\":\"A list of operator addresses to update\"}},\"updateOperatorsForQuorum(address[][],bytes)\":{\"details\":\"This interface maintains compatibility with avs-sync which handles multiquorums while this registry has a single quorum\",\"params\":{\"operatorsPerQuorum\":\"An array of operator address arrays, one for each quorum.\"}},\"updateQuorumConfig(((address,uint96)[]),address[])\":{\"details\":\"Only callable by the contract owner. It first updates the quorum configuration and then updates the list of operators.\",\"params\":{\"_operators\":\"The list of operator addresses to update stakes for\",\"_quorum\":\"The new quorum configuration, including strategies and their new weights\"}},\"updateStakeThreshold(uint256)\":{\"details\":\"This function can only be invoked by the owner of the contract. It delegates the update to an internal function `_updateStakeThreshold`.\",\"params\":{\"_thresholdWeight\":\"The updated threshold weight required to validate a message. This is the cumulative weight that must be met or exceeded by the sum of the stakes of the signatories for a message to be deemed valid.\"}}},\"title\":\"ECDSA Stake Registry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientSignedStake()\":[{\"notice\":\"Indicates the total signed stake fails to meet the required threshold.\"}],\"InsufficientWeight()\":[{\"notice\":\"Indicates an individual signer's weight fails to meet the required threshold.\"}],\"InvalidLength()\":[{\"notice\":\"Indicates encountering an invalid length for the signers or signatures array.\"}],\"InvalidQuorum()\":[{\"notice\":\"Indicates the quorum is invalid\"}],\"InvalidReferenceBlock()\":[{\"notice\":\"Reference blocks must be for blocks that have already been confirmed\"}],\"InvalidSignature()\":[{\"notice\":\"Indicates encountering an invalid signature.\"}],\"InvalidSignedWeight()\":[{\"notice\":\"Indicates operator weights were out of sync and the signed weight exceed the total\"}],\"InvalidThreshold()\":[{\"notice\":\"Thrown when the threshold update is greater than BPS\"}],\"LengthMismatch()\":[{\"notice\":\"Indicates when the lengths of the signers array and signatures array do not match.\"}],\"MustUpdateAllOperators()\":[{\"notice\":\"Thrown when missing operators in an update\"}],\"NotSorted()\":[{\"notice\":\"Indicates the system finds a list of items unsorted\"}],\"OperatorAlreadyRegistered()\":[{\"notice\":\"Thrown when registering an already registered operator\"}],\"OperatorNotRegistered()\":[{\"notice\":\"Thrown when de-registering or updating the stake for an unregisted operator\"}]},\"events\":{\"MinimumWeightUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the weight to join the operator set updates\"},\"OperatorDeregistered(address,address)\":{\"notice\":\"Emitted when the system deregisters an operator\"},\"OperatorRegistered(address,address)\":{\"notice\":\"Emitted when the system registers an operator\"},\"OperatorWeightUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the system updates an operator's weight\"},\"QuorumUpdated(((address,uint96)[]),((address,uint96)[]))\":{\"notice\":\"Emitted when the system updates the quorum\"},\"SigningKeyUpdate(address,uint256,address,address)\":{\"notice\":\"Emitted when an operator's signing key is updated\"},\"ThresholdWeightUpdated(uint256)\":{\"notice\":\"Emits when setting a new threshold weight.\"},\"TotalWeightUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the system updates the total weight\"},\"UpdateMinimumWeight(uint256,uint256)\":{\"notice\":\"Emitted when the weight required to be an operator changes\"}},\"kind\":\"user\",\"methods\":{\"deregisterOperator()\":{\"notice\":\"Deregisters an existing operator\"},\"getLastCheckpointOperatorWeight(address)\":{\"notice\":\"Retrieves the last recorded weight for a given operator.\"},\"getLastCheckpointThresholdWeight()\":{\"notice\":\"Retrieves the last recorded threshold weight\"},\"getLastCheckpointThresholdWeightAtBlock(uint32)\":{\"notice\":\"Retrieves the threshold weight at a specific block number.\"},\"getLastCheckpointTotalWeight()\":{\"notice\":\"Retrieves the last recorded total weight across all operators.\"},\"getLastCheckpointTotalWeightAtBlock(uint32)\":{\"notice\":\"Retrieves the total weight at a specific block number.\"},\"getLastestOperatorSigningKey(address)\":{\"notice\":\"Retrieves the latest signing key for a given operator.\"},\"getOperatorSigningKeyAtBlock(address,uint256)\":{\"notice\":\"Retrieves the latest signing key for a given operator at a specific block number.\"},\"getOperatorWeight(address)\":{\"notice\":\"Calculates the current weight of an operator based on their delegated stake in the strategies considered in the quorum\"},\"getOperatorWeightAtBlock(address,uint32)\":{\"notice\":\"Retrieves the operator's weight at a specific block number.\"},\"initialize(address,uint256,((address,uint96)[]))\":{\"notice\":\"Initializes the contract with the given parameters.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies if the provided signature data is valid for the given data hash.\"},\"minimumWeight()\":{\"notice\":\"Returns the weight an operator must have to contribute to validating an AVS\"},\"quorum()\":{\"notice\":\"Retrieves the current stake quorum details.\"},\"registerOperatorWithSignature((bytes,bytes32,uint256),address)\":{\"notice\":\"Registers a new operator using a provided signature and signing key\"},\"updateMinimumWeight(uint256,address[])\":{\"notice\":\"Updates the weight an operator must have to join the operator set\"},\"updateOperatorSigningKey(address)\":{\"notice\":\"Updates the signing key for an operator\"},\"updateOperators(address[])\":{\"notice\":\"Updates the StakeRegistry's view of one or more operators' stakes adding a new entry in their history of stake checkpoints,\"},\"updateOperatorsForQuorum(address[][],bytes)\":{\"notice\":\"Updates the set of operators for the first quorum.\"},\"updateQuorumConfig(((address,uint96)[]),address[])\":{\"notice\":\"Updates the quorum configuration and the set of operators\"},\"updateStakeThreshold(uint256)\":{\"notice\":\"Sets a new cumulative threshold weight for message validation by operator set signatures.\"}},\"notice\":\"Manages operator registration and quorum updates for an AVS using ECDSA signatures.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol\":\"ECDSAStakeRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer/contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/\",\":@eigenlayer/middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer/test/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/test/\",\":@layer/=contracts/solidity/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3\",\"dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0x39529942c9f3bab419e0570e3c51c27b49803fb0b3821a0fd06f47ab8835ed81\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://da46171725cfe3dd23c0a4f58abf2565eb7db619495fa4fb8bab55aaff9d9c7a\",\"dweb:/ipfs/QmeEVMVWF4peGBEK72rcedp6sWwhuYcVj8q728zrnTzZ6A\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol\":{\"keccak256\":\"0x7fb4716864bc9693785f07ce15f325a44413ad5d2d5685852a9e6112927abd60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2abe805bc615c15daea179f3ff3e3b890f9c0d5ec18d0bb8fad03ab128157ee3\",\"dweb:/ipfs/Qma4UizH7DhTeDfGfkhFFKLnU6p8U9cmodTbgTdRzeFoXX\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xe8c62ca00ed2d0a4d9b7e3c4bf7d62c821618b2cdb3c844da91a1193986851bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a459d8907c5fe73d70b4c522e48127b13b9aaa29a223670e928a2a5e5e4c8f8\",\"dweb:/ipfs/QmcwBnMVrajEBgj2i1saNXnQ6ytHQdnpQF978E86EuhvtX\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0xb19a57535ad6c6d773f61c1e8f8cc190fa35e12bfadf3743092537c7695fd96a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79811c8c7aabd4fae5ff3021ae67688fc6f6a820f784676bf4b8e41c0c71577d\",\"dweb:/ipfs/QmSo7DdJSzx4U5xvLPnCLNn2SFBPin8dHxYnJrrwxEYQje\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/src/interfaces/IECDSAStakeRegistryEventsAndErrors.sol\":{\"keccak256\":\"0x87d62369932af21f32ea3c66d3238e6b65fd90a00bfb537a639189f4d8ceb7dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6951c38bc040fdb1f35e117390a1936543974e062fcc519300365a68c800c88d\",\"dweb:/ipfs/QmVPjxkL1bLaA6EtthcoerTaMjAmJx8Lv1hchALEkNMfDH\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol\":{\"keccak256\":\"0x5e07f7bdcdf5baaadd43d86fee80036edffbe893f3396cb762eaae3f56f4cb89\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d990a5a16e8f0cfb313784e21583d0fd7cf05f5fe73796571aad30889baf27c\",\"dweb:/ipfs/QmPHQ3cTNVD7NxSiZ5xjSuLAkZyczFhckSuhwW9UNNgr6i\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManagerUI.sol\":{\"keccak256\":\"0x6c66bc2b0b2f5aabd2b90ca02d5b6696fc02d75a53567b16d8d81dd956fd7b1b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://284f9cc3f8eade3b022ab8c527aaa35bdd5e0355607abf6d5ef66fb2c9ce90cd\",\"dweb:/ipfs/QmYi856BQNY6G2FTqAGY9qzWPp27QmiytwnfNtfwPN7Cqm\"]},\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol\":{\"keccak256\":\"0x41a94f5a3e38c0907c9b47da511db1d9a545b0175e79a302c15723118db1db07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c875b9516f4dd56a74cb2808c04826769cdccb8e25e01a77227e4fdcc494500b\",\"dweb:/ipfs/QmdyQdsCYyHPxquAY5kcVGdm5AcfX483YSvyYdLGCfWfuq\"]},\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistryStorage.sol\":{\"keccak256\":\"0xd78e86c73c9b5b588281ac78051e97b5c32f766383575750c9245f4fec1b547c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c917f123adc35cd48a60a768abea19c7c99487c82260429571ae093235e902a\",\"dweb:/ipfs/QmaiLzxQ1GxPk9oxcgVXPtBBviSW9dVEsmC4xZgvWLxko8\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IDelegationManager","name":"_delegationManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"InsufficientSignedStake"},{"inputs":[],"type":"error","name":"InsufficientWeight"},{"inputs":[],"type":"error","name":"InvalidLength"},{"inputs":[],"type":"error","name":"InvalidQuorum"},{"inputs":[],"type":"error","name":"InvalidReferenceBlock"},{"inputs":[],"type":"error","name":"InvalidSignature"},{"inputs":[],"type":"error","name":"InvalidSignedWeight"},{"inputs":[],"type":"error","name":"InvalidThreshold"},{"inputs":[],"type":"error","name":"LengthMismatch"},{"inputs":[],"type":"error","name":"MustUpdateAllOperators"},{"inputs":[],"type":"error","name":"NotSorted"},{"inputs":[],"type":"error","name":"OperatorAlreadyRegistered"},{"inputs":[],"type":"error","name":"OperatorNotRegistered"},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_old","type":"uint256","indexed":false},{"internalType":"uint256","name":"_new","type":"uint256","indexed":false}],"type":"event","name":"MinimumWeightUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_operator","type":"address","indexed":true},{"internalType":"address","name":"_avs","type":"address","indexed":true}],"type":"event","name":"OperatorDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"_operator","type":"address","indexed":true},{"internalType":"address","name":"_avs","type":"address","indexed":true}],"type":"event","name":"OperatorRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"_operator","type":"address","indexed":true},{"internalType":"uint256","name":"oldWeight","type":"uint256","indexed":false},{"internalType":"uint256","name":"newWeight","type":"uint256","indexed":false}],"type":"event","name":"OperatorWeightUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"struct Quorum","name":"_old","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"indexed":false},{"internalType":"struct Quorum","name":"_new","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"indexed":false}],"type":"event","name":"QuorumUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint256","name":"updateBlock","type":"uint256","indexed":true},{"internalType":"address","name":"newSigningKey","type":"address","indexed":true},{"internalType":"address","name":"oldSigningKey","type":"address","indexed":false}],"type":"event","name":"SigningKeyUpdate","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_thresholdWeight","type":"uint256","indexed":false}],"type":"event","name":"ThresholdWeightUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldTotalWeight","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTotalWeight","type":"uint256","indexed":false}],"type":"event","name":"TotalWeightUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldMinimumWeight","type":"uint256","indexed":false},{"internalType":"uint256","name":"newMinimumWeight","type":"uint256","indexed":false}],"type":"event","name":"UpdateMinimumWeight","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"getLastCheckpointOperatorWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastCheckpointThresholdWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"_blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getLastCheckpointThresholdWeightAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastCheckpointTotalWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"_blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getLastCheckpointTotalWeightAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"getLastestOperatorSigningKey","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getOperatorSigningKeyAtBlock","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"getOperatorWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"uint32","name":"_blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getOperatorWeightAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_serviceManager","type":"address"},{"internalType":"uint256","name":"_thresholdWeight","type":"uint256"},{"internalType":"struct Quorum","name":"_quorum","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"bytes32","name":"_dataHash","type":"bytes32"},{"internalType":"bytes","name":"_signatureData","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"minimumWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"operatorRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"quorum","outputs":[{"internalType":"struct Quorum","name":"","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]}]},{"inputs":[{"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"_operatorSignature","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"address","name":"_signingKey","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerOperatorWithSignature"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"uint256","name":"_newMinimumWeight","type":"uint256"},{"internalType":"address[]","name":"_operators","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"updateMinimumWeight"},{"inputs":[{"internalType":"address","name":"_newSigningKey","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorSigningKey"},{"inputs":[{"internalType":"address[]","name":"_operators","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"updateOperators"},{"inputs":[{"internalType":"address[][]","name":"operatorsPerQuorum","type":"address[][]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorsForQuorum"},{"inputs":[{"internalType":"struct Quorum","name":"_quorum","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]},{"internalType":"address[]","name":"_operators","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"updateQuorumConfig"},{"inputs":[{"internalType":"uint256","name":"_thresholdWeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateStakeThreshold"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Constructor to create ECDSAStakeRegistry.","params":{"_delegationManager":"Address of the DelegationManager contract that this registry interacts with."}},"getLastCheckpointOperatorWeight(address)":{"params":{"_operator":"The address of the operator."},"returns":{"_0":"uint256 - The latest weight of the operator."}},"getLastCheckpointThresholdWeight()":{"returns":{"_0":"uint256 - The latest threshold weight."}},"getLastCheckpointThresholdWeightAtBlock(uint32)":{"params":{"_blockNumber":"The block number to get the threshold weight for the quorum"},"returns":{"_0":"uint256 - The threshold weight the given block."}},"getLastCheckpointTotalWeight()":{"returns":{"_0":"uint256 - The latest total weight."}},"getLastCheckpointTotalWeightAtBlock(uint32)":{"params":{"_blockNumber":"The block number to get the total weight for the quorum"},"returns":{"_0":"uint256 - The total weight at the given block."}},"getLastestOperatorSigningKey(address)":{"params":{"_operator":"The address of the operator."},"returns":{"_0":"The latest signing key of the operator."}},"getOperatorSigningKeyAtBlock(address,uint256)":{"params":{"_blockNumber":"The block number to get the operator's signing key.","_operator":"The address of the operator."},"returns":{"_0":"The signing key of the operator at the given block."}},"getOperatorWeight(address)":{"params":{"_operator":"The address of the operator."},"returns":{"_0":"uint256 - The current weight of the operator; returns 0 if below the threshold."}},"getOperatorWeightAtBlock(address,uint32)":{"params":{"_blockNumber":"The block number to get the operator weight for the quorum","_operator":"The address of the operator."},"returns":{"_0":"uint256 - The weight of the operator at the given block."}},"initialize(address,uint256,((address,uint96)[]))":{"params":{"_quorum":"The quorum struct containing the details of the quorum thresholds.","_serviceManager":"The address of the service manager.","_thresholdWeight":"The threshold weight in basis points."}},"isValidSignature(bytes32,bytes)":{"params":{"_dataHash":"The hash of the data that was signed.","_signatureData":"Encoded signature data consisting of an array of operators, an array of signatures, and a reference block number."},"returns":{"_0":"The function selector that indicates the signature is valid according to ERC1271 standard."}},"owner()":{"details":"Returns the address of the current owner."},"quorum()":{"returns":{"_0":"Quorum - The current quorum of strategies and weights"}},"registerOperatorWithSignature((bytes,bytes32,uint256),address)":{"params":{"_operatorSignature":"Contains the operator's signature, salt, and expiry","_signingKey":"The signing key to add to the operator's history"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateMinimumWeight(uint256,address[])":{"details":"Access controlled to the contract owner","params":{"_newMinimumWeight":"The new weight an operator must have to join the operator set"}},"updateOperatorSigningKey(address)":{"details":"Only callable by the operator themselves","params":{"_newSigningKey":"The new signing key to set for the operator"}},"updateOperators(address[])":{"details":"Queries stakes from the Eigenlayer core DelegationManager contract","params":{"_operators":"A list of operator addresses to update"}},"updateOperatorsForQuorum(address[][],bytes)":{"details":"This interface maintains compatibility with avs-sync which handles multiquorums while this registry has a single quorum","params":{"operatorsPerQuorum":"An array of operator address arrays, one for each quorum."}},"updateQuorumConfig(((address,uint96)[]),address[])":{"details":"Only callable by the contract owner. It first updates the quorum configuration and then updates the list of operators.","params":{"_operators":"The list of operator addresses to update stakes for","_quorum":"The new quorum configuration, including strategies and their new weights"}},"updateStakeThreshold(uint256)":{"details":"This function can only be invoked by the owner of the contract. It delegates the update to an internal function `_updateStakeThreshold`.","params":{"_thresholdWeight":"The updated threshold weight required to validate a message. This is the cumulative weight that must be met or exceeded by the sum of the stakes of the signatories for a message to be deemed valid."}}},"version":1},"userdoc":{"kind":"user","methods":{"deregisterOperator()":{"notice":"Deregisters an existing operator"},"getLastCheckpointOperatorWeight(address)":{"notice":"Retrieves the last recorded weight for a given operator."},"getLastCheckpointThresholdWeight()":{"notice":"Retrieves the last recorded threshold weight"},"getLastCheckpointThresholdWeightAtBlock(uint32)":{"notice":"Retrieves the threshold weight at a specific block number."},"getLastCheckpointTotalWeight()":{"notice":"Retrieves the last recorded total weight across all operators."},"getLastCheckpointTotalWeightAtBlock(uint32)":{"notice":"Retrieves the total weight at a specific block number."},"getLastestOperatorSigningKey(address)":{"notice":"Retrieves the latest signing key for a given operator."},"getOperatorSigningKeyAtBlock(address,uint256)":{"notice":"Retrieves the latest signing key for a given operator at a specific block number."},"getOperatorWeight(address)":{"notice":"Calculates the current weight of an operator based on their delegated stake in the strategies considered in the quorum"},"getOperatorWeightAtBlock(address,uint32)":{"notice":"Retrieves the operator's weight at a specific block number."},"initialize(address,uint256,((address,uint96)[]))":{"notice":"Initializes the contract with the given parameters."},"isValidSignature(bytes32,bytes)":{"notice":"Verifies if the provided signature data is valid for the given data hash."},"minimumWeight()":{"notice":"Returns the weight an operator must have to contribute to validating an AVS"},"quorum()":{"notice":"Retrieves the current stake quorum details."},"registerOperatorWithSignature((bytes,bytes32,uint256),address)":{"notice":"Registers a new operator using a provided signature and signing key"},"updateMinimumWeight(uint256,address[])":{"notice":"Updates the weight an operator must have to join the operator set"},"updateOperatorSigningKey(address)":{"notice":"Updates the signing key for an operator"},"updateOperators(address[])":{"notice":"Updates the StakeRegistry's view of one or more operators' stakes adding a new entry in their history of stake checkpoints,"},"updateOperatorsForQuorum(address[][],bytes)":{"notice":"Updates the set of operators for the first quorum."},"updateQuorumConfig(((address,uint96)[]),address[])":{"notice":"Updates the quorum configuration and the set of operators"},"updateStakeThreshold(uint256)":{"notice":"Sets a new cumulative threshold weight for message validation by operator set signatures."}},"version":1}},"settings":{"remappings":["@eigenlayer/contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/","@eigenlayer/middleware/=lib/eigenlayer-middleware/","@eigenlayer/test/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/test/","@layer/=contracts/solidity/","@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol":"ECDSAStakeRegistry"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0xe81ddde979612b77f32ff93d18118326304f8606671abc22b491d005aa4ca924","urls":["bzz-raw://0ade6ec99eaed94cee212880292abe32d24d2d7cd2babbc0d971dd2d8b8fc3e3","dweb:/ipfs/QmWs5JE1JfDB1KvrGU3XAhnopa9sdMwTGW6AQJPGQMvuaT"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol":{"keccak256":"0x39529942c9f3bab419e0570e3c51c27b49803fb0b3821a0fd06f47ab8835ed81","urls":["bzz-raw://da46171725cfe3dd23c0a4f58abf2565eb7db619495fa4fb8bab55aaff9d9c7a","dweb:/ipfs/QmeEVMVWF4peGBEK72rcedp6sWwhuYcVj8q728zrnTzZ6A"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4","urls":["bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b","dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9","urls":["bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e","dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888","urls":["bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a","dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1271Upgradeable.sol":{"keccak256":"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0","urls":["bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d","dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e","urls":["bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497","dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3","urls":["bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4","dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol":{"keccak256":"0x7fb4716864bc9693785f07ce15f325a44413ad5d2d5685852a9e6112927abd60","urls":["bzz-raw://2abe805bc615c15daea179f3ff3e3b890f9c0d5ec18d0bb8fad03ab128157ee3","dweb:/ipfs/Qma4UizH7DhTeDfGfkhFFKLnU6p8U9cmodTbgTdRzeFoXX"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol":{"keccak256":"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863","urls":["bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c","dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol":{"keccak256":"0xe8c62ca00ed2d0a4d9b7e3c4bf7d62c821618b2cdb3c844da91a1193986851bf","urls":["bzz-raw://2a459d8907c5fe73d70b4c522e48127b13b9aaa29a223670e928a2a5e5e4c8f8","dweb:/ipfs/QmcwBnMVrajEBgj2i1saNXnQ6ytHQdnpQF978E86EuhvtX"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol":{"keccak256":"0xb19a57535ad6c6d773f61c1e8f8cc190fa35e12bfadf3743092537c7695fd96a","urls":["bzz-raw://79811c8c7aabd4fae5ff3021ae67688fc6f6a820f784676bf4b8e41c0c71577d","dweb:/ipfs/QmSo7DdJSzx4U5xvLPnCLNn2SFBPin8dHxYnJrrwxEYQje"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol":{"keccak256":"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a","urls":["bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70","dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834","urls":["bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b","dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/eigenlayer-middleware/src/interfaces/IECDSAStakeRegistryEventsAndErrors.sol":{"keccak256":"0x87d62369932af21f32ea3c66d3238e6b65fd90a00bfb537a639189f4d8ceb7dc","urls":["bzz-raw://6951c38bc040fdb1f35e117390a1936543974e062fcc519300365a68c800c88d","dweb:/ipfs/QmVPjxkL1bLaA6EtthcoerTaMjAmJx8Lv1hchALEkNMfDH"],"license":"MIT"},"lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol":{"keccak256":"0x5e07f7bdcdf5baaadd43d86fee80036edffbe893f3396cb762eaae3f56f4cb89","urls":["bzz-raw://2d990a5a16e8f0cfb313784e21583d0fd7cf05f5fe73796571aad30889baf27c","dweb:/ipfs/QmPHQ3cTNVD7NxSiZ5xjSuLAkZyczFhckSuhwW9UNNgr6i"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IServiceManagerUI.sol":{"keccak256":"0x6c66bc2b0b2f5aabd2b90ca02d5b6696fc02d75a53567b16d8d81dd956fd7b1b","urls":["bzz-raw://284f9cc3f8eade3b022ab8c527aaa35bdd5e0355607abf6d5ef66fb2c9ce90cd","dweb:/ipfs/QmYi856BQNY6G2FTqAGY9qzWPp27QmiytwnfNtfwPN7Cqm"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol":{"keccak256":"0x41a94f5a3e38c0907c9b47da511db1d9a545b0175e79a302c15723118db1db07","urls":["bzz-raw://c875b9516f4dd56a74cb2808c04826769cdccb8e25e01a77227e4fdcc494500b","dweb:/ipfs/QmdyQdsCYyHPxquAY5kcVGdm5AcfX483YSvyYdLGCfWfuq"],"license":"MIT"},"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistryStorage.sol":{"keccak256":"0xd78e86c73c9b5b588281ac78051e97b5c32f766383575750c9245f4fec1b547c","urls":["bzz-raw://6c917f123adc35cd48a60a768abea19c7c99487c82260429571ae093235e902a","dweb:/ipfs/QmaiLzxQ1GxPk9oxcgVXPtBBviSW9dVEsmC4xZgvWLxko8"],"license":"MIT"}},"version":1},"id":32}