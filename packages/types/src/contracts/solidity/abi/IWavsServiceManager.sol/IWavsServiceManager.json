{"abi":[{"type":"function","name":"getAllocationManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDelegationManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getLatestOperatorForSigningKey","inputs":[{"name":"signingKeyAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOperatorWeight","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getServiceURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStakeRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setServiceURI","inputs":[{"name":"_serviceURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validate","inputs":[{"name":"envelope","type":"tuple","internalType":"struct IWavsServiceHandler.Envelope","components":[{"name":"eventId","type":"bytes20","internalType":"bytes20"},{"name":"ordering","type":"bytes12","internalType":"bytes12"},{"name":"payload","type":"bytes","internalType":"bytes"}]},{"name":"signatureData","type":"tuple","internalType":"struct IWavsServiceHandler.SignatureData","components":[{"name":"signers","type":"address[]","internalType":"address[]"},{"name":"signatures","type":"bytes[]","internalType":"bytes[]"},{"name":"referenceBlock","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"view"},{"type":"event","name":"QuorumThresholdUpdated","inputs":[{"name":"numerator","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"denominator","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ServiceURIUpdated","inputs":[{"name":"serviceURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"error","name":"InsufficientQuorum","inputs":[{"name":"signerWeight","type":"uint256","internalType":"uint256"},{"name":"thresholdWeight","type":"uint256","internalType":"uint256"},{"name":"totalWeight","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InsufficientQuorumZero","inputs":[]},{"type":"error","name":"InvalidQuorumParameters","inputs":[]},{"type":"error","name":"InvalidSignature","inputs":[]},{"type":"error","name":"InvalidSignatureBlock","inputs":[]},{"type":"error","name":"InvalidSignatureLength","inputs":[]},{"type":"error","name":"InvalidSignatureOrder","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getAllocationManager()":"a28efd6b","getDelegationManager()":"b24e5a3a","getLatestOperatorForSigningKey(address)":"ac7cbfd9","getOperatorWeight(address)":"98ec1ac9","getServiceURI()":"cc922c6a","getStakeRegistry()":"bef4c839","setServiceURI(string)":"5f11301b","validate((bytes20,bytes12,bytes),(address[],bytes[],uint32))":"cd71589e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"signerWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thresholdWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"}],\"name\":\"InsufficientQuorum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientQuorumZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuorumParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"QuorumThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"serviceURI\",\"type\":\"string\"}],\"name\":\"ServiceURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAllocationManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDelegationManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signingKeyAddress\",\"type\":\"address\"}],\"name\":\"getLatestOperatorForSigningKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getServiceURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_serviceURI\",\"type\":\"string\"}],\"name\":\"setServiceURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes20\",\"name\":\"eventId\",\"type\":\"bytes20\"},{\"internalType\":\"bytes12\",\"name\":\"ordering\",\"type\":\"bytes12\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct IWavsServiceHandler.Envelope\",\"name\":\"envelope\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"uint32\",\"name\":\"referenceBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IWavsServiceHandler.SignatureData\",\"name\":\"signatureData\",\"type\":\"tuple\"}],\"name\":\"validate\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Lay3r Labs\",\"details\":\"This interface defines the functions and events for the Wavs service manager\",\"errors\":{\"InsufficientQuorum(uint256,uint256,uint256)\":[{\"params\":{\"signerWeight\":\"The weight of the signer\",\"thresholdWeight\":\"The threshold weight\",\"totalWeight\":\"The total weight\"}}]},\"events\":{\"QuorumThresholdUpdated(uint256,uint256)\":{\"params\":{\"denominator\":\"The denominator of the quorum threshold\",\"numerator\":\"The numerator of the quorum threshold\"}},\"ServiceURIUpdated(string)\":{\"params\":{\"serviceURI\":\"The service URI\"}}},\"kind\":\"dev\",\"methods\":{\"getAllocationManager()\":{\"returns\":{\"_0\":\"The allocation manager address.\"}},\"getDelegationManager()\":{\"returns\":{\"_0\":\"The delegation manager address.\"}},\"getLatestOperatorForSigningKey(address)\":{\"params\":{\"signingKeyAddress\":\"The address of the signing key.\"},\"returns\":{\"_0\":\"The latest operator address associated with the signing key, or address(0) if none.\"}},\"getOperatorWeight(address)\":{\"params\":{\"operator\":\"The address of the operator\"},\"returns\":{\"_0\":\"The current weight of the operator\"}},\"getServiceURI()\":{\"returns\":{\"_0\":\"The service URI.\"}},\"getStakeRegistry()\":{\"returns\":{\"_0\":\"The stake registry address.\"}},\"setServiceURI(string)\":{\"params\":{\"_serviceURI\":\"The service URI to update.\"}},\"validate((bytes20,bytes12,bytes),(address[],bytes[],uint32))\":{\"params\":{\"envelope\":\"The envelope containing the data.\",\"signatureData\":\"The signature data.\"}}},\"title\":\"IWavsServiceManager\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientQuorum(uint256,uint256,uint256)\":[{\"notice\":\"The error for the insufficient quorum\"}],\"InsufficientQuorumZero()\":[{\"notice\":\"The error for the insufficient quorum zero.\"}],\"InvalidQuorumParameters()\":[{\"notice\":\"The error for the invalid quorum parameters.\"}],\"InvalidSignature()\":[{\"notice\":\"The error for the invalid signature.\"}],\"InvalidSignatureBlock()\":[{\"notice\":\"The error for the invalid signature block.\"}],\"InvalidSignatureLength()\":[{\"notice\":\"The error for the invalid signature length.\"}],\"InvalidSignatureOrder()\":[{\"notice\":\"The error for the invalid signature order.\"}]},\"events\":{\"QuorumThresholdUpdated(uint256,uint256)\":{\"notice\":\"Event emitted when the quorum threshold is updated\"},\"ServiceURIUpdated(string)\":{\"notice\":\"Event emitted when the service URI is updated\"}},\"kind\":\"user\",\"methods\":{\"getAllocationManager()\":{\"notice\":\"Returns the allocation manager address.\"},\"getDelegationManager()\":{\"notice\":\"Returns the delegation manager address.\"},\"getLatestOperatorForSigningKey(address)\":{\"notice\":\"Returns the latest operator address associated with a signing key.\"},\"getOperatorWeight(address)\":{\"notice\":\"Gets the operator's current weight\"},\"getServiceURI()\":{\"notice\":\"Returns the service URI\"},\"getStakeRegistry()\":{\"notice\":\"Returns the stake registry address.\"},\"setServiceURI(string)\":{\"notice\":\"Sets the service URI\"},\"validate((bytes20,bytes12,bytes),(address[],bytes[],uint32))\":{\"notice\":\"Validates a signed envelope\"}},\"notice\":\"Interface for the Wavs service manager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"examples/contracts/solidity/interfaces/IWavsServiceManager.sol\":\"IWavsServiceManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"examples/contracts/solidity/interfaces/IWavsServiceHandler.sol\":{\"keccak256\":\"0x427e63f26320f27f53975554ff530953d81fb51b681fca950754b576ce83a267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d39520e0561d2f65a04b76c265f7ede71feab34fc0e1bd9f21b868353b9c2b0a\",\"dweb:/ipfs/QmWgvBY8pim9hNLNFDRZyob4PvRmuxEoRSyqABkUNpDcef\"]},\"examples/contracts/solidity/interfaces/IWavsServiceManager.sol\":{\"keccak256\":\"0xc4abed1f1f462a601b8f855c6d16bcc97ac9e5eb081f82ca6bedb6420cd1c9b7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://27c6906e991bbbe4a589b97d3f883bfb66c6b86463f9e1ff0fb68ac9845ef3f1\",\"dweb:/ipfs/QmYh9y385CszJ4m8TSbqLkTwzFwYyUEBX8KNwvHCjEuXWn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"signerWeight","type":"uint256"},{"internalType":"uint256","name":"thresholdWeight","type":"uint256"},{"internalType":"uint256","name":"totalWeight","type":"uint256"}],"type":"error","name":"InsufficientQuorum"},{"inputs":[],"type":"error","name":"InsufficientQuorumZero"},{"inputs":[],"type":"error","name":"InvalidQuorumParameters"},{"inputs":[],"type":"error","name":"InvalidSignature"},{"inputs":[],"type":"error","name":"InvalidSignatureBlock"},{"inputs":[],"type":"error","name":"InvalidSignatureLength"},{"inputs":[],"type":"error","name":"InvalidSignatureOrder"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256","indexed":true},{"internalType":"uint256","name":"denominator","type":"uint256","indexed":true}],"type":"event","name":"QuorumThresholdUpdated","anonymous":false},{"inputs":[{"internalType":"string","name":"serviceURI","type":"string","indexed":false}],"type":"event","name":"ServiceURIUpdated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"getAllocationManager","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDelegationManager","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"signingKeyAddress","type":"address"}],"stateMutability":"view","type":"function","name":"getLatestOperatorForSigningKey","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getOperatorWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getServiceURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStakeRegistry","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"_serviceURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setServiceURI"},{"inputs":[{"internalType":"struct IWavsServiceHandler.Envelope","name":"envelope","type":"tuple","components":[{"internalType":"bytes20","name":"eventId","type":"bytes20"},{"internalType":"bytes12","name":"ordering","type":"bytes12"},{"internalType":"bytes","name":"payload","type":"bytes"}]},{"internalType":"struct IWavsServiceHandler.SignatureData","name":"signatureData","type":"tuple","components":[{"internalType":"address[]","name":"signers","type":"address[]"},{"internalType":"bytes[]","name":"signatures","type":"bytes[]"},{"internalType":"uint32","name":"referenceBlock","type":"uint32"}]}],"stateMutability":"view","type":"function","name":"validate"}],"devdoc":{"kind":"dev","methods":{"getAllocationManager()":{"returns":{"_0":"The allocation manager address."}},"getDelegationManager()":{"returns":{"_0":"The delegation manager address."}},"getLatestOperatorForSigningKey(address)":{"params":{"signingKeyAddress":"The address of the signing key."},"returns":{"_0":"The latest operator address associated with the signing key, or address(0) if none."}},"getOperatorWeight(address)":{"params":{"operator":"The address of the operator"},"returns":{"_0":"The current weight of the operator"}},"getServiceURI()":{"returns":{"_0":"The service URI."}},"getStakeRegistry()":{"returns":{"_0":"The stake registry address."}},"setServiceURI(string)":{"params":{"_serviceURI":"The service URI to update."}},"validate((bytes20,bytes12,bytes),(address[],bytes[],uint32))":{"params":{"envelope":"The envelope containing the data.","signatureData":"The signature data."}}},"version":1},"userdoc":{"kind":"user","methods":{"getAllocationManager()":{"notice":"Returns the allocation manager address."},"getDelegationManager()":{"notice":"Returns the delegation manager address."},"getLatestOperatorForSigningKey(address)":{"notice":"Returns the latest operator address associated with a signing key."},"getOperatorWeight(address)":{"notice":"Gets the operator's current weight"},"getServiceURI()":{"notice":"Returns the service URI"},"getStakeRegistry()":{"notice":"Returns the stake registry address."},"setServiceURI(string)":{"notice":"Sets the service URI"},"validate((bytes20,bytes12,bytes),(address[],bytes[],uint32))":{"notice":"Validates a signed envelope"}},"version":1}},"settings":{"remappings":[],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"examples/contracts/solidity/interfaces/IWavsServiceManager.sol":"IWavsServiceManager"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"examples/contracts/solidity/interfaces/IWavsServiceHandler.sol":{"keccak256":"0x427e63f26320f27f53975554ff530953d81fb51b681fca950754b576ce83a267","urls":["bzz-raw://d39520e0561d2f65a04b76c265f7ede71feab34fc0e1bd9f21b868353b9c2b0a","dweb:/ipfs/QmWgvBY8pim9hNLNFDRZyob4PvRmuxEoRSyqABkUNpDcef"],"license":"MIT"},"examples/contracts/solidity/interfaces/IWavsServiceManager.sol":{"keccak256":"0xc4abed1f1f462a601b8f855c6d16bcc97ac9e5eb081f82ca6bedb6420cd1c9b7","urls":["bzz-raw://27c6906e991bbbe4a589b97d3f883bfb66c6b86463f9e1ff0fb68ac9845ef3f1","dweb:/ipfs/QmYh9y385CszJ4m8TSbqLkTwzFwYyUEBX8KNwvHCjEuXWn"],"license":"UNLICENSED"}},"version":1},"id":4}