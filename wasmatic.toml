# these values can be overriden by environment variables
# by following the pattern MATIC_<UPPERCASE_KEY>
# so for example, the key `port` can be overriden by setting the environment variable `MATIC_PORT`
# for arrays use a comma-separated list in a single string
# e.g. MATIC_LOG_LEVEL="info, wasmatic=debug" or MATIC_CORS_ALLOWED_ORIGINS="https://example.com, https://example2.com"

# the port on which the server will listen. Default is 8000
# port = 9000

# The log level, in the format of tracing directives. Default is ["info"]
# See https://docs.rs/tracing-subscriber/latest/tracing_subscriber/filter/struct.EnvFilter.html#directives for more information
# e.g. MATIC_LOG_LEVEL="info, wasmatic=debug"
log_level = ["info", "wasmatic=debug"]

# the allowed cors origins. Default is empty list.
cors_allowed_origins = ["https://lay3rlabs.github.io/*", "http://localhost:*", "http://127.0.0.1:*"]

# the host to serve on. Default is localhost
# host = "localhost"

# the directory to store the data. Default is "/var/wasmatic"
# data = "~/wasmatic/data"

# chosen chain name 
# chain = "localnode"

# chain config
# localhost is local testing when you run the image outside of the docker-compose network
[chains.localhost]
chain_id = "slay3r-local"
rpc_endpoint = "http://localhost:26657"
grpc_endpoint = "http://localhost:9090"
gas_price = 0.025
faucet_endpoint = "http://localhost:8000"

# localnode is local testing inside localnode docker-compose network
[chains.localnode]
chain_id = "slay3r-local"
rpc_endpoint = "http://cometbft:26657"
grpc_endpoint = "http://slay3r:9090"
gas_price = 0.025
faucet_endpoint = "http://faucet:8000"

# hacknet is our public facing pseudo-testnet for hackathons
[chains.hacknet]
chain_id = "layer-hack-1"
rpc_endpoint = "https://rpc.hack.layer.xyz:443"
grpc_endpoint = "https://grpc.hack.layer.xyz:443"
gas_price = 0.025
gas_denom = "ulayer"
faucet_endpoint = "https://rabbit.hack.layer.xyz"
