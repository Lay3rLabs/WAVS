[workspace]
members = [
  "packages/*",
  "examples/components/cosmos-query",
  "examples/components/chain-trigger-lookup",
  "examples/components/echo-data",
  "examples/components/square",
  "examples/components/permissions",
  "examples/components/echo-block-interval",
  "examples/components/echo-cron-interval",
  "examples/components/_helpers",
  "examples/components/_types",
  "examples/components/kv-store",
  "examples/components/simple-aggregator",
  "examples/contracts/cosmwasm/simple",
]
resolver = "2"

[profile.dev]
split-debuginfo = "unpacked"

[profile.test]
split-debuginfo = "unpacked"

[workspace.package]
edition = "2021"
version = "0.5.2"
license = "GPL-3.0-or-later"
authors = ["Layer Labs (Cayman)"]
repository = "https://github.com/Lay3rLabs/WAVS"
rust-version = "1.85.0"

[workspace.dependencies]
# http utilities
axum = { version = "0.8.4", features = ["macros"] }
http-body-util = "0.1.3"
reqwest = { version = "0.12.22", features = ["json"] }
tower-http = { version = "0.6.6", features = ["cors", "trace"] }
tower = { version = "0.5.2", features = ["util"] }
url = "2.5.4"
cid = "0.11.1"

# utoipa for OpenAPI
utoipa = { version = "5.4.0", features = ["axum_extras", "macros"] }
utoipa-swagger-ui = { version = "9.0.2", features = ["axum"] }

# error handling and logging
anyhow = "1.0.98"
axum-tracing-opentelemetry = "0.29.0"
opentelemetry = { version = "0.30.0", default-features = false, features = [
  "trace",
] }
opentelemetry-jaeger-propagator = "0.30.0"
opentelemetry-otlp = { version = "0.30.0", default-features = false, features = [
  "trace",
  "grpc-tonic",
  "metrics",
  "http-proto",
  "reqwest-blocking-client",
] }
opentelemetry_sdk = { version = "0.30.0", default-features = false, features = [
  "trace",
  "rt-tokio",
] }
tracing-opentelemetry = { version = "0.31.0", default-features = false, features = [
  "metrics",
] }
thiserror = "2.0.12"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }

# cli and config
clap = { version = "4.5.40", features = ["derive", "env", "string"] }
dotenvy = { version = "0.15.7", features = ["cli"] }
dirs = "6.0.0"
shellexpand = "3.1.1"

# async runtime
tokio = { version = "1.46.1", features = ["full"] }
tokio-stream = { version = "0.1" }
futures = "0.3.31"
async-stream = "0.3"
rayon = "1.10.0"
ctrlc = "3.4.7"
temp-env = { version = "0.3.6", features = ["async_closure"] }
async-trait = "0.1.88"

# collections
dashmap = "6.1.0"
bimap = { version = "0.6.3", features = ["serde"] }

# fs
tempfile = "3.20.0"
walkdir = "2.5.0"
wildmatch = "2.4.0"

# EVM-specific dependencies
alloy-node-bindings = "1.0.19"
alloy-json-abi = "1.2.1"
alloy-primitives = { version = "1.2.1", features = ["serde"] }
alloy-provider = { version = "1.0.19", features = ["anvil-node", "ws"] }
alloy-sol-types = "1.2.1"
alloy-sol-macro = { version = "1.2.1", features = ["json"] }
alloy-transport = "1.0.19"
alloy-contract = "1.0.19"
alloy-signer = "1.0.19"
alloy-signer-local = { version = "1.0.19", features = ["mnemonic"] }
alloy-network = "1.0.19"
alloy-rpc-types-eth = "1.0.19"
layer-climb = "0.5.1"
layer-climb-address = "0.5.1"
layer-climb-cli = "0.5.1"

# Cosmos-specific dependencies
cosmwasm-schema = "3.0.1"
cosmwasm-std = { version = "3.0.1", features = ["stargate"] }
cw-storage-plus = "3.0.0"
cw2 = "3.0.0"
wstd = "0.5.3"

# SVM-specific dependencies
solana-client = "2.3.6"
solana-sdk = "2.3.1"
solana-pubsub-client = "2.3.6"
bs58 = "0.5"

# WASM and WIT bindings
wasm-pkg-client = "0.11.0"
wasm-pkg-common = "0.11.0"
wasmtime = { version = "34.0.1", features = [
  "cache",
  "component-model",
  "runtime",
  "std",
] }
wasmtime-wasi = { version = "34.0.1", default-features = true }
wasmtime-wasi-http = "34.0.1"
wit-bindgen = "0.43.0"
wavs-wasi-utils = "0.5.0"

# benchmarking
criterion = { version = "0.6.0", features = ["async_tokio"] }

# serialization
bincode = { version = "2.0.1", features = ["serde"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
figment = { version = "0.10.19", features = ["toml", "env"] }

# randomness
rand = "0.9.1"
bip39 = "2.2.0"

# hashing
sha2 = "0.10.9"
const-hex = "1.14.1"
ripemd = "0.1.3"

# database
redb = { version = "2.6" }
lru = "0.16.0"

# time
chrono = "0.4.41"
cron = { version = "0.15.0", features = ["serde"] }
uuid = { version = "1.17.0", features = ["v7", "serde"] }

# utilis
cfg-if = "1.0.1"

# versioning
semver = { version = "1.0.26", features = ["serde"] }

# local
utils = { path = "packages/utils" }
wavs = { path = "packages/wavs" }
wavs-engine = { path = "packages/engine" }
wavs-types = { path = "packages/types" }
wavs-cli = { path = "packages/cli" }
wavs-aggregator = { path = "packages/aggregator" }
wavs-benchmark-common = { path = "packages/wavs/benches/common" }
example-helpers = { path = "examples/components/_helpers" }
example-types = { path = "examples/components/_types" }
example-contract-cosmwasm-simple = { path = "examples/contracts/cosmwasm/simple", package = "simple-example" }
